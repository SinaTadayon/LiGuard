{
  "address": "0x2A512D513D329047566c76f1d472c92195C276F9",
  "abi": [
    {
      "inputs": [],
      "name": "LIB_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIB_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xaba12aa612af8c66acca05435d8f62816d52eb4cc5ad613173e494d00ea81f05",
  "receipt": {
    "to": null,
    "from": "0xCB93d383638cc7B174FE2139Dec8570521Bb8118",
    "contractAddress": "0x2A512D513D329047566c76f1d472c92195C276F9",
    "transactionIndex": 52,
    "gasUsed": "996046",
    "logsBloom": "0x
    "blockHash": "0x4d013ec8c70c2af5a21453a5b06c7f95849c55531ab31dee6ca5d6210e57ba98",
    "transactionHash": "0xaba12aa612af8c66acca05435d8f62816d52eb4cc5ad613173e494d00ea81f05",
    "logs": [
      {
        "transactionIndex": 52,
        "blockNumber": 40018793,
        "transactionHash": "0xaba12aa612af8c66acca05435d8f62816d52eb4cc5ad613173e494d00ea81f05",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000cb93d383638cc7b174fe2139dec8570521bb8118",
          "0x0000000000000000000000009ead03f7136fc6b4bdb0780b00a1c14ae5a8b6d0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000006b929373d004240000000000000000000000000000000000000000000000024f146613b0f649b20000000000000000000000000000000000000000000003941ef1190d6cc175590000000000000000000000000000000000000000000000024ea8d3803d26458e0000000000000000000000000000000000000000000003941f5caba0e091797d",
        "logIndex": 206,
        "blockHash": "0x4d013ec8c70c2af5a21453a5b06c7f95849c55531ab31dee6ca5d6210e57ba98"
      }
    ],
    "blockNumber": 40018793,
    "cumulativeGasUsed": "10515787",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bf3d37f12163392c6a812b5af749abec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LIB_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIB_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sina Tadayon, https://github.com/SinaTadayon\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Token ERC20 Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/lib/token/LTokenERC20.sol\":\"LTokenERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/acl/IACL.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v3.0.0)\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title Access Control Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IACL {\\n  enum AuthorizationStatus {\\n    PERMITTED,\\n    UNAUTHORIZED,\\n    POLICY_FORBIDDEN,\\n    CALL_FORBIDDEN,\\n    ROLE_SCOPE_FORBIDDEN,\\n    MEMBER_NOT_FOUND,\\n    ROLE_NOT_FOUND,\\n    TYPE_NOT_FOUND,\\n    FUNCTION_NOT_FOUND,\\n    CONTEXT_NOT_FOUND,\\n    REALM_NOT_FOUND,\\n    DOMAIN_NOT_FOUND,\\n    MEMBER_ACTIVITY_FORBIDDEN,\\n    ROLE_ACTIVITY_FORBIDDEN,\\n    TYPE_ACTIVITY_FORBIDDEN,\\n    FUNCTION_ACTIVITY_FORBIDDEN,\\n    CONTEXT_ACTIVITY_FORBIDDEN,\\n    REALM_ACTIVITY_FORBIDDEN,\\n    DOMAIN_ACTIVITY_FORBIDDEN,\\n    UNIVERSE_ACTIVITY_FORBIDDEN\\n  }\\n\\n  error ACLUnauthorized();\\n  error ACLPolicyForbidden();\\n  error ACLCallForbidden();\\n  error ACLRoleScopeForbidden();\\n  error ACLMemberNotFound();\\n  error ACLRoleNotFound();\\n  error ACLTypeNotFound();\\n  error ACLFunctionNotFound();\\n  error ACLContextNotFound();\\n  error ACLRealmNotFound();\\n  error ACLDomainNotFound();\\n  error ACLMemberActivityForbidden();\\n  error ACLRoleActivityForbidden();\\n  error ACLTypeActivityForbidden();\\n  error ACLFunctionActivityForbidden();\\n  error ACLContextActivityForbidden();\\n  error ACLRealmActivityForbidden();\\n  error ACLDomainActivityForbidden();\\n  error ACLUniverseActivityForbidden();\\n\\n  error ACLActionForbidden(AuthorizationStatus);\\n\\n  enum AdminAccessStatus {\\n    PERMITTED,\\n    NOT_PERMITTED,\\n    POLICY_FORBIDDEN,\\n    ROLE_NOT_FOUND,\\n    TYPE_NOT_FOUND,\\n    FUNCTION_NOT_FOUND,\\n    ROLE_ACTIVITY_FORBIDDEN,\\n    TYPE_ACTIVITY_FORBIDDEN\\n  }\\n\\n  error AdminAccessNotPermitted();\\n  error AdminAccessPolicyForbidden();\\n  error AdminAccessRoleNotFound();\\n  error AdminAccessTypeNotFound();\\n  error AdminAccessFunctionNotFound();\\n  error AdminAccessRoleActivityForbidden();\\n  error AdminAccessTypeActivityForbidden();\\n\\n  error SetAdminForbidden(AdminAccessStatus);\\n\\n  function hasAccess(bytes32 functionId) external returns (AuthorizationStatus);\\n\\n  function hasMemberAccess(bytes32 functionId, bytes32 memberId) external returns (AuthorizationStatus);\\n\\n  function hasCSAccess(address contractId, bytes4 selector) external returns (AuthorizationStatus);\\n\\n  function hasAccountAccess(\\n    address contractId,\\n    bytes4 selector,\\n    address accountId\\n  ) external returns (AuthorizationStatus);\\n}\\n\",\"keccak256\":\"0x3b4bd5cd73079a4bcbc82fe3699b21fcc08fdafc964f978a9c540756302dbb2e\",\"license\":\"MIT\"},\"src/contracts/lib/LCounters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n// Author: OpenZeppelin\\n\\npragma solidity 0.8.19;\\n\\nlibrary LCounters {\\n  struct Counter {\\n    // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n    // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n    // this feature: see https://github.com/ethereum/solidity/issues/4637\\n    uint256 _value; // default: 0\\n  }\\n\\n  function current(Counter storage counter) internal view returns (uint256) {\\n    return counter._value;\\n  }\\n\\n  function increment(Counter storage counter) internal {\\n    unchecked {\\n      counter._value += 1;\\n    }\\n  }\\n\\n  function decrement(Counter storage counter) internal {\\n    uint256 value = counter._value;\\n    require(value > 0, \\\"Counter: decrement overflow\\\");\\n    unchecked {\\n      counter._value = value - 1;\\n    }\\n  }\\n\\n  function reset(Counter storage counter) internal {\\n    counter._value = 0;\\n  }\\n}\\n\",\"keccak256\":\"0xb7c876bfb46e0f5ce106b23f78a3290a2fba752ffac9d67245af2e4293f3ae90\",\"license\":\"MIT\"},\"src/contracts/lib/struct/LEnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n// Author: OpenZeppelin\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary LEnumerableSet {\\n  // To implement this library for multiple types with as little code\\n  // repetition as possible, we write it in terms of a generic Set type with\\n  // bytes32 values.\\n  // The Set implementation uses private functions, and user-facing\\n  // implementations (such as AddressSet) are just wrappers around the\\n  // underlying Set.\\n  // This means that we can only create new EnumerableSets for types that fit\\n  // in bytes32.\\n\\n  struct Set {\\n    // Storage of set values\\n    bytes32[] _values;\\n    // Position of the value in the `values` array, plus 1 because index 0\\n    // means a value is not in the set.\\n    mapping(bytes32 => uint256) _indexes;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function _add(Set storage set, bytes32 value) private returns (bool) {\\n    if (!_contains(set, value)) {\\n      set._values.push(value);\\n      // The value is stored at length-1, but we add 1 to all indexes\\n      // and use 0 as a sentinel value\\n      set._indexes[value] = set._values.length;\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function _remove(Set storage set, bytes32 value) private returns (bool) {\\n    // We read and store the value's index to prevent multiple reads from the same storage slot\\n    uint256 valueIndex = set._indexes[value];\\n\\n    if (valueIndex != 0) {\\n      // Equivalent to contains(set, value)\\n      // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n      // the array, and then remove the last element (sometimes called as 'swap and pop').\\n      // This modifies the order of the array, as noted in {at}.\\n\\n      uint256 toDeleteIndex = valueIndex - 1;\\n      uint256 lastIndex = set._values.length - 1;\\n\\n      if (lastIndex != toDeleteIndex) {\\n        bytes32 lastValue = set._values[lastIndex];\\n\\n        // Move the last value to the index where the value to delete is\\n        set._values[toDeleteIndex] = lastValue;\\n        // Update the index for the moved value\\n        set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n      }\\n\\n      // Delete the slot where the moved value was stored\\n      set._values.pop();\\n\\n      // Delete the index for the deleted slot\\n      delete set._indexes[value];\\n\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n    return set._indexes[value] != 0;\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function _length(Set storage set) private view returns (uint256) {\\n    return set._values.length;\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n    return set._values[index];\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function _values(Set storage set) private view returns (bytes32[] memory) {\\n    return set._values;\\n  }\\n\\n  // Bytes32Set\\n\\n  struct Bytes32Set {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _add(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _remove(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n    return _contains(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(Bytes32Set storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n    return _at(set._inner, index);\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n    return _values(set._inner);\\n  }\\n\\n  // AddressSet\\n\\n  struct AddressSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(AddressSet storage set, address value) internal returns (bool) {\\n    return _add(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(AddressSet storage set, address value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(AddressSet storage set, address value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(AddressSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n    return address(uint160(uint256(_at(set._inner, index))));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(AddressSet storage set) internal view returns (address[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    address[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n\\n  // UintSet\\n\\n  struct UintSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _add(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function length(UintSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n    return uint256(_at(set._inner, index));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(UintSet storage set) internal view returns (uint256[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    uint256[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0xe49098eb2019f9d9628a399f6a06ec310fe8a10785c369cc508c56df1f203dd0\",\"license\":\"MIT\"},\"src/contracts/lib/token/LTokenERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"../../token/lively/IERC20.sol\\\";\\nimport \\\"../../token/lively/IERC20Extra.sol\\\";\\nimport \\\"../../token/lively/IERC20Pause.sol\\\";\\nimport \\\"../../token/lively/IERC20Lock.sol\\\";\\nimport \\\"../../token/lively/LivelyStorage.sol\\\";\\nimport \\\"../../proxy/IProxy.sol\\\";\\nimport \\\"../../acl/IACL.sol\\\";\\nimport \\\"../struct/LEnumerableSet.sol\\\";\\n\\n/**\\n * @title Token ERC20 Library\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\nlibrary LTokenERC20 {\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n\\n  string public constant LIB_NAME = \\\"LTokenERC20\\\";\\n  string public constant LIB_VERSION = \\\"3.0.0\\\";\\n\\n  function lockToken(LivelyStorage.DataCollection storage data, IERC20Lock.LockTokenRequest memory lockRequest)\\n    external\\n    returns (bytes32)\\n  {\\n    require(\\n      lockRequest.source != address(0) && lockRequest.dest != address(0) && lockRequest.source != lockRequest.dest,\\n      \\\"Illegal Source/Dest Address\\\"\\n    );\\n    require(lockRequest.claimAt > block.timestamp + 1 days, \\\"Illegal Timestamp\\\");\\n    require(lockRequest.amount > 0, \\\"Illegal amount\\\");\\n\\n    bytes32 lockId = keccak256(\\n      abi.encodePacked(lockRequest.source, lockRequest.dest, lockRequest.claimAt, lockRequest.amount)\\n    );\\n    require(data.locks[lockRequest.dest][lockId].source == address(0), \\\"Already Exists\\\");\\n\\n    uint256 srcBalance = data.accounts[lockRequest.source].balance;\\n    require(srcBalance >= lockRequest.amount, \\\"Illegal Balance\\\");\\n    unchecked {\\n      data.accounts[lockRequest.source].balance = srcBalance - lockRequest.amount;\\n    }\\n    data.accounts[lockRequest.dest].lockBalance += lockRequest.amount;\\n\\n    LivelyStorage.AssetLock storage assetLock = data.locks[lockRequest.dest][lockId];\\n    assetLock.lockedAt = uint128(block.timestamp);\\n    assetLock.claimedAt = uint128(lockRequest.claimAt);\\n    assetLock.source = lockRequest.source;\\n    assetLock.amount = lockRequest.amount;\\n    assetLock.status = IERC20Lock.LockState.LOCKED;\\n    return lockId;\\n  }\\n\\n  function claimToken(LivelyStorage.DataCollection storage data, bytes32 lockId) external returns (uint256) {\\n    require(lockId != bytes32(0), \\\"Illegal LockId\\\");\\n    require(data.locks[msg.sender][lockId].source != address(0), \\\"Not Found\\\");\\n    require(data.locks[msg.sender][lockId].claimedAt < uint128(block.timestamp), \\\"Illegal Claim\\\");\\n\\n    uint256 lockAmount = data.locks[msg.sender][lockId].amount;\\n    uint256 lockBalance = data.accounts[msg.sender].lockBalance;\\n    require(lockBalance >= lockAmount, \\\"Illegal Lock Balance\\\");\\n    unchecked {\\n      data.accounts[msg.sender].lockBalance = lockBalance - lockAmount;\\n    }\\n    data.accounts[msg.sender].balance += lockAmount;\\n    data.locks[msg.sender][lockId].status = IERC20Lock.LockState.CLAIMED;\\n    return lockAmount;\\n  }\\n\\n  function unlockToken(LivelyStorage.DataCollection storage data, IERC20Lock.UnLockTokenRequest calldata unlockRequest)\\n    external\\n    returns (address, uint256)\\n  {\\n    require(unlockRequest.lockId != bytes32(0), \\\"Illegal LockId\\\");\\n    require(data.locks[unlockRequest.account][unlockRequest.lockId].source != address(0), \\\"LockId Not Found\\\");\\n    require(\\n      data.locks[unlockRequest.account][unlockRequest.lockId].status == IERC20Lock.LockState.LOCKED,\\n      \\\"Illegal Lock State\\\"\\n    );\\n\\n    uint256 lockAmount = data.locks[unlockRequest.account][unlockRequest.lockId].amount;\\n    uint256 lockBalance = data.accounts[unlockRequest.account].lockBalance;\\n    address srcAccount = data.locks[unlockRequest.account][unlockRequest.lockId].source;\\n    require(lockBalance >= lockAmount, \\\"Illegal Lock Balance\\\");\\n    unchecked {\\n      data.accounts[unlockRequest.account].lockBalance = lockBalance - lockAmount;\\n    }\\n    data.accounts[srcAccount].balance += lockAmount;\\n    data.locks[unlockRequest.account][unlockRequest.lockId].status = IERC20Lock.LockState.UNLOCKED;\\n    return (srcAccount, lockAmount);\\n  }\\n\\n  function transfer(\\n    LivelyStorage.DataCollection storage data,\\n    address src,\\n    address dest,\\n    uint256 amount\\n  ) external {\\n    require(src != address(0) && dest != address(0) && src != dest, \\\"Illegal Src/Dest Address\\\");\\n    require(amount > 0, \\\"Illegal Amount\\\");\\n\\n    uint256 srcBalance = data.accounts[src].balance;\\n    require(srcBalance >= amount, \\\"Illegal Balance\\\");\\n    unchecked {\\n      data.accounts[src].balance = srcBalance - amount;\\n    }\\n    data.accounts[dest].balance += amount;\\n  }\\n\\n  function updateTaxWhitelist(\\n    LivelyStorage.DataCollection storage data,\\n    address account,\\n    bool isDeleted\\n  ) external returns (bool) {\\n    require(account != address(0), \\\"Illegal Address\\\");\\n    if (isDeleted) {\\n      require(data.taxWhitelist.contains(account), \\\"Not Found\\\");\\n      data.taxWhitelist.remove(account);\\n    } else {\\n      require(!data.taxWhitelist.contains(account), \\\"Already Exists\\\");\\n      data.taxWhitelist.add(account);\\n    }\\n\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0x095fa85221512e2daa1df2d0d9062ce44945028eb6df6f075083529cdc9e7275\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseUUPSStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v3.0.0)\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"./IBaseProxy.sol\\\";\\n\\n/**\\n * @title Abstract Base UUPS Storage Contract\\n * @author OpenZeppelin, Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\nabstract contract BaseUUPSStorage is IBaseProxy {\\n  // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n  bytes32 internal constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n  /**\\n   * @dev Storage slot with the address of the current implementation.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n  /**\\n   * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n   * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n   */\\n  bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n  /**\\n   * @dev Storage slot with the admin of the contract.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  bytes32 public constant TYPE_HASH =\\n    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n\\n  address internal immutable __self = address(this);\\n\\n  string internal _contractName;\\n  string internal _contractVersion;\\n  address internal _accessControlManager;\\n  ProxySafeModeStatus internal _sstat;\\n  ProxyUpdatabilityStatus internal _ustat;\\n\\n  /**\\n   * @dev This empty reserved space is put in place to allow future versions to add new\\n   * variables without shifting down storage in the inheritance chain.\\n   */\\n  uint256[64] private __reserved;\\n}\\n\",\"keccak256\":\"0x4ff079fd2fd1ad102d42e82a72bff6bb1ffb8f9ab29cec2dd8e970b892ea415e\",\"license\":\"MIT\"},\"src/contracts/proxy/IBaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v3.0.0)\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title Base Proxy Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IBaseProxy {\\n  enum ProxySafeModeStatus {\\n    DISABLED,\\n    ENABLED\\n  }\\n\\n  enum ProxyUpdatabilityStatus {\\n    DISABLED,\\n    ENABLED\\n  }\\n\\n  event ProxyUpgraded(address indexed sender, address indexed proxy, address indexed newImplementation);\\n}\\n\",\"keccak256\":\"0x4b2695303b3acb300ba472d17da71a16367191af571d325d43171503d7c92846\",\"license\":\"MIT\"},\"src/contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v3.0.0)\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"./IBaseProxy.sol\\\";\\n\\n/**\\n * @title Base Proxy Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IProxy is IBaseProxy {\\n  /**\\n   * @dev Emitted when the admin account has changed.\\n   */\\n  event ProxyLocalAdminUpdated(address indexed sender, address indexed proxy, address newAdmin);\\n\\n  event ProxyAccessControlUpdated(address indexed sender, address indexed proxy, address acl);\\n\\n  event ProxySafeModeUpdated(address indexed sender, address indexed proxy, ProxySafeModeStatus sstat);\\n\\n  event ProxyUpdatabilityUpdated(address indexed sender, address indexed proxy, ProxyUpdatabilityStatus ustat);\\n\\n  /**\\n   * @dev Triggered when the contract has been initialized or reinitialized.\\n   */\\n  event Initialized(\\n    address indexed sender,\\n    address indexed proxy,\\n    address indexed subject,\\n    string name,\\n    string version,\\n    uint16 initCount\\n  );\\n\\n  function upgradeTo(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) external returns (bytes memory);\\n\\n  function setSafeModeStatus(ProxySafeModeStatus sstat) external returns (bool);\\n\\n  function setUpdatabilityStatus(ProxyUpdatabilityStatus ustat) external returns (bool);\\n\\n  function setLocalAdmin(address newAdmin) external returns (bool);\\n\\n  function setAccessControlManager(address acl) external returns (bool);\\n\\n  function withdrawBalance(address recepient) external returns (uint256);\\n\\n  function contractName() external view returns (string memory);\\n\\n  function contractVersion() external view returns (string memory);\\n\\n  function accessControlManager() external view returns (address);\\n\\n  function subjectAddress() external view returns (address);\\n\\n  function safeModeStatus() external view returns (ProxySafeModeStatus);\\n\\n  function updatabilityStatus() external view returns (ProxyUpdatabilityStatus);\\n\\n  function localAdmin() external view returns (address);\\n\\n  function domainSeparator() external view returns (bytes32);\\n\\n  function initVersion() external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xaadf51e846486cf9dc7387ad1dcac9a67e6a2d9354ce71694d79de783e1dea3b\",\"license\":\"MIT\"},\"src/contracts/token/lively/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title ERC20 Token Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IERC20 {\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x263733c522826e43a3ca283e264365c50357f12d806ab185163c012142890898\",\"license\":\"MIT\"},\"src/contracts/token/lively/IERC20Extra.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v3.0.0)\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title ERC20 Token Extra Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IERC20Extra {\\n  struct BatchTransferRequest {\\n    address to;\\n    uint256 amount;\\n  }\\n\\n  struct BatchTransferFromRequest {\\n    address from;\\n    address to;\\n    uint256 amount;\\n  }\\n\\n  struct TaxWhitelistUpdateRequest {\\n    address account;\\n    bool isDeleted;\\n  }\\n\\n  event ApprovalIncreased(address indexed owner, address indexed spender, uint256 amount);\\n\\n  event ApprovalDecreased(address indexed owner, address indexed spender, uint256 amount);\\n\\n  event TransferFrom(address indexed sender, address indexed from, address indexed to, uint256 amount);\\n\\n  event BatchTransfer(address indexed sender, uint256 totalAmount);\\n\\n  event BatchTransferFrom(address indexed sender, uint256 totalAmount);\\n\\n  event TaxRateUpdated(address indexed sender, uint256 rate);\\n\\n  event TaxWhitelistUpdated(address indexed sender, address indexed account, bool isDeleted);\\n\\n  event Burn(address indexed sender, address indexed account, uint256 amount, uint256 totalSupply);\\n\\n  event Mint(address indexed sender, address indexed account, uint256 amount, uint256 totalSupply);\\n\\n  function increaseAllowance(address spender, uint256 amount) external returns (uint256);\\n\\n  function decreaseAllowance(address spender, uint256 amount) external returns (uint256);\\n\\n  function burn(address account, uint256 amount) external returns (uint256);\\n\\n  function mint(address account, uint256 amount) external returns (uint256);\\n\\n  function batchTransfer(BatchTransferRequest[] calldata request) external returns (bool);\\n\\n  function batchTransferFrom(BatchTransferFromRequest[] calldata request) external returns (bool);\\n\\n  function updateTaxRate(uint256 taxRate) external returns (bool);\\n\\n  // function updateTaxWhitelist(address account, bool isDeleted) external returns (bool);\\n\\n  function updateTaxWhitelist(TaxWhitelistUpdateRequest[] calldata request) external returns (bool);\\n\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    bytes calldata signature\\n  ) external returns (bool);\\n\\n  function taxRate() external view returns (uint256);\\n\\n  function taxTreasury() external view returns (address);\\n\\n  function taxWhitelist() external view returns (address[] memory);\\n\\n  function nonce(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x16c99d17574e51329d990100a53104b81bd82db6e25e0d370ab2ae77bc23ad5b\",\"license\":\"MIT\"},\"src/contracts/token/lively/IERC20Lock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v3.0.0)\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title ERC20 Token Lock Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IERC20Lock {\\n  enum LockState {\\n    NONE,\\n    LOCKED,\\n    CLAIMED,\\n    UNLOCKED\\n  }\\n\\n  struct LockTokenRequest {\\n    address source;\\n    address dest;\\n    uint256 claimAt;\\n    uint256 amount;\\n  }\\n\\n  struct UnLockTokenRequest {\\n    bytes32 lockId;\\n    address account;\\n    string reason;\\n  }\\n\\n  struct LockInfo {\\n    uint256 amount;\\n    uint128 lockedAt;\\n    uint128 claimedAt;\\n    address source;\\n    LockState stat;\\n  }\\n\\n  event TokenLocked(\\n    bytes32 indexed id,\\n    address indexed sender,\\n    address indexed src,\\n    address account,\\n    uint256 claimAt,\\n    uint256 amount\\n  );\\n\\n  event TokenClaimed(bytes32 indexed id, address indexed sender, address indexed src, uint256 amount);\\n\\n  event TokenUnlocked(\\n    bytes32 indexed id,\\n    address indexed sender,\\n    address indexed account,\\n    address dest,\\n    uint256 amount,\\n    string reason\\n  );\\n\\n  function lockToken(LockTokenRequest[] calldata lockRequest) external returns (bytes32[] memory);\\n\\n  function unlockToken(UnLockTokenRequest[] calldata unlockRequest) external returns (uint256);\\n\\n  function claimToken(bytes32[] calldata lockIds) external returns (uint256);\\n\\n  function lockInfo(bytes32 lockId, address account) external view returns (LockInfo memory);\\n\\n  function totalBalanceOf(address account) external view returns (uint256);\\n\\n  function lockBalanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5ffdd8cad41daccfba39396ace4fe8fd984886f95fa4d4b4914fca9079bc778a\",\"license\":\"MIT\"},\"src/contracts/token/lively/IERC20Pause.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title ERC20 Token Pause Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IERC20Pause {\\n  event Paused(address indexed sender, address indexed account);\\n\\n  event Unpaused(address indexed sender, address indexed account);\\n\\n  event PausedAll(address indexed sender);\\n\\n  event UnpausedAll(address indexed sender);\\n\\n  function pause(address account) external;\\n\\n  function unpause(address account) external;\\n\\n  function pauseAll() external;\\n\\n  function unpauseAll() external;\\n\\n  function isPaused(address account) external view returns (bool);\\n\\n  function isPausedAll() external view returns (bool);\\n\\n  function pausedAccounts() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0x883c63fbcb1c9fbd4106cebf4c7b27be987763ce3aacc9af64aa547a2060e0af\",\"license\":\"MIT\"},\"src/contracts/token/lively/LivelyStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v3.0.0)\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"./IERC20Lock.sol\\\";\\nimport \\\"../../proxy/BaseUUPSStorage.sol\\\";\\nimport \\\"../../lib/LCounters.sol\\\";\\nimport \\\"../../lib/struct/LEnumerableSet.sol\\\";\\n\\n/**\\n * @title Abstract Lively ERC20 Token Storage Contract\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\nabstract contract LivelyStorage is BaseUUPSStorage {\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n  using LCounters for LCounters.Counter;\\n\\n  struct AccountInfo {\\n    uint256 balance;\\n    uint256 lockBalance;\\n    LCounters.Counter nonce;\\n  }\\n\\n  struct AssetLock {\\n    uint256 amount;\\n    uint128 lockedAt;\\n    uint128 claimedAt;\\n    address source;\\n    IERC20Lock.LockState status;\\n  }\\n\\n  struct DataCollection {\\n    mapping(address => AccountInfo) accounts;\\n    mapping(address => mapping(address => uint256)) allowances;\\n    mapping(address => mapping(bytes32 => AssetLock)) locks;\\n    LEnumerableSet.AddressSet pausedList;\\n    LEnumerableSet.AddressSet taxWhitelist;\\n  }\\n\\n  bytes32 internal constant _PERMIT_TYPEHASH =\\n    keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n  string internal _name;\\n  string internal _symbol;\\n  uint256 internal _totalSupply;\\n  uint256 internal _taxRate;\\n  address internal _taxTreasury;\\n  bool internal _isPaused;\\n  bool internal _isTokenDistributed;\\n\\n  DataCollection internal _data;\\n\\n  // Note: for next upgrade add new variables after this line\\n}\\n\",\"keccak256\":\"0xb0eae6203d9cd2a28027a9f07b9261ff6430218d1762fae7acaec7cc2af77cae\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61110e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80634572e0c1116100655780634572e0c114610112578063bec9475114610142578063f1c3afef1461016c578063f7d6b5af146101ab57600080fd5b806310e1fc401461008c5780632466209b146100bf5780633de90db3146100f0575b600080fd5b81801561009857600080fd5b506100ac6100a7366004610e5b565b6101cb565b6040519081526020015b60405180910390f35b6100e3604051806040016040528060058152602001640332e302e360dc1b81525081565b6040516100b69190610ef8565b8180156100fc57600080fd5b5061011061010b366004610f46565b61050d565b005b81801561011e57600080fd5b5061013261012d366004610f8a565b610676565b60405190151581526020016100b6565b6100e36040518060400160405280600b81526020016a04c546f6b656e45524332360ac1b81525081565b81801561017857600080fd5b5061018c610187366004610fcf565b610782565b604080516001600160a01b0390931683526020830191909152016100b6565b8180156101b757600080fd5b506100ac6101c636600461101d565b610ac5565b80516000906001600160a01b0316158015906101f3575060208201516001600160a01b031615155b8015610219575081602001516001600160a01b031682600001516001600160a01b031614155b61026a5760405162461bcd60e51b815260206004820152601b60248201527f496c6c6567616c20536f757263652f446573742041646472657373000000000060448201526064015b60405180910390fd5b6102774262015180611055565b8260400151116102bd5760405162461bcd60e51b81526020600482015260116024820152700496c6c6567616c2054696d657374616d7607c1b6044820152606401610261565b60008260600151116103025760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08185b5bdd5b9d60921b6044820152606401610261565b6000826000015183602001518460400151856060015160405160200161035a9493929190606094851b6bffffffffffffffffffffffff1990811682529390941b90921660148401526028830152604882015260680190565b60408051601f198184030181529181528151602092830120858301516001600160a01b0390811660009081526002808a018652848220848352909552929092209092015491925016156103e05760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792045786973747360901b6044820152606401610261565b82516001600160a01b031660009081526020859052604090205460608401518110156104405760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c2042616c616e636560881b6044820152606401610261565b60608401805185516001600160a01b0390811660009081526020898152604080832094870390945593519388015190911681529081206001018054909190610489908490611055565b9091555050506020838101516001600160a01b03908116600090815260028781018452604080832086845290945290839020928601516001600160801b03908116600160801b02429190911617600184015585519083018054606088015190945591166001600160a81b031990921691909117600160a01b17905590505b92915050565b6001600160a01b0383161580159061052d57506001600160a01b03821615155b801561054b5750816001600160a01b0316836001600160a01b031614155b6105975760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c205372632f44657374204164647265737300000000000000006044820152606401610261565b600081116105d85760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08105b5bdd5b9d60921b6044820152606401610261565b6001600160a01b038316600090815260208590526040902054818110156106335760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c2042616c616e636560881b6044820152606401610261565b6001600160a01b0380851660009081526020879052604080822085850390559185168152908120805484929061066a908490611055565b90915550505050505050565b60006001600160a01b0383166106c05760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c204164647265737360881b6044820152606401610261565b811561071e576106d36005850184610cae565b61070b5760405162461bcd60e51b8152602060048201526009602482015268139bdd08119bdd5b9960ba1b6044820152606401610261565b6107186005850184610cd3565b50610778565b61072b6005850184610cae565b156107695760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792045786973747360901b6044820152606401610261565b6107766005850184610ce8565b505b5060019392505050565b60008082356107c45760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08131bd8dad25960921b6044820152606401610261565b600060028501816107db604087016020880161107e565b6001600160a01b039081168252602080830193909352604091820160009081208835825290935291206002015416036108495760405162461bcd60e51b815260206004820152601060248201526f131bd8dad25908139bdd08119bdd5b9960821b6044820152606401610261565b6001600285016000610861604087016020880161107e565b6001600160a01b031681526020808201929092526040908101600090812087358252909252902060020154600160a01b900460ff1660038111156108a7576108a7611068565b146108e95760405162461bcd60e51b8152602060048201526012602482015271496c6c6567616c204c6f636b20537461746560701b6044820152606401610261565b60006002850181610900604087016020880161107e565b6001600160a01b0316815260208082019290925260409081016000908120873582528352818120549350918791839161093d91890190890161107e565b6001600160a01b03166001600160a01b03168152602001908152602001600020600101549050600086600201600087602001602081019061097e919061107e565b6001600160a01b039081168252602080830193909352604091820160009081208a358252909352912060020154169050828210156109f55760405162461bcd60e51b8152602060048201526014602482015273496c6c6567616c204c6f636b2042616c616e636560601b6044820152606401610261565b828203876000610a0b60408a0160208b0161107e565b6001600160a01b0390811682526020808301939093526040918201600090812060010194909455841683529089905281208054859290610a4c908490611055565b9091555060039050600288016000610a6a60408a0160208b0161107e565b6001600160a01b03168152602080820192909252604090810160009081208a3582529092529020600201805460ff60a01b1916600160a01b836003811115610ab457610ab4611068565b021790555096919550909350505050565b600081610b055760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08131bd8dad25960921b6044820152606401610261565b33600090815260028085016020908152604080842086855290915290912001546001600160a01b0316610b665760405162461bcd60e51b8152602060048201526009602482015268139bdd08119bdd5b9960ba1b6044820152606401610261565b33600090815260028401602090815260408083208584529091529020600101546001600160801b03428116600160801b9092041610610bd75760405162461bcd60e51b815260206004820152600d60248201526c496c6c6567616c20436c61696d60981b6044820152606401610261565b33600081815260028501602090815260408083208684528252808320549383529086905290206001015481811015610c485760405162461bcd60e51b8152602060048201526014602482015273496c6c6567616c204c6f636b2042616c616e636560601b6044820152606401610261565b33600090815260208690526040812083830360018201558054849290610c6f908490611055565b909155505033600090815260029586016020908152604080832096835295905293909320909301805460ff60a01b1916600160a11b1790555090919050565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6000610ccc836001600160a01b038416610cfd565b6000610ccc836001600160a01b038416610df0565b60008181526001830160205260408120548015610de6576000610d21600183611099565b8554909150600090610d3590600190611099565b9050818114610d9a576000866000018281548110610d5557610d556110ac565b9060005260206000200154905080876000018481548110610d7857610d786110ac565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610dab57610dab6110c2565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610507565b6000915050610507565b6000818152600183016020526040812054610e3757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610507565b506000610507565b80356001600160a01b0381168114610e5657600080fd5b919050565b60008082840360a0811215610e6f57600080fd5b833592506080601f1982011215610e8557600080fd5b506040516080810181811067ffffffffffffffff82111715610eb757634e487b7160e01b600052604160045260246000fd5b604052610ec660208501610e3f565b8152610ed460408501610e3f565b60208201526060840135604082015260808401356060820152809150509250929050565b600060208083528351808285015260005b81811015610f2557858101830151858201604001528201610f09565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060008060808587031215610f5c57600080fd5b84359350610f6c60208601610e3f565b9250610f7a60408601610e3f565b9396929550929360600135925050565b600080600060608486031215610f9f57600080fd5b83359250610faf60208501610e3f565b915060408401358015158114610fc457600080fd5b809150509250925092565b60008060408385031215610fe257600080fd5b82359150602083013567ffffffffffffffff81111561100057600080fd5b83016060818603121561101257600080fd5b809150509250929050565b6000806040838503121561103057600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b808201808211156105075761050761103f565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561109057600080fd5b610ccc82610e3f565b818103818111156105075761050761103f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220828bf8aaa906f8c112544c53f598af47a02e22346f7ae08ca49915f4adde924864736f6c63430008130033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80634572e0c1116100655780634572e0c114610112578063bec9475114610142578063f1c3afef1461016c578063f7d6b5af146101ab57600080fd5b806310e1fc401461008c5780632466209b146100bf5780633de90db3146100f0575b600080fd5b81801561009857600080fd5b506100ac6100a7366004610e5b565b6101cb565b6040519081526020015b60405180910390f35b6100e3604051806040016040528060058152602001640332e302e360dc1b81525081565b6040516100b69190610ef8565b8180156100fc57600080fd5b5061011061010b366004610f46565b61050d565b005b81801561011e57600080fd5b5061013261012d366004610f8a565b610676565b60405190151581526020016100b6565b6100e36040518060400160405280600b81526020016a04c546f6b656e45524332360ac1b81525081565b81801561017857600080fd5b5061018c610187366004610fcf565b610782565b604080516001600160a01b0390931683526020830191909152016100b6565b8180156101b757600080fd5b506100ac6101c636600461101d565b610ac5565b80516000906001600160a01b0316158015906101f3575060208201516001600160a01b031615155b8015610219575081602001516001600160a01b031682600001516001600160a01b031614155b61026a5760405162461bcd60e51b815260206004820152601b60248201527f496c6c6567616c20536f757263652f446573742041646472657373000000000060448201526064015b60405180910390fd5b6102774262015180611055565b8260400151116102bd5760405162461bcd60e51b81526020600482015260116024820152700496c6c6567616c2054696d657374616d7607c1b6044820152606401610261565b60008260600151116103025760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08185b5bdd5b9d60921b6044820152606401610261565b6000826000015183602001518460400151856060015160405160200161035a9493929190606094851b6bffffffffffffffffffffffff1990811682529390941b90921660148401526028830152604882015260680190565b60408051601f198184030181529181528151602092830120858301516001600160a01b0390811660009081526002808a018652848220848352909552929092209092015491925016156103e05760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792045786973747360901b6044820152606401610261565b82516001600160a01b031660009081526020859052604090205460608401518110156104405760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c2042616c616e636560881b6044820152606401610261565b60608401805185516001600160a01b0390811660009081526020898152604080832094870390945593519388015190911681529081206001018054909190610489908490611055565b9091555050506020838101516001600160a01b03908116600090815260028781018452604080832086845290945290839020928601516001600160801b03908116600160801b02429190911617600184015585519083018054606088015190945591166001600160a81b031990921691909117600160a01b17905590505b92915050565b6001600160a01b0383161580159061052d57506001600160a01b03821615155b801561054b5750816001600160a01b0316836001600160a01b031614155b6105975760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c205372632f44657374204164647265737300000000000000006044820152606401610261565b600081116105d85760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08105b5bdd5b9d60921b6044820152606401610261565b6001600160a01b038316600090815260208590526040902054818110156106335760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c2042616c616e636560881b6044820152606401610261565b6001600160a01b0380851660009081526020879052604080822085850390559185168152908120805484929061066a908490611055565b90915550505050505050565b60006001600160a01b0383166106c05760405162461bcd60e51b815260206004820152600f60248201526e496c6c6567616c204164647265737360881b6044820152606401610261565b811561071e576106d36005850184610cae565b61070b5760405162461bcd60e51b8152602060048201526009602482015268139bdd08119bdd5b9960ba1b6044820152606401610261565b6107186005850184610cd3565b50610778565b61072b6005850184610cae565b156107695760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792045786973747360901b6044820152606401610261565b6107766005850184610ce8565b505b5060019392505050565b60008082356107c45760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08131bd8dad25960921b6044820152606401610261565b600060028501816107db604087016020880161107e565b6001600160a01b039081168252602080830193909352604091820160009081208835825290935291206002015416036108495760405162461bcd60e51b815260206004820152601060248201526f131bd8dad25908139bdd08119bdd5b9960821b6044820152606401610261565b6001600285016000610861604087016020880161107e565b6001600160a01b031681526020808201929092526040908101600090812087358252909252902060020154600160a01b900460ff1660038111156108a7576108a7611068565b146108e95760405162461bcd60e51b8152602060048201526012602482015271496c6c6567616c204c6f636b20537461746560701b6044820152606401610261565b60006002850181610900604087016020880161107e565b6001600160a01b0316815260208082019290925260409081016000908120873582528352818120549350918791839161093d91890190890161107e565b6001600160a01b03166001600160a01b03168152602001908152602001600020600101549050600086600201600087602001602081019061097e919061107e565b6001600160a01b039081168252602080830193909352604091820160009081208a358252909352912060020154169050828210156109f55760405162461bcd60e51b8152602060048201526014602482015273496c6c6567616c204c6f636b2042616c616e636560601b6044820152606401610261565b828203876000610a0b60408a0160208b0161107e565b6001600160a01b0390811682526020808301939093526040918201600090812060010194909455841683529089905281208054859290610a4c908490611055565b9091555060039050600288016000610a6a60408a0160208b0161107e565b6001600160a01b03168152602080820192909252604090810160009081208a3582529092529020600201805460ff60a01b1916600160a01b836003811115610ab457610ab4611068565b021790555096919550909350505050565b600081610b055760405162461bcd60e51b815260206004820152600e60248201526d125b1b1959d85b08131bd8dad25960921b6044820152606401610261565b33600090815260028085016020908152604080842086855290915290912001546001600160a01b0316610b665760405162461bcd60e51b8152602060048201526009602482015268139bdd08119bdd5b9960ba1b6044820152606401610261565b33600090815260028401602090815260408083208584529091529020600101546001600160801b03428116600160801b9092041610610bd75760405162461bcd60e51b815260206004820152600d60248201526c496c6c6567616c20436c61696d60981b6044820152606401610261565b33600081815260028501602090815260408083208684528252808320549383529086905290206001015481811015610c485760405162461bcd60e51b8152602060048201526014602482015273496c6c6567616c204c6f636b2042616c616e636560601b6044820152606401610261565b33600090815260208690526040812083830360018201558054849290610c6f908490611055565b909155505033600090815260029586016020908152604080832096835295905293909320909301805460ff60a01b1916600160a11b1790555090919050565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6000610ccc836001600160a01b038416610cfd565b6000610ccc836001600160a01b038416610df0565b60008181526001830160205260408120548015610de6576000610d21600183611099565b8554909150600090610d3590600190611099565b9050818114610d9a576000866000018281548110610d5557610d556110ac565b9060005260206000200154905080876000018481548110610d7857610d786110ac565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610dab57610dab6110c2565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610507565b6000915050610507565b6000818152600183016020526040812054610e3757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610507565b506000610507565b80356001600160a01b0381168114610e5657600080fd5b919050565b60008082840360a0811215610e6f57600080fd5b833592506080601f1982011215610e8557600080fd5b506040516080810181811067ffffffffffffffff82111715610eb757634e487b7160e01b600052604160045260246000fd5b604052610ec660208501610e3f565b8152610ed460408501610e3f565b60208201526060840135604082015260808401356060820152809150509250929050565b600060208083528351808285015260005b81811015610f2557858101830151858201604001528201610f09565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060008060808587031215610f5c57600080fd5b84359350610f6c60208601610e3f565b9250610f7a60408601610e3f565b9396929550929360600135925050565b600080600060608486031215610f9f57600080fd5b83359250610faf60208501610e3f565b915060408401358015158114610fc457600080fd5b809150509250925092565b60008060408385031215610fe257600080fd5b82359150602083013567ffffffffffffffff81111561100057600080fd5b83016060818603121561101257600080fd5b809150509250929050565b6000806040838503121561103057600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b808201808211156105075761050761103f565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561109057600080fd5b610ccc82610e3f565b818103818111156105075761050761103f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220828bf8aaa906f8c112544c53f598af47a02e22346f7ae08ca49915f4adde924864736f6c63430008130033",
  "devdoc": {
    "author": "Sina Tadayon, https://github.com/SinaTadayon",
    "kind": "dev",
    "methods": {},
    "title": "Token ERC20 Library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}