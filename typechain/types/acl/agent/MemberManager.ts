/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export declare namespace IMemberManagement {
  export type MemberInfoStruct = {
    adminId: PromiseOrValue<BytesLike>;
    account: PromiseOrValue<string>;
    typeLimit: PromiseOrValue<BigNumberish>;
    typeCount: PromiseOrValue<BigNumberish>;
    atype: PromiseOrValue<BigNumberish>;
    acstat: PromiseOrValue<BigNumberish>;
    alstat: PromiseOrValue<BigNumberish>;
  };

  export type MemberInfoStructOutput = [
    string,
    string,
    number,
    number,
    number,
    number,
    number
  ] & {
    adminId: string;
    account: string;
    typeLimit: number;
    typeCount: number;
    atype: number;
    acstat: number;
    alstat: number;
  };

  export type MemberRegisterStruct = {
    roleId: PromiseOrValue<BytesLike>;
    account: PromiseOrValue<string>;
    typeLimit: PromiseOrValue<BigNumberish>;
    acstat: PromiseOrValue<BigNumberish>;
    alstat: PromiseOrValue<BigNumberish>;
  };

  export type MemberRegisterStructOutput = [
    string,
    string,
    number,
    number,
    number
  ] & {
    roleId: string;
    account: string;
    typeLimit: number;
    acstat: number;
    alstat: number;
  };

  export type MemberUpdateTypeLimitRequestStruct = {
    memberId: PromiseOrValue<BytesLike>;
    typeLimit: PromiseOrValue<BigNumberish>;
  };

  export type MemberUpdateTypeLimitRequestStructOutput = [string, number] & {
    memberId: string;
    typeLimit: number;
  };
}

export declare namespace IAclCommons {
  export type UpdateActivityRequestStruct = {
    id: PromiseOrValue<BytesLike>;
    acstat: PromiseOrValue<BigNumberish>;
  };

  export type UpdateActivityRequestStructOutput = [string, number] & {
    id: string;
    acstat: number;
  };

  export type UpdateAdminRequestStruct = {
    id: PromiseOrValue<BytesLike>;
    adminId: PromiseOrValue<BytesLike>;
  };

  export type UpdateAdminRequestStructOutput = [string, string] & {
    id: string;
    adminId: string;
  };

  export type UpdateAlterabilityRequestStruct = {
    id: PromiseOrValue<BytesLike>;
    alstat: PromiseOrValue<BigNumberish>;
  };

  export type UpdateAlterabilityRequestStructOutput = [string, number] & {
    id: string;
    alstat: number;
  };
}

export interface MemberManagerInterface extends utils.Interface {
  functions: {
    "CTX_MESSAGE_TYPEHASH()": FunctionFragment;
    "FUNCTION_MESSAGE_TYPEHASH()": FunctionFragment;
    "LIVELY_VERSE_ADMIN_TYPE_ID()": FunctionFragment;
    "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()": FunctionFragment;
    "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()": FunctionFragment;
    "LIVELY_VERSE_ANY_TYPE_ID()": FunctionFragment;
    "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()": FunctionFragment;
    "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()": FunctionFragment;
    "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()": FunctionFragment;
    "PREDICT_CTX_MESSAGE_TYPEHASH()": FunctionFragment;
    "TYPE_HASH()": FunctionFragment;
    "memberCheckId(bytes32)": FunctionFragment;
    "memberGetInfo(bytes32)": FunctionFragment;
    "memberGetTypes(bytes32)": FunctionFragment;
    "memberHasType(bytes32,bytes32)": FunctionFragment;
    "memberRegister((bytes32,address,uint16,uint8,uint8)[])": FunctionFragment;
    "memberUpdateActivityStatus((bytes32,uint8)[])": FunctionFragment;
    "memberUpdateAdmin((bytes32,bytes32)[])": FunctionFragment;
    "memberUpdateAlterabilityStatus((bytes32,uint8)[])": FunctionFragment;
    "memberUpdateTypeLimit((bytes32,uint16)[])": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "CTX_MESSAGE_TYPEHASH"
      | "CTX_MESSAGE_TYPEHASH()"
      | "FUNCTION_MESSAGE_TYPEHASH"
      | "FUNCTION_MESSAGE_TYPEHASH()"
      | "LIVELY_VERSE_ADMIN_TYPE_ID"
      | "LIVELY_VERSE_ADMIN_TYPE_ID()"
      | "LIVELY_VERSE_AGENT_MASTER_TYPE_ID"
      | "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()"
      | "LIVELY_VERSE_ANONYMOUSE_TYPE_ID"
      | "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()"
      | "LIVELY_VERSE_ANY_TYPE_ID"
      | "LIVELY_VERSE_ANY_TYPE_ID()"
      | "LIVELY_VERSE_POLICY_MASTER_TYPE_ID"
      | "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()"
      | "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID"
      | "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()"
      | "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID"
      | "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()"
      | "PREDICT_CTX_MESSAGE_TYPEHASH"
      | "PREDICT_CTX_MESSAGE_TYPEHASH()"
      | "TYPE_HASH"
      | "TYPE_HASH()"
      | "memberCheckId"
      | "memberCheckId(bytes32)"
      | "memberGetInfo"
      | "memberGetInfo(bytes32)"
      | "memberGetTypes"
      | "memberGetTypes(bytes32)"
      | "memberHasType"
      | "memberHasType(bytes32,bytes32)"
      | "memberRegister"
      | "memberRegister((bytes32,address,uint16,uint8,uint8)[])"
      | "memberUpdateActivityStatus"
      | "memberUpdateActivityStatus((bytes32,uint8)[])"
      | "memberUpdateAdmin"
      | "memberUpdateAdmin((bytes32,bytes32)[])"
      | "memberUpdateAlterabilityStatus"
      | "memberUpdateAlterabilityStatus((bytes32,uint8)[])"
      | "memberUpdateTypeLimit"
      | "memberUpdateTypeLimit((bytes32,uint16)[])"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "CTX_MESSAGE_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CTX_MESSAGE_TYPEHASH()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "FUNCTION_MESSAGE_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "FUNCTION_MESSAGE_TYPEHASH()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_ADMIN_TYPE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_ADMIN_TYPE_ID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_AGENT_MASTER_TYPE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_ANONYMOUSE_TYPE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_ANY_TYPE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_ANY_TYPE_ID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_POLICY_MASTER_TYPE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PREDICT_CTX_MESSAGE_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PREDICT_CTX_MESSAGE_TYPEHASH()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "TYPE_HASH", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "TYPE_HASH()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "memberCheckId",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberCheckId(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberGetInfo",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberGetInfo(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberGetTypes",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberGetTypes(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberHasType",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberHasType(bytes32,bytes32)",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "memberRegister",
    values: [IMemberManagement.MemberRegisterStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberRegister((bytes32,address,uint16,uint8,uint8)[])",
    values: [IMemberManagement.MemberRegisterStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateActivityStatus",
    values: [IAclCommons.UpdateActivityRequestStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateActivityStatus((bytes32,uint8)[])",
    values: [IAclCommons.UpdateActivityRequestStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateAdmin",
    values: [IAclCommons.UpdateAdminRequestStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateAdmin((bytes32,bytes32)[])",
    values: [IAclCommons.UpdateAdminRequestStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateAlterabilityStatus",
    values: [IAclCommons.UpdateAlterabilityRequestStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateAlterabilityStatus((bytes32,uint8)[])",
    values: [IAclCommons.UpdateAlterabilityRequestStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateTypeLimit",
    values: [IMemberManagement.MemberUpdateTypeLimitRequestStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "memberUpdateTypeLimit((bytes32,uint16)[])",
    values: [IMemberManagement.MemberUpdateTypeLimitRequestStruct[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "CTX_MESSAGE_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CTX_MESSAGE_TYPEHASH()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "FUNCTION_MESSAGE_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "FUNCTION_MESSAGE_TYPEHASH()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_ADMIN_TYPE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_ADMIN_TYPE_ID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_AGENT_MASTER_TYPE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_ANONYMOUSE_TYPE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_ANY_TYPE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_ANY_TYPE_ID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_POLICY_MASTER_TYPE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PREDICT_CTX_MESSAGE_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PREDICT_CTX_MESSAGE_TYPEHASH()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "TYPE_HASH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "TYPE_HASH()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberCheckId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberCheckId(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberGetInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberGetInfo(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberGetTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberGetTypes(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberHasType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberHasType(bytes32,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberRegister",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberRegister((bytes32,address,uint16,uint8,uint8)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateActivityStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateActivityStatus((bytes32,uint8)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateAdmin((bytes32,bytes32)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateAlterabilityStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateAlterabilityStatus((bytes32,uint8)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateTypeLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "memberUpdateTypeLimit((bytes32,uint16)[])",
    data: BytesLike
  ): Result;

  events: {
    "AgentReferredByPolicyUpdated(address,bytes32,bytes32,uint8)": EventFragment;
    "AgentReferredByScopeUpdated(address,bytes32,bytes32,uint8)": EventFragment;
    "MemberActivityUpdated(address,bytes32,uint8)": EventFragment;
    "MemberAdminUpdated(address,bytes32,bytes32)": EventFragment;
    "MemberAlterabilityUpdated(address,bytes32,uint8)": EventFragment;
    "MemberRegistered(address,bytes32,address,bytes32)": EventFragment;
    "MemberTypeLimitUpdated(address,bytes32,uint16)": EventFragment;
    "ProxyUpgraded(address,address,address)": EventFragment;
    "ScopeReferredByAgentUpdated(address,bytes32,bytes32,uint8)": EventFragment;
    "ScopeReferredByPolicyUpdated(address,bytes32,bytes32,uint8)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "AgentReferredByPolicyUpdated"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AgentReferredByPolicyUpdated(address,bytes32,bytes32,uint8)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AgentReferredByScopeUpdated"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AgentReferredByScopeUpdated(address,bytes32,bytes32,uint8)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MemberActivityUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MemberActivityUpdated(address,bytes32,uint8)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MemberAdminUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MemberAdminUpdated(address,bytes32,bytes32)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MemberAlterabilityUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MemberAlterabilityUpdated(address,bytes32,uint8)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MemberRegistered"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MemberRegistered(address,bytes32,address,bytes32)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MemberTypeLimitUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MemberTypeLimitUpdated(address,bytes32,uint16)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProxyUpgraded"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ProxyUpgraded(address,address,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ScopeReferredByAgentUpdated"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ScopeReferredByAgentUpdated(address,bytes32,bytes32,uint8)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ScopeReferredByPolicyUpdated"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ScopeReferredByPolicyUpdated(address,bytes32,bytes32,uint8)"
  ): EventFragment;
}

export interface AgentReferredByPolicyUpdatedEventObject {
  sender: string;
  agentId: string;
  policyId: string;
  action: number;
}
export type AgentReferredByPolicyUpdatedEvent = TypedEvent<
  [string, string, string, number],
  AgentReferredByPolicyUpdatedEventObject
>;

export type AgentReferredByPolicyUpdatedEventFilter =
  TypedEventFilter<AgentReferredByPolicyUpdatedEvent>;

export interface AgentReferredByScopeUpdatedEventObject {
  sender: string;
  agentId: string;
  scopeId: string;
  action: number;
}
export type AgentReferredByScopeUpdatedEvent = TypedEvent<
  [string, string, string, number],
  AgentReferredByScopeUpdatedEventObject
>;

export type AgentReferredByScopeUpdatedEventFilter =
  TypedEventFilter<AgentReferredByScopeUpdatedEvent>;

export interface MemberActivityUpdatedEventObject {
  sender: string;
  memberId: string;
  acstat: number;
}
export type MemberActivityUpdatedEvent = TypedEvent<
  [string, string, number],
  MemberActivityUpdatedEventObject
>;

export type MemberActivityUpdatedEventFilter =
  TypedEventFilter<MemberActivityUpdatedEvent>;

export interface MemberAdminUpdatedEventObject {
  sender: string;
  memberId: string;
  adminId: string;
}
export type MemberAdminUpdatedEvent = TypedEvent<
  [string, string, string],
  MemberAdminUpdatedEventObject
>;

export type MemberAdminUpdatedEventFilter =
  TypedEventFilter<MemberAdminUpdatedEvent>;

export interface MemberAlterabilityUpdatedEventObject {
  sender: string;
  memberId: string;
  alstat: number;
}
export type MemberAlterabilityUpdatedEvent = TypedEvent<
  [string, string, number],
  MemberAlterabilityUpdatedEventObject
>;

export type MemberAlterabilityUpdatedEventFilter =
  TypedEventFilter<MemberAlterabilityUpdatedEvent>;

export interface MemberRegisteredEventObject {
  sender: string;
  memberId: string;
  account: string;
  roleId: string;
}
export type MemberRegisteredEvent = TypedEvent<
  [string, string, string, string],
  MemberRegisteredEventObject
>;

export type MemberRegisteredEventFilter =
  TypedEventFilter<MemberRegisteredEvent>;

export interface MemberTypeLimitUpdatedEventObject {
  sender: string;
  memberId: string;
  typeLimit: number;
}
export type MemberTypeLimitUpdatedEvent = TypedEvent<
  [string, string, number],
  MemberTypeLimitUpdatedEventObject
>;

export type MemberTypeLimitUpdatedEventFilter =
  TypedEventFilter<MemberTypeLimitUpdatedEvent>;

export interface ProxyUpgradedEventObject {
  sender: string;
  proxy: string;
  newImplementation: string;
}
export type ProxyUpgradedEvent = TypedEvent<
  [string, string, string],
  ProxyUpgradedEventObject
>;

export type ProxyUpgradedEventFilter = TypedEventFilter<ProxyUpgradedEvent>;

export interface ScopeReferredByAgentUpdatedEventObject {
  sender: string;
  scopeId: string;
  agentId: string;
  action: number;
}
export type ScopeReferredByAgentUpdatedEvent = TypedEvent<
  [string, string, string, number],
  ScopeReferredByAgentUpdatedEventObject
>;

export type ScopeReferredByAgentUpdatedEventFilter =
  TypedEventFilter<ScopeReferredByAgentUpdatedEvent>;

export interface ScopeReferredByPolicyUpdatedEventObject {
  sender: string;
  scopeId: string;
  policyId: string;
  action: number;
}
export type ScopeReferredByPolicyUpdatedEvent = TypedEvent<
  [string, string, string, number],
  ScopeReferredByPolicyUpdatedEventObject
>;

export type ScopeReferredByPolicyUpdatedEventFilter =
  TypedEventFilter<ScopeReferredByPolicyUpdatedEvent>;

export interface MemberManager extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MemberManagerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<[string]>;

    "CTX_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<[string]>;

    FUNCTION_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<[string]>;

    "FUNCTION_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<[string]>;

    LIVELY_VERSE_ADMIN_TYPE_ID(overrides?: CallOverrides): Promise<[string]>;

    "LIVELY_VERSE_ADMIN_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    LIVELY_VERSE_AGENT_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    LIVELY_VERSE_ANONYMOUSE_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    LIVELY_VERSE_ANY_TYPE_ID(overrides?: CallOverrides): Promise<[string]>;

    "LIVELY_VERSE_ANY_TYPE_ID()"(overrides?: CallOverrides): Promise<[string]>;

    LIVELY_VERSE_POLICY_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    LIVELY_VERSE_SCOPE_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    PREDICT_CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<[string]>;

    "PREDICT_CTX_MESSAGE_TYPEHASH()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    TYPE_HASH(overrides?: CallOverrides): Promise<[string]>;

    "TYPE_HASH()"(overrides?: CallOverrides): Promise<[string]>;

    memberCheckId(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "memberCheckId(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    memberGetInfo(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[IMemberManagement.MemberInfoStructOutput]>;

    "memberGetInfo(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[IMemberManagement.MemberInfoStructOutput]>;

    memberGetTypes(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "memberGetTypes(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    memberHasType(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "memberHasType(bytes32,bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    memberRegister(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "memberRegister((bytes32,address,uint16,uint8,uint8)[])"(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    memberUpdateActivityStatus(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "memberUpdateActivityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    memberUpdateAdmin(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "memberUpdateAdmin((bytes32,bytes32)[])"(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    memberUpdateAlterabilityStatus(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "memberUpdateAlterabilityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    memberUpdateTypeLimit(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "memberUpdateTypeLimit((bytes32,uint16)[])"(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  "CTX_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<string>;

  FUNCTION_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  "FUNCTION_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<string>;

  LIVELY_VERSE_ADMIN_TYPE_ID(overrides?: CallOverrides): Promise<string>;

  "LIVELY_VERSE_ADMIN_TYPE_ID()"(overrides?: CallOverrides): Promise<string>;

  LIVELY_VERSE_AGENT_MASTER_TYPE_ID(overrides?: CallOverrides): Promise<string>;

  "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()"(
    overrides?: CallOverrides
  ): Promise<string>;

  LIVELY_VERSE_ANONYMOUSE_TYPE_ID(overrides?: CallOverrides): Promise<string>;

  "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()"(
    overrides?: CallOverrides
  ): Promise<string>;

  LIVELY_VERSE_ANY_TYPE_ID(overrides?: CallOverrides): Promise<string>;

  "LIVELY_VERSE_ANY_TYPE_ID()"(overrides?: CallOverrides): Promise<string>;

  LIVELY_VERSE_POLICY_MASTER_TYPE_ID(
    overrides?: CallOverrides
  ): Promise<string>;

  "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()"(
    overrides?: CallOverrides
  ): Promise<string>;

  LIVELY_VERSE_SCOPE_MASTER_TYPE_ID(overrides?: CallOverrides): Promise<string>;

  "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()"(
    overrides?: CallOverrides
  ): Promise<string>;

  LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID(overrides?: CallOverrides): Promise<string>;

  "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()"(
    overrides?: CallOverrides
  ): Promise<string>;

  PREDICT_CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  "PREDICT_CTX_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<string>;

  TYPE_HASH(overrides?: CallOverrides): Promise<string>;

  "TYPE_HASH()"(overrides?: CallOverrides): Promise<string>;

  memberCheckId(
    memberId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "memberCheckId(bytes32)"(
    memberId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  memberGetInfo(
    memberId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<IMemberManagement.MemberInfoStructOutput>;

  "memberGetInfo(bytes32)"(
    memberId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<IMemberManagement.MemberInfoStructOutput>;

  memberGetTypes(
    memberId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "memberGetTypes(bytes32)"(
    memberId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  memberHasType(
    memberId: PromiseOrValue<BytesLike>,
    typeId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "memberHasType(bytes32,bytes32)"(
    memberId: PromiseOrValue<BytesLike>,
    typeId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  memberRegister(
    requests: IMemberManagement.MemberRegisterStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "memberRegister((bytes32,address,uint16,uint8,uint8)[])"(
    requests: IMemberManagement.MemberRegisterStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  memberUpdateActivityStatus(
    requests: IAclCommons.UpdateActivityRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "memberUpdateActivityStatus((bytes32,uint8)[])"(
    requests: IAclCommons.UpdateActivityRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  memberUpdateAdmin(
    requests: IAclCommons.UpdateAdminRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "memberUpdateAdmin((bytes32,bytes32)[])"(
    requests: IAclCommons.UpdateAdminRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  memberUpdateAlterabilityStatus(
    requests: IAclCommons.UpdateAlterabilityRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "memberUpdateAlterabilityStatus((bytes32,uint8)[])"(
    requests: IAclCommons.UpdateAlterabilityRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  memberUpdateTypeLimit(
    requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "memberUpdateTypeLimit((bytes32,uint16)[])"(
    requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    "CTX_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<string>;

    FUNCTION_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    "FUNCTION_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<string>;

    LIVELY_VERSE_ADMIN_TYPE_ID(overrides?: CallOverrides): Promise<string>;

    "LIVELY_VERSE_ADMIN_TYPE_ID()"(overrides?: CallOverrides): Promise<string>;

    LIVELY_VERSE_AGENT_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<string>;

    "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<string>;

    LIVELY_VERSE_ANONYMOUSE_TYPE_ID(overrides?: CallOverrides): Promise<string>;

    "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<string>;

    LIVELY_VERSE_ANY_TYPE_ID(overrides?: CallOverrides): Promise<string>;

    "LIVELY_VERSE_ANY_TYPE_ID()"(overrides?: CallOverrides): Promise<string>;

    LIVELY_VERSE_POLICY_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<string>;

    "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<string>;

    LIVELY_VERSE_SCOPE_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<string>;

    "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<string>;

    LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<string>;

    "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<string>;

    PREDICT_CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    "PREDICT_CTX_MESSAGE_TYPEHASH()"(
      overrides?: CallOverrides
    ): Promise<string>;

    TYPE_HASH(overrides?: CallOverrides): Promise<string>;

    "TYPE_HASH()"(overrides?: CallOverrides): Promise<string>;

    memberCheckId(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "memberCheckId(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    memberGetInfo(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<IMemberManagement.MemberInfoStructOutput>;

    "memberGetInfo(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<IMemberManagement.MemberInfoStructOutput>;

    memberGetTypes(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "memberGetTypes(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    memberHasType(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "memberHasType(bytes32,bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    memberRegister(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "memberRegister((bytes32,address,uint16,uint8,uint8)[])"(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    memberUpdateActivityStatus(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "memberUpdateActivityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    memberUpdateAdmin(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "memberUpdateAdmin((bytes32,bytes32)[])"(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    memberUpdateAlterabilityStatus(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "memberUpdateAlterabilityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    memberUpdateTypeLimit(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "memberUpdateTypeLimit((bytes32,uint16)[])"(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    "AgentReferredByPolicyUpdated(address,bytes32,bytes32,uint8)"(
      sender?: PromiseOrValue<string> | null,
      agentId?: PromiseOrValue<BytesLike> | null,
      policyId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): AgentReferredByPolicyUpdatedEventFilter;
    AgentReferredByPolicyUpdated(
      sender?: PromiseOrValue<string> | null,
      agentId?: PromiseOrValue<BytesLike> | null,
      policyId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): AgentReferredByPolicyUpdatedEventFilter;

    "AgentReferredByScopeUpdated(address,bytes32,bytes32,uint8)"(
      sender?: PromiseOrValue<string> | null,
      agentId?: PromiseOrValue<BytesLike> | null,
      scopeId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): AgentReferredByScopeUpdatedEventFilter;
    AgentReferredByScopeUpdated(
      sender?: PromiseOrValue<string> | null,
      agentId?: PromiseOrValue<BytesLike> | null,
      scopeId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): AgentReferredByScopeUpdatedEventFilter;

    "MemberActivityUpdated(address,bytes32,uint8)"(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      acstat?: null
    ): MemberActivityUpdatedEventFilter;
    MemberActivityUpdated(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      acstat?: null
    ): MemberActivityUpdatedEventFilter;

    "MemberAdminUpdated(address,bytes32,bytes32)"(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      adminId?: PromiseOrValue<BytesLike> | null
    ): MemberAdminUpdatedEventFilter;
    MemberAdminUpdated(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      adminId?: PromiseOrValue<BytesLike> | null
    ): MemberAdminUpdatedEventFilter;

    "MemberAlterabilityUpdated(address,bytes32,uint8)"(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      alstat?: null
    ): MemberAlterabilityUpdatedEventFilter;
    MemberAlterabilityUpdated(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      alstat?: null
    ): MemberAlterabilityUpdatedEventFilter;

    "MemberRegistered(address,bytes32,address,bytes32)"(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      roleId?: null
    ): MemberRegisteredEventFilter;
    MemberRegistered(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      roleId?: null
    ): MemberRegisteredEventFilter;

    "MemberTypeLimitUpdated(address,bytes32,uint16)"(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      typeLimit?: null
    ): MemberTypeLimitUpdatedEventFilter;
    MemberTypeLimitUpdated(
      sender?: PromiseOrValue<string> | null,
      memberId?: PromiseOrValue<BytesLike> | null,
      typeLimit?: null
    ): MemberTypeLimitUpdatedEventFilter;

    "ProxyUpgraded(address,address,address)"(
      sender?: PromiseOrValue<string> | null,
      proxy?: PromiseOrValue<string> | null,
      newImplementation?: PromiseOrValue<string> | null
    ): ProxyUpgradedEventFilter;
    ProxyUpgraded(
      sender?: PromiseOrValue<string> | null,
      proxy?: PromiseOrValue<string> | null,
      newImplementation?: PromiseOrValue<string> | null
    ): ProxyUpgradedEventFilter;

    "ScopeReferredByAgentUpdated(address,bytes32,bytes32,uint8)"(
      sender?: PromiseOrValue<string> | null,
      scopeId?: PromiseOrValue<BytesLike> | null,
      agentId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): ScopeReferredByAgentUpdatedEventFilter;
    ScopeReferredByAgentUpdated(
      sender?: PromiseOrValue<string> | null,
      scopeId?: PromiseOrValue<BytesLike> | null,
      agentId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): ScopeReferredByAgentUpdatedEventFilter;

    "ScopeReferredByPolicyUpdated(address,bytes32,bytes32,uint8)"(
      sender?: PromiseOrValue<string> | null,
      scopeId?: PromiseOrValue<BytesLike> | null,
      policyId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): ScopeReferredByPolicyUpdatedEventFilter;
    ScopeReferredByPolicyUpdated(
      sender?: PromiseOrValue<string> | null,
      scopeId?: PromiseOrValue<BytesLike> | null,
      policyId?: PromiseOrValue<BytesLike> | null,
      action?: null
    ): ScopeReferredByPolicyUpdatedEventFilter;
  };

  estimateGas: {
    CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    "CTX_MESSAGE_TYPEHASH()"(overrides?: CallOverrides): Promise<BigNumber>;

    FUNCTION_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    "FUNCTION_MESSAGE_TYPEHASH()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIVELY_VERSE_ADMIN_TYPE_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "LIVELY_VERSE_ADMIN_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIVELY_VERSE_AGENT_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIVELY_VERSE_ANONYMOUSE_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIVELY_VERSE_ANY_TYPE_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "LIVELY_VERSE_ANY_TYPE_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    LIVELY_VERSE_POLICY_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIVELY_VERSE_SCOPE_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PREDICT_CTX_MESSAGE_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    "PREDICT_CTX_MESSAGE_TYPEHASH()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    TYPE_HASH(overrides?: CallOverrides): Promise<BigNumber>;

    "TYPE_HASH()"(overrides?: CallOverrides): Promise<BigNumber>;

    memberCheckId(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "memberCheckId(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    memberGetInfo(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "memberGetInfo(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    memberGetTypes(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "memberGetTypes(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    memberHasType(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "memberHasType(bytes32,bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    memberRegister(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "memberRegister((bytes32,address,uint16,uint8,uint8)[])"(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    memberUpdateActivityStatus(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "memberUpdateActivityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    memberUpdateAdmin(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "memberUpdateAdmin((bytes32,bytes32)[])"(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    memberUpdateAlterabilityStatus(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "memberUpdateAlterabilityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    memberUpdateTypeLimit(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "memberUpdateTypeLimit((bytes32,uint16)[])"(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CTX_MESSAGE_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CTX_MESSAGE_TYPEHASH()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    FUNCTION_MESSAGE_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "FUNCTION_MESSAGE_TYPEHASH()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIVELY_VERSE_ADMIN_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "LIVELY_VERSE_ADMIN_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIVELY_VERSE_AGENT_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "LIVELY_VERSE_AGENT_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIVELY_VERSE_ANONYMOUSE_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "LIVELY_VERSE_ANONYMOUSE_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIVELY_VERSE_ANY_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "LIVELY_VERSE_ANY_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIVELY_VERSE_POLICY_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "LIVELY_VERSE_POLICY_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIVELY_VERSE_SCOPE_MASTER_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "LIVELY_VERSE_SCOPE_MASTER_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "LIVELY_VERSE_SYSTEM_ADMIN_TYPE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PREDICT_CTX_MESSAGE_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "PREDICT_CTX_MESSAGE_TYPEHASH()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    TYPE_HASH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "TYPE_HASH()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    memberCheckId(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "memberCheckId(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    memberGetInfo(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "memberGetInfo(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    memberGetTypes(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "memberGetTypes(bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    memberHasType(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "memberHasType(bytes32,bytes32)"(
      memberId: PromiseOrValue<BytesLike>,
      typeId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    memberRegister(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "memberRegister((bytes32,address,uint16,uint8,uint8)[])"(
      requests: IMemberManagement.MemberRegisterStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    memberUpdateActivityStatus(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "memberUpdateActivityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateActivityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    memberUpdateAdmin(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "memberUpdateAdmin((bytes32,bytes32)[])"(
      requests: IAclCommons.UpdateAdminRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    memberUpdateAlterabilityStatus(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "memberUpdateAlterabilityStatus((bytes32,uint8)[])"(
      requests: IAclCommons.UpdateAlterabilityRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    memberUpdateTypeLimit(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "memberUpdateTypeLimit((bytes32,uint16)[])"(
      requests: IMemberManagement.MemberUpdateTypeLimitRequestStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
