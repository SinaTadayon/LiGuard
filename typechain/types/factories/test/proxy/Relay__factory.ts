/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Relay, RelayInterface } from "../../../test/proxy/Relay";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "destContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103c73803806103c783398181016040528101906100329190610174565b6100647f3e0a90c85407aa1602f28c2d51f35cce406c548d82878d0a2dd96ac7bd8682c060001b61010e60201b60201c565b6100967fbe5da1ed56ad9aeb7898e7bf6fb5ceb2685e8157c8eddb44c22f09a42d949b0c60001b61010e60201b60201c565b6100c87f24c2f1417a29fa33effe4f3d0522075004d5e9c68e76a2a63d55ede5305d2a7e60001b61010e60201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101a1565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061014182610116565b9050919050565b61015181610136565b811461015c57600080fd5b50565b60008151905061016e81610148565b92915050565b60006020828403121561018a57610189610111565b5b60006101988482850161015f565b91505092915050565b610217806101b06000396000f3fe60806040523661003f576100357feae76b075f0879f6038b14234b102e9c27c64d0b15ae8bc144cb85f1e2dee86460001b6100cd565b61003d6100d0565b005b61006b7fc4a5e0869ce24f6d85fdd1abb9fdae55c32a737eab28e46b2b5904a1db58821360001b6100cd565b6100977ffbc5749d5931c92dd3d360f2d08b38dbf0307c33c01cfcf6c7b2eb60b4f7ed8260001b6100cd565b6100c37f0a6f73a89b92e79a7f96e21c92aa7e4e05cfdec62f2967c41eb6c0e4549b726460001b6100cd565b6100cb6100d0565b005b50565b6100fc7fc5cde95c1f0fece1f52bc1f4de0c10fa16a78c53ca9966a714e060d2de9b845560001b6100cd565b6101287f5306e315fcf7e0f3d31e43d3c857a872e75fea54c89d2fd67b222e230dc7ff8d60001b6100cd565b6101547fc9d144bdaf25f4acf8924a97fb7e3c211be7099b86ed8d0bccfed25e8b30d3dd60001b6100cd565b61015d3461015f565b565b61018b7f90ae04141643e18fac3a79e030141388cb562de3919b8fcbef177cf3430d8db460001b6100cd565b6101b77f6f257f3940c926623e09e176b91dd9f40fab90c19c56cf474cb7a0f6b5f18f1360001b6100cd565b600054366000803760008036600085855af13d6000803e80600081146101dc573d6000f35b3d6000fdfea2646970667358221220a67c1bc2d41929e94a8a29fa2de75c9cb44a4ddb3a877d870b57ca62e8bb367164736f6c63430008110033";

type RelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Relay__factory extends ContractFactory {
  constructor(...args: RelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    destContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Relay> {
    return super.deploy(destContract, overrides || {}) as Promise<Relay>;
  }
  override getDeployTransaction(
    destContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(destContract, overrides || {});
  }
  override attach(address: string): Relay {
    return super.attach(address) as Relay;
  }
  override connect(signer: Signer): Relay__factory {
    return super.connect(signer) as Relay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayInterface {
    return new utils.Interface(_abi) as RelayInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Relay {
    return new Contract(address, _abi, signerOrProvider) as Relay;
  }
}
