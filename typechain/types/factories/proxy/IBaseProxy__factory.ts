/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IBaseProxy, IBaseProxyInterface } from "../../proxy/IBaseProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
];

export class IBaseProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IBaseProxyInterface {
    return new utils.Interface(_abi) as IBaseProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBaseProxy {
    return new Contract(address, _abi, signerOrProvider) as IBaseProxy;
  }
}
