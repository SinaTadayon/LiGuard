{"version":3,"file":"AccessControlManagerTest.js","sourceRoot":"","sources":["../../../../../typechain/types/test/acl/AccessControlManagerTest.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport interface AccessControlManagerTestInterface extends utils.Interface {\n  functions: {\n    \"accessControlManager()\": FunctionFragment;\n    \"contractContext()\": FunctionFragment;\n    \"contractName()\": FunctionFragment;\n    \"contractRealm()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"domainSeparator()\": FunctionFragment;\n    \"initVersion()\": FunctionFragment;\n    \"initialize()\": FunctionFragment;\n    \"isSafeMode()\": FunctionFragment;\n    \"isUpgradable()\": FunctionFragment;\n    \"localAdmin()\": FunctionFragment;\n    \"proxiableUUID()\": FunctionFragment;\n    \"setLocalAdmin(address)\": FunctionFragment;\n    \"setSafeMode(bool)\": FunctionFragment;\n    \"setUpgradeStatus(bool)\": FunctionFragment;\n    \"subjectAddress()\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"upgradeTo(address,bytes,bool)\": FunctionFragment;\n    \"withdrawBalance(address)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"accessControlManager\"\n      | \"accessControlManager()\"\n      | \"contractContext\"\n      | \"contractContext()\"\n      | \"contractName\"\n      | \"contractName()\"\n      | \"contractRealm\"\n      | \"contractRealm()\"\n      | \"contractVersion\"\n      | \"contractVersion()\"\n      | \"domainSeparator\"\n      | \"domainSeparator()\"\n      | \"initVersion\"\n      | \"initVersion()\"\n      | \"initialize\"\n      | \"initialize()\"\n      | \"isSafeMode\"\n      | \"isSafeMode()\"\n      | \"isUpgradable\"\n      | \"isUpgradable()\"\n      | \"localAdmin\"\n      | \"localAdmin()\"\n      | \"proxiableUUID\"\n      | \"proxiableUUID()\"\n      | \"setLocalAdmin\"\n      | \"setLocalAdmin(address)\"\n      | \"setSafeMode\"\n      | \"setSafeMode(bool)\"\n      | \"setUpgradeStatus\"\n      | \"setUpgradeStatus(bool)\"\n      | \"subjectAddress\"\n      | \"subjectAddress()\"\n      | \"supportsInterface\"\n      | \"supportsInterface(bytes4)\"\n      | \"upgradeTo\"\n      | \"upgradeTo(address,bytes,bool)\"\n      | \"withdrawBalance\"\n      | \"withdrawBalance(address)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"accessControlManager\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"accessControlManager()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractContext\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractContext()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractName\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractName()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractRealm\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractRealm()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"domainSeparator\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"domainSeparator()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isSafeMode\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isSafeMode()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isUpgradable\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isUpgradable()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"localAdmin\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"localAdmin()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setLocalAdmin\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setLocalAdmin(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeMode\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeMode(bool)\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setUpgradeStatus\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setUpgradeStatus(bool)\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"subjectAddress\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"subjectAddress()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface(bytes4)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo(address,bytes,bool)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"accessControlManager\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"accessControlManager()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractContext()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractName\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractName()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractRealm()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"domainSeparator\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"domainSeparator()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"initVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"initVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"initialize()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"isSafeMode\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isSafeMode()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isUpgradable()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"localAdmin\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"localAdmin()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setLocalAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setLocalAdmin(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeMode\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeMode(bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setUpgradeStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setUpgradeStatus(bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"subjectAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"subjectAddress()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface(bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"upgradeTo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"upgradeTo(address,bytes,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance(address)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"Initialized(address,address,address,string,string,bytes32,uint16)\": EventFragment;\n    \"LocalAdminChanged(address,address,address)\": EventFragment;\n    \"SafeModeChanged(address,address,bytes32,bool)\": EventFragment;\n    \"UpgradeStatusChanged(address,address,bytes32,bool)\": EventFragment;\n    \"Upgraded(address,address,address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"Initialized\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Initialized(address,address,address,string,string,bytes32,uint16)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"LocalAdminChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"LocalAdminChanged(address,address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"SafeModeChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"SafeModeChanged(address,address,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"UpgradeStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"UpgradeStatusChanged(address,address,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Upgraded\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Upgraded(address,address,address)\"\n  ): EventFragment;\n}\n\nexport interface InitializedEventObject {\n  sender: string;\n  proxy: string;\n  subject: string;\n  name: string;\n  version: string;\n  realm: string;\n  initCount: number;\n}\nexport type InitializedEvent = TypedEvent<\n  [string, string, string, string, string, string, number],\n  InitializedEventObject\n>;\n\nexport type InitializedEventFilter = TypedEventFilter<InitializedEvent>;\n\nexport interface LocalAdminChangedEventObject {\n  sender: string;\n  proxy: string;\n  newAdmin: string;\n}\nexport type LocalAdminChangedEvent = TypedEvent<\n  [string, string, string],\n  LocalAdminChangedEventObject\n>;\n\nexport type LocalAdminChangedEventFilter =\n  TypedEventFilter<LocalAdminChangedEvent>;\n\nexport interface SafeModeChangedEventObject {\n  sender: string;\n  proxy: string;\n  realm: string;\n  status: boolean;\n}\nexport type SafeModeChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  SafeModeChangedEventObject\n>;\n\nexport type SafeModeChangedEventFilter = TypedEventFilter<SafeModeChangedEvent>;\n\nexport interface UpgradeStatusChangedEventObject {\n  sender: string;\n  proxy: string;\n  realm: string;\n  status: boolean;\n}\nexport type UpgradeStatusChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  UpgradeStatusChangedEventObject\n>;\n\nexport type UpgradeStatusChangedEventFilter =\n  TypedEventFilter<UpgradeStatusChangedEvent>;\n\nexport interface UpgradedEventObject {\n  sender: string;\n  proxy: string;\n  newImplementation: string;\n}\nexport type UpgradedEvent = TypedEvent<\n  [string, string, string],\n  UpgradedEventObject\n>;\n\nexport type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;\n\nexport interface AccessControlManagerTest extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: AccessControlManagerTestInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    accessControlManager(overrides?: CallOverrides): Promise<[string]>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractContext(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractName(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractRealm(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<[string]>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    initVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<[number]>;\n\n    initialize(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"initialize()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    localAdmin(overrides?: CallOverrides): Promise<[string]>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<[string]>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<[string]>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  accessControlManager(overrides?: CallOverrides): Promise<string>;\n\n  \"accessControlManager()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractContext(overrides?: CallOverrides): Promise<string>;\n\n  \"contractContext()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractName(overrides?: CallOverrides): Promise<string>;\n\n  \"contractName()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractRealm(overrides?: CallOverrides): Promise<string>;\n\n  \"contractRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<string>;\n\n  \"contractVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n  domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n  \"domainSeparator()\"(overrides?: CallOverrides): Promise<string>;\n\n  initVersion(overrides?: CallOverrides): Promise<number>;\n\n  \"initVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n  initialize(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"initialize()\"(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  isSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  isUpgradable(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isUpgradable()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  localAdmin(overrides?: CallOverrides): Promise<string>;\n\n  \"localAdmin()\"(overrides?: CallOverrides): Promise<string>;\n\n  proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n  \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n  setLocalAdmin(\n    newLocalAdmin: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setLocalAdmin(address)\"(\n    newLocalAdmin: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setSafeMode(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setSafeMode(bool)\"(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setUpgradeStatus(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setUpgradeStatus(bool)\"(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  subjectAddress(overrides?: CallOverrides): Promise<string>;\n\n  \"subjectAddress()\"(overrides?: CallOverrides): Promise<string>;\n\n  supportsInterface(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"supportsInterface(bytes4)\"(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  upgradeTo(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    forceCall: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"upgradeTo(address,bytes,bool)\"(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    forceCall: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  withdrawBalance(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"withdrawBalance(address)\"(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    accessControlManager(overrides?: CallOverrides): Promise<string>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractContext(overrides?: CallOverrides): Promise<string>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractName(overrides?: CallOverrides): Promise<string>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractRealm(overrides?: CallOverrides): Promise<string>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<string>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<string>;\n\n    initVersion(overrides?: CallOverrides): Promise<number>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n    initialize(overrides?: CallOverrides): Promise<void>;\n\n    \"initialize()\"(overrides?: CallOverrides): Promise<void>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    localAdmin(overrides?: CallOverrides): Promise<string>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<string>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<string>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<string>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"Initialized(address,address,address,string,string,bytes32,uint16)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      subject?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null,\n      initCount?: null\n    ): InitializedEventFilter;\n    Initialized(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      subject?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null,\n      initCount?: null\n    ): InitializedEventFilter;\n\n    \"LocalAdminChanged(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newAdmin?: null\n    ): LocalAdminChangedEventFilter;\n    LocalAdminChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newAdmin?: null\n    ): LocalAdminChangedEventFilter;\n\n    \"SafeModeChanged(address,address,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): SafeModeChangedEventFilter;\n    SafeModeChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): SafeModeChangedEventFilter;\n\n    \"UpgradeStatusChanged(address,address,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): UpgradeStatusChangedEventFilter;\n    UpgradeStatusChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): UpgradeStatusChangedEventFilter;\n\n    \"Upgraded(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n    Upgraded(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n  };\n\n  estimateGas: {\n    accessControlManager(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractContext(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractName(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractRealm(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    initVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    initialize(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"initialize()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    localAdmin(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    accessControlManager(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"accessControlManager()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    contractContext(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractContext()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    contractName(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractRealm(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractVersion()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"domainSeparator()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    initVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    initialize(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"initialize()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    localAdmin(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"subjectAddress()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}