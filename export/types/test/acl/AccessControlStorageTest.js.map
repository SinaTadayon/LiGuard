{"version":3,"file":"AccessControlStorageTest.js","sourceRoot":"","sources":["../../../../../typechain/types/test/acl/AccessControlStorageTest.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseContract, Signer, utils } from \"ethers\";\nimport type { EventFragment } from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport interface AccessControlStorageTestInterface extends utils.Interface {\n  functions: {};\n\n  events: {\n    \"ProxyUpgraded(address,address,address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"ProxyUpgraded\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ProxyUpgraded(address,address,address)\"\n  ): EventFragment;\n}\n\nexport interface ProxyUpgradedEventObject {\n  sender: string;\n  proxy: string;\n  newImplementation: string;\n}\nexport type ProxyUpgradedEvent = TypedEvent<\n  [string, string, string],\n  ProxyUpgradedEventObject\n>;\n\nexport type ProxyUpgradedEventFilter = TypedEventFilter<ProxyUpgradedEvent>;\n\nexport interface AccessControlStorageTest extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: AccessControlStorageTestInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {};\n\n  callStatic: {};\n\n  filters: {\n    \"ProxyUpgraded(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): ProxyUpgradedEventFilter;\n    ProxyUpgraded(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): ProxyUpgradedEventFilter;\n  };\n\n  estimateGas: {};\n\n  populateTransaction: {};\n}\n"]}