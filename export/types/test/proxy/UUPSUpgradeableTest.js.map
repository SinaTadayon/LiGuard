{"version":3,"file":"UUPSUpgradeableTest.js","sourceRoot":"","sources":["../../../../../typechain/types/test/proxy/UUPSUpgradeableTest.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PayableOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport interface UUPSUpgradeableTestInterface extends utils.Interface {\n  functions: {\n    \"proxiableUUID()\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"upgradeTo(address)\": FunctionFragment;\n    \"upgradeToAndCall(address,bytes)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"proxiableUUID\"\n      | \"proxiableUUID()\"\n      | \"supportsInterface\"\n      | \"supportsInterface(bytes4)\"\n      | \"upgradeTo\"\n      | \"upgradeTo(address)\"\n      | \"upgradeToAndCall\"\n      | \"upgradeToAndCall(address,bytes)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface(bytes4)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeToAndCall\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeToAndCall(address,bytes)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface(bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"upgradeTo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"upgradeTo(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"upgradeToAndCall\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"upgradeToAndCall(address,bytes)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"AdminChanged(address,address)\": EventFragment;\n    \"Upgraded(address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"AdminChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AdminChanged(address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Upgraded\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Upgraded(address)\"): EventFragment;\n}\n\nexport interface AdminChangedEventObject {\n  previousAdmin: string;\n  newAdmin: string;\n}\nexport type AdminChangedEvent = TypedEvent<\n  [string, string],\n  AdminChangedEventObject\n>;\n\nexport type AdminChangedEventFilter = TypedEventFilter<AdminChangedEvent>;\n\nexport interface UpgradedEventObject {\n  implementation: string;\n}\nexport type UpgradedEvent = TypedEvent<[string], UpgradedEventObject>;\n\nexport type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;\n\nexport interface UUPSUpgradeableTest extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: UUPSUpgradeableTestInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    proxiableUUID(overrides?: CallOverrides): Promise<[string]>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"upgradeTo(address)\"(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    upgradeToAndCall(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"upgradeToAndCall(address,bytes)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n  \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n  supportsInterface(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"supportsInterface(bytes4)\"(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  upgradeTo(\n    newImplementation: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"upgradeTo(address)\"(\n    newImplementation: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  upgradeToAndCall(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"upgradeToAndCall(address,bytes)\"(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"upgradeTo(address)\"(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    upgradeToAndCall(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"upgradeToAndCall(address,bytes)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"AdminChanged(address,address)\"(\n      previousAdmin?: null,\n      newAdmin?: null\n    ): AdminChangedEventFilter;\n    AdminChanged(\n      previousAdmin?: null,\n      newAdmin?: null\n    ): AdminChangedEventFilter;\n\n    \"Upgraded(address)\"(\n      implementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n    Upgraded(\n      implementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n  };\n\n  estimateGas: {\n    proxiableUUID(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"upgradeTo(address)\"(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    upgradeToAndCall(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"upgradeToAndCall(address,bytes)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    proxiableUUID(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"upgradeTo(address)\"(\n      newImplementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    upgradeToAndCall(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"upgradeToAndCall(address,bytes)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}