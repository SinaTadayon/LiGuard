{"version":3,"file":"ERC1967UpgradeTest.js","sourceRoot":"","sources":["../../../../../typechain/types/test/proxy/ERC1967UpgradeTest.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseContract, Signer, utils } from \"ethers\";\nimport type { EventFragment } from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport interface ERC1967UpgradeTestInterface extends utils.Interface {\n  functions: {};\n\n  events: {\n    \"AdminChanged(address,address)\": EventFragment;\n    \"Upgraded(address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"AdminChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AdminChanged(address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Upgraded\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Upgraded(address)\"): EventFragment;\n}\n\nexport interface AdminChangedEventObject {\n  previousAdmin: string;\n  newAdmin: string;\n}\nexport type AdminChangedEvent = TypedEvent<\n  [string, string],\n  AdminChangedEventObject\n>;\n\nexport type AdminChangedEventFilter = TypedEventFilter<AdminChangedEvent>;\n\nexport interface UpgradedEventObject {\n  implementation: string;\n}\nexport type UpgradedEvent = TypedEvent<[string], UpgradedEventObject>;\n\nexport type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;\n\nexport interface ERC1967UpgradeTest extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: ERC1967UpgradeTestInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {};\n\n  callStatic: {};\n\n  filters: {\n    \"AdminChanged(address,address)\"(\n      previousAdmin?: null,\n      newAdmin?: null\n    ): AdminChangedEventFilter;\n    AdminChanged(\n      previousAdmin?: null,\n      newAdmin?: null\n    ): AdminChangedEventFilter;\n\n    \"Upgraded(address)\"(\n      implementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n    Upgraded(\n      implementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n  };\n\n  estimateGas: {};\n\n  populateTransaction: {};\n}\n"]}