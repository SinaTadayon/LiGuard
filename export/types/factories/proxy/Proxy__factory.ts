/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Proxy, ProxyInterface } from "../../proxy/Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newVersion",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldVersion",
        type: "string",
      },
    ],
    name: "ProxyUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052604051610a2c380380610a2c833981016040819052610022916106cb565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61073b565b6000805160206109e58339815191521461006957610069610760565b6100758282600061007d565b50505061087a565b60606100b57f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b61022360201b6100521760201c565b5460ff16156100dc576100c784610226565b5060408051600081526020810190915261021c565b836001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610136575060408051601f3d908101601f1916820190925261013391810190610776565b60015b61019e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084015b60405180910390fd5b6000805160206109e5833981519152811461020d5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610195565b506102198484846102e1565b90505b9392505050565b90565b6102398161031f60201b6100551760201c565b61029b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610195565b806102c06000805160206109e583398151915260001b61022360201b6100521760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102ec8461032e565b6000835111806102f95750815b1561030857610219848461049e565b505060408051600081526020810190915292915050565b6001600160a01b03163b151590565b60006103386105a4565b6040519091506001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2816001600160a01b0316306001600160a01b0316336001600160a01b03167ebe01838f727d9b6a4cc703cad7dd0426a7dd3a2ad8bbc1aae8e61a5f7fdd3684866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610414919081019061078f565b866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047a919081019061078f565b6040516104899392919061080b565b60405180910390a461049a82610226565b5050565b60606104b38361031f60201b6100551760201c565b61050e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610195565b600080846001600160a01b031684604051610529919061084b565b600060405180830381855af49150503d8060008114610564576040519150601f19603f3d011682016040523d82523d6000602084013e610569565b606091505b509150915061059b8282604051806060016040528060278152602001610a05602791396105d960201b6100641760201c565b95945050505050565b60006105ca6000805160206109e583398151915260001b61022360201b6100521760201c565b546001600160a01b0316919050565b606083156105e857508161021c565b8251156105f85782518084602001fd5b8160405162461bcd60e51b81526004016101959190610867565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561064357818101518382015260200161062b565b83811115610652576000848401525b50505050565b60006001600160401b038084111561067257610672610612565b604051601f8501601f19908116603f0116810190828211818310171561069a5761069a610612565b816040528093508581528686860111156106b357600080fd5b6106c1866020830187610628565b5050509392505050565b600080604083850312156106de57600080fd5b82516001600160a01b03811681146106f557600080fd5b60208401519092506001600160401b0381111561071157600080fd5b8301601f8101851361072257600080fd5b61073185825160208401610658565b9150509250929050565b60008282101561075b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561078857600080fd5b5051919050565b6000602082840312156107a157600080fd5b81516001600160401b038111156107b757600080fd5b8201601f810184136107c857600080fd5b6107d784825160208401610658565b949350505050565b600081518084526107f7816020860160208601610628565b601f01601f19169290920160200192915050565b6001600160a01b038416815260606020820181905260009061082f908301856107df565b828103604084015261084181856107df565b9695505050505050565b6000825161085d818460208701610628565b9190910192915050565b60208152600061021c60208301846107df565b61015c806108896000396000f3fe60806040523661001357610011610017565b005b6100115b61005061004b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6100ad565b565b90565b6001600160a01b03163b151590565b606083156100735750816100a6565b8251156100835782518084602001fd5b8160405162461bcd60e51b815260040161009d91906100d1565b60405180910390fd5b9392505050565b3660008037600080366000845af43d6000803e8080156100cc573d6000f35b3d6000fd5b600060208083528351808285015260005b818110156100fe578581018301518582016040015282016100e2565b81811115610110576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220805a2fa65c8b6d4e86738236ec87c1a83548970766b81f2468adff86ec24704a64736f6c634300080f0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Proxy__factory extends ContractFactory {
  constructor(...args: ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logic: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Proxy> {
    return super.deploy(_logic, _data, overrides || {}) as Promise<Proxy>;
  }
  override getDeployTransaction(
    _logic: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, _data, overrides || {});
  }
  override attach(address: string): Proxy {
    return super.attach(address) as Proxy;
  }
  override connect(signer: Signer): Proxy__factory {
    return super.connect(signer) as Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyInterface {
    return new utils.Interface(_abi) as ProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Proxy {
    return new Contract(address, _abi, signerOrProvider) as Proxy;
  }
}
