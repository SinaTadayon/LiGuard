/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LRoleManagement,
  LRoleManagementInterface,
} from "../../../lib/acl/LRoleManagement";

const _abi = [
  {
    inputs: [],
    name: "LIB_NAME",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIB_VERSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6116a861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c8063901d29eb11610070578063901d29eb14610158578063bec947511461018f578063c3203fd114610197578063ea5dcd5d146101b7578063ecea188f146101d957600080fd5b80632466209b146100ad5780633859eb7f146100c85780633d580577146100e85780637cb8dd2e1461011857806389d4da6514610138575b600080fd5b6100b56101ec565b6040519081526020015b60405180910390f35b8180156100d457600080fd5b506100b56100e33660046111bd565b61021a565b8180156100f457600080fd5b50610108610103366004611258565b6104ec565b60405190151581526020016100bf565b61012b61012636600461129d565b6107ac565b6040516100bf91906112bf565b81801561014457600080fd5b50610108610153366004611258565b610811565b81801561016457600080fd5b5061017861017336600461130c565b610a33565b6040805192151583526020830191909152016100bf565b6100b5610bcf565b8180156101a357600080fd5b506101786101b236600461133a565b610bf2565b6101ca6101c536600461129d565b610e2c565b6040516100bf93929190611366565b6101086101e7366004611258565b610eef565b604051640312e302e360dc1b60208201526025015b6040516020818303038152906040528051906020012081565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e91906113ca565b156102a45760405162461bcd60e51b815260040161029b906113e7565b60405180910390fd5b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c6960876102c830610f73565b6040516001600160e01b031960e085901b1681526102f5929190339063b2dc26e560e01b9060040161141e565b602060405180830381865af4158015610312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033691906113ca565b6103525760405162461bcd60e51b815260040161029b9061144c565b60008381526004870160205260409020805461036d90611473565b90506000036103b05760405162461bcd60e51b815260206004820152600f60248201526e11dc9bdd5c08139bdd08119bdd5b99608a1b604482015260640161029b565b60008490036103f55760405162461bcd60e51b8152602060048201526011602482015270149bdb194813985b5948125b9d985b1a59607a1b604482015260640161029b565b6000858560405160200161040a9291906114ad565b60408051601f198184030181529181528151602092830120600081815260028b01909352912080549192509061043f90611473565b15905061048e5760405162461bcd60e51b815260206004820152601760248201527f526f6c6520416c72656164792052656769737465726564000000000000000000604482015260640161029b565b600084815260048801602052604090206104ab9060020182610fb2565b5060008181526002880160205260409020806104c8878983611522565b5060018101859055600201805484151560ff19909116179055905095945050505050565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055091906113ca565b1561056d5760405162461bcd60e51b815260040161029b906113e7565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c69608561059130610f73565b6040516001600160e01b031960e085901b1681526105be929190339063df01de4560e01b9060040161141e565b602060405180830381865af41580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff91906113ca565b61061b5760405162461bcd60e51b815260040161029b9061144c565b60008381526002850160205260409020805461063690611473565b90506000036106575760405162461bcd60e51b815260040161029b906115e3565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152600f60248201526e1059191c995cdcc8125b9d985b1a59608a1b604482015260640161029b565b600083815260028501602052604090206106bc9060030183610fbe565b6106fc5760405162461bcd60e51b81526020600482015260116024820152701058d8dbdd5b9d08139bdd08119bdd5b99607a1b604482015260640161029b565b6001600160a01b03821660009081526020858152604080832086845290915281205460ff1660028111156107325761073261160b565b036107755760405162461bcd60e51b8152602060048201526013602482015272155cd95c88149bdb1948139bdd08119bdd5b99606a1b604482015260640161029b565b506001600160a01b0381166000908152602084815260408083208584529091529020805460ff1916600217905560015b9392505050565b600081815260028301602052604090208054606091906107cb90611473565b90506000036107ec5760405162461bcd60e51b815260040161029b906115e3565b6000828152600284016020526040902061080890600301610fe0565b90505b92915050565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087591906113ca565b156108925760405162461bcd60e51b815260040161029b906113e7565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c6960856108b630610f73565b6040516001600160e01b031960e085901b1681526108e392919033906308f09e0f60e41b9060040161141e565b602060405180830381865af4158015610900573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092491906113ca565b6109405760405162461bcd60e51b815260040161029b9061144c565b60008381526002850160205260409020805461095b90611473565b905060000361097c5760405162461bcd60e51b815260040161029b906115e3565b6001600160a01b0382166109c45760405162461bcd60e51b815260206004820152600f60248201526e1059191c995cdcc8125b9d985b1a59608a1b604482015260640161029b565b6001600160a01b0382166000908152602085815260408083208684528252808320805460ff19166001179055600287019091529020610a069060030183610fbe565b610a295760008381526002850160205260409020610a279060030183610fed565b505b5060019392505050565b600080306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9891906113ca565b15610ab55760405162461bcd60e51b815260040161029b906113e7565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c696086610ad930610f73565b6040516001600160e01b031960e085901b168152610b0692919033906301801d1160e31b9060040161141e565b602060405180830381865af4158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4791906113ca565b610b635760405162461bcd60e51b815260040161029b9061144c565b600084815260028601602052604090208054610b7e90611473565b9050600003610b9f5760405162461bcd60e51b815260040161029b906115e3565b5050600091825260029283016020526040909120918201805460ff19169115159190911790556001908101549091565b6040516e13149bdb1953585b9859d95b595b9d608a1b6020820152602f01610201565b600080306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5791906113ca565b15610c745760405162461bcd60e51b815260040161029b906113e7565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c696086610c9830610f73565b6040516001600160e01b031960e085901b168152610cc59291903390630dbf304b60e41b9060040161141e565b602060405180830381865af4158015610ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0691906113ca565b610d225760405162461bcd60e51b815260040161029b9061144c565b600084815260028601602052604090208054610d3d90611473565b9050600003610d5e5760405162461bcd60e51b815260040161029b906115e3565b600083815260048601602052604090208054610d7990611473565b9050600003610dbc5760405162461bcd60e51b815260206004820152600f60248201526e11dc9bdd5c08139bdd08119bdd5b99608a1b604482015260640161029b565b60008481526002808701602090815260408084206001015480855260048a01909252909220610dec910186611002565b5060008481526004870160205260409020610e0a9060020186610fb2565b5060009485526002959095016020525050604090912060019081019190915591565b6000818152600280840160205260408220600181015491810154815460609493849392909160ff909116908390610e6290611473565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8e90611473565b8015610edb5780601f10610eb057610100808354040283529160200191610edb565b820191906000526020600020905b815481529060010190602001808311610ebe57829003601f168201915b505050505092509250925092509250925092565b600082815260028401602052604081208054610f0a90611473565b9050600003610f1b575060006107a5565b6001600160a01b03821615610f32575060006107a5565b60016001600160a01b03831660009081526020868152604080832087845290915290205460ff166002811115610f6a57610f6a61160b565b14949350505050565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b6000610808838361100e565b6001600160a01b03811660009081526001830160205260408120541515610808565b606060006107a58361105d565b6000610808836001600160a01b03841661100e565b600061080883836110b9565b60008181526001830160205260408120546110555750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561080b565b50600061080b565b6060816000018054806020026020016040519081016040528092919081815260200182805480156110ad57602002820191906000526020600020905b815481526020019060010190808311611099575b50505050509050919050565b600081815260018301602052604081205480156111a25760006110dd600183611621565b85549091506000906110f190600190611621565b905081811461115657600086600001828154811061111157611111611646565b906000526020600020015490508087600001848154811061113457611134611646565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806111675761116761165c565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061080b565b600091505061080b565b80151581146111ba57600080fd5b50565b6000806000806000608086880312156111d557600080fd5b85359450602086013567ffffffffffffffff808211156111f457600080fd5b818801915088601f83011261120857600080fd5b81358181111561121757600080fd5b89602082850101111561122957600080fd5b60208301965080955050505060408601359150606086013561124a816111ac565b809150509295509295909350565b60008060006060848603121561126d57600080fd5b833592506020840135915060408401356001600160a01b038116811461129257600080fd5b809150509250925092565b600080604083850312156112b057600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156113005783516001600160a01b0316835292840192918401916001016112db565b50909695505050505050565b60008060006060848603121561132157600080fd5b83359250602084013591506040840135611292816111ac565b60008060006060848603121561134f57600080fd5b505081359360208301359350604090920135919050565b606081526000845180606084015260005b818110156113945760208188018101516080868401015201611377565b818111156113a6576000608083860101525b5060208301949094525090151560408201526080601f909201601f19160101919050565b6000602082840312156113dc57600080fd5b81516107a5816111ac565b60208082526017908201527f536166654d6f64653a2043616c6c2052656a6563746564000000000000000000604082015260600190565b93845260208401929092526001600160a01b031660408301526001600160e01b031916606082015260800190565b6020808252600d908201526c1058d8d95cdcc811195b9a5959609a1b604082015260600190565b600181811c9082168061148757607f821691505b6020821081036114a757634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561151d57600081815260208120601f850160051c810160208610156114fa5750805b601f850160051c820191505b8181101561151957828155600101611506565b5050505b505050565b67ffffffffffffffff83111561153a5761153a6114bd565b61154e836115488354611473565b836114d3565b6000601f841160018114611582576000851561156a5750838201355b600019600387901b1c1916600186901b1783556115dc565b600083815260209020601f19861690835b828110156115b35786850135825560209485019460019092019101611593565b50868210156115d05760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6020808252600e908201526d149bdb1948139bdd08119bdd5b9960921b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b60008282101561164157634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b5c9d2c16aa5fbd55af2bb1f73b21146254d95dddc56006b02ae773e93d273f964736f6c634300080f0033";

type LRoleManagementConstructorParams =
  | [linkLibraryAddresses: LRoleManagementLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LRoleManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LRoleManagement__factory extends ContractFactory {
  constructor(...args: LRoleManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LRoleManagement__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LRoleManagementLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c43b1d7058274a71a9734d16e6b6586431\\$__", "g"),
      linkLibraryAddresses[
        "src/contracts/lib/acl/LAccessControl.sol:LAccessControl"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LRoleManagement> {
    return super.deploy(overrides || {}) as Promise<LRoleManagement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LRoleManagement {
    return super.attach(address) as LRoleManagement;
  }
  override connect(signer: Signer): LRoleManagement__factory {
    return super.connect(signer) as LRoleManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LRoleManagementInterface {
    return new utils.Interface(_abi) as LRoleManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LRoleManagement {
    return new Contract(address, _abi, signerOrProvider) as LRoleManagement;
  }
}

export interface LRoleManagementLibraryAddresses {
  ["src/contracts/lib/acl/LAccessControl.sol:LAccessControl"]: string;
}
