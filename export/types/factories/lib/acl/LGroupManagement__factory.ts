/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LGroupManagement,
  LGroupManagementInterface,
} from "../../../lib/acl/LGroupManagement";

const _abi = [
  {
    inputs: [],
    name: "LIB_NAME",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIB_VERSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610be861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c8063bec9475111610065578063bec94751146100ee578063d6825cba146100f6578063f43dcac214610117578063f728a0f51461013757600080fd5b806313ee73021461008c5780632466209b146100b55780634ba84563146100cb575b600080fd5b61009f61009a36600461082f565b610157565b6040516100ac9190610851565b60405180910390f35b6100bd61017d565b6040519081526020016100ac565b6100de6100d9366004610895565b6101ab565b60405190151581526020016100ac565b6100bd6101fc565b61010961010436600461082f565b610220565b6040516100ac9291906108c1565b81801561012357600080fd5b506100de61013236600461092f565b6102d6565b81801561014357600080fd5b506100bd610152366004610968565b6104db565b600081815260048301602052604090206060906101769060020161076b565b9392505050565b604051640312e302e360dc1b60208201526025015b6040516020818303038152906040528051906020012081565b6000828152600484016020526040812080546101c6906109f7565b90506000036101d757506000610176565b600083815260048501602052604090206101f4906002018361077c565b949350505050565b6040516f1311dc9bdd5c13585b9859d95b595b9d60821b6020820152603001610192565b6000818152600483016020526040812060018101548154606093929160ff1690829061024b906109f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610277906109f7565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b50505050509150915091509250929050565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a9190610a31565b156103865760405162461bcd60e51b815260206004820152601760248201527614d85999535bd9194e8810d85b1b0814995a9958dd1959604a1b60448201526064015b60405180910390fd5b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c6960856103aa30610794565b6040516001600160e01b031960e085901b1681526103d79291903390635716a26760e11b90600401610a4e565b602060405180830381865af41580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190610a31565b6104545760405162461bcd60e51b815260206004820152600d60248201526c1058d8d95cdcc811195b9a5959609a1b604482015260640161037d565b60008381526004850160205260409020805461046f906109f7565b1590506104b05760405162461bcd60e51b815260206004820152600f60248201526e11dc9bdd5c08139bdd08119bdd5b99608a1b604482015260640161037d565b50600082815260048401602052604090206001908101805483151560ff199091161790559392505050565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190610a31565b156105865760405162461bcd60e51b815260206004820152601760248201527614d85999535bd9194e8810d85b1b0814995a9958dd1959604a1b604482015260640161037d565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c6960866105aa30610794565b6040516001600160e01b031960e085901b1681526105d792919033906307e9933760e31b90600401610a4e565b602060405180830381865af41580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610a31565b6106545760405162461bcd60e51b815260206004820152600d60248201526c1058d8d95cdcc811195b9a5959609a1b604482015260640161037d565b600083900361069a5760405162461bcd60e51b815260206004820152601260248201527111dc9bdd5c0813985b5948125b9d985b1a5960721b604482015260640161037d565b600084846040516020016106af929190610a7c565b60408051601f198184030181529181528151602092830120600081815260048a0190935291208054919250906106e4906109f7565b1590506107335760405162461bcd60e51b815260206004820152601860248201527f47726f757020416c726561647920526567697374657265640000000000000000604482015260640161037d565b600081815260048701602052604090208061074f868883610af1565b50600101805484151560ff199091161790559050949350505050565b6060610776826107d3565b92915050565b60008181526001830160205260408120541515610176565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561082357602002820191906000526020600020905b81548152602001906001019080831161080f575b50505050509050919050565b6000806040838503121561084257600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156108895783518352928401929184019160010161086d565b50909695505050505050565b6000806000606084860312156108aa57600080fd5b505081359360208301359350604090920135919050565b604081526000835180604084015260005b818110156108ef57602081870181015160608684010152016108d2565b81811115610901576000606083860101525b50921515602083015250601f91909101601f191601606001919050565b801515811461092c57600080fd5b50565b60008060006060848603121561094457600080fd5b8335925060208401359150604084013561095d8161091e565b809150509250925092565b6000806000806060858703121561097e57600080fd5b84359350602085013567ffffffffffffffff8082111561099d57600080fd5b818701915087601f8301126109b157600080fd5b8135818111156109c057600080fd5b8860208285010111156109d257600080fd5b60208301955080945050505060408501356109ec8161091e565b939692955090935050565b600181811c90821680610a0b57607f821691505b602082108103610a2b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610a4357600080fd5b81516101768161091e565b93845260208401929092526001600160a01b031660408301526001600160e01b031916606082015260800190565b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610aec57600081815260208120601f850160051c81016020861015610ac95750805b601f850160051c820191505b81811015610ae857828155600101610ad5565b5050505b505050565b67ffffffffffffffff831115610b0957610b09610a8c565b610b1d83610b1783546109f7565b83610aa2565b6000601f841160018114610b515760008515610b395750838201355b600019600387901b1c1916600186901b178355610bab565b600083815260209020601f19861690835b82811015610b825786850135825560209485019460019092019101610b62565b5086821015610b9f5760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea264697066735822122084e6e0e28ce89727965539526409ebe6d73485c069301bb190835d0874ed034764736f6c634300080f0033";

type LGroupManagementConstructorParams =
  | [linkLibraryAddresses: LGroupManagementLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LGroupManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LGroupManagement__factory extends ContractFactory {
  constructor(...args: LGroupManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LGroupManagement__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LGroupManagementLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c43b1d7058274a71a9734d16e6b6586431\\$__", "g"),
      linkLibraryAddresses[
        "src/contracts/lib/acl/LAccessControl.sol:LAccessControl"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LGroupManagement> {
    return super.deploy(overrides || {}) as Promise<LGroupManagement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LGroupManagement {
    return super.attach(address) as LGroupManagement;
  }
  override connect(signer: Signer): LGroupManagement__factory {
    return super.connect(signer) as LGroupManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LGroupManagementInterface {
    return new utils.Interface(_abi) as LGroupManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LGroupManagement {
    return new Contract(address, _abi, signerOrProvider) as LGroupManagement;
  }
}

export interface LGroupManagementLibraryAddresses {
  ["src/contracts/lib/acl/LAccessControl.sol:LAccessControl"]: string;
}
