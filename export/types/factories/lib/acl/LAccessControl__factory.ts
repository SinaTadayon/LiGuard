/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LAccessControl,
  LAccessControlInterface,
} from "../../../lib/acl/LAccessControl";

const _abi = [
  {
    inputs: [],
    name: "ANONYMOUSE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIB_NAME",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIB_VERSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIVELY_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIVELY_GENERAL_GROUP",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIVELY_GENERAL_REALM",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIVELY_SYSTEM_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createRequestContext",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "bytes4[]",
            name: "funcSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
        ],
        internalType: "struct IContextManagement.RequestContext",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6115e561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061010a5760003560e01c806355fab994116100a1578063bec9475111610070578063bec94751146101f0578063d7df014e146101f8578063d8b319991461020b578063efd440e81461021357600080fd5b806355fab994146101b85780635632ffd8146101cb57806362f3c2d4146101d35780636ac58ac1146101e857600080fd5b806333d527a7116100dd57806333d527a71461015d57806345d71c181461017057806346939e6114610192578063487c6960146101a557600080fd5b80631923787a1461010f5780631b584efe1461012a57806320dd27af1461014d5780632466209b14610155575b600080fd5b610117610226565b6040519081526020015b60405180910390f35b61013d610138366004611273565b61025e565b6040519015158152602001610121565b6101176102cc565b6101176102f4565b61013d61016b36600461129f565b61030d565b81801561017c57600080fd5b5061019061018b3660046112c1565b610364565b005b61013d6101a036600461129f565b6109bd565b61013d6101b33660046112da565b6109f3565b61013d6101c6366004611273565b610b2a565b610117610b54565b6101db610b63565b604051610121919061132f565b6101176110bd565b6101176110cc565b61013d61020636600461129f565b6110ee565b61011761116b565b61013d61022136600461129f565b61117a565b6040516e414e4f4e594d4f5553455f524f4c4560881b6020820152602f015b6040516020818303038152906040528051906020012081565b6001600160a01b0381166000908152602083815260408083209051600192849161028891016113b7565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1660028111156102c2576102c26113a1565b1490505b92915050565b604051734c4956454c595f47454e4552414c5f5245414c4d60601b6020820152603401610245565b604051640312e302e360dc1b6020820152602501610245565b600061035d82846004016000604051602001610328906113db565b6040516020818303038152906040528051906020012081526020019081526020016000206002016111d390919063ffffffff16565b9392505050565b336000908152602082815260408083209051600193919261038591016113fb565b60408051601f19818403018152918152815160209283012083529082019290925201600020805460ff191660018360028111156103c4576103c46113a1565b021790555033600090815260208281526040808320905160019391926103ea91016113b7565b60408051601f19818403018152918152815160209283012083529082019290925201600020805460ff19166001836002811115610429576104296113a1565b0217905550604051806040016040528060118152602001704c4956454c595f41444d494e5f524f4c4560781b81525081600201600060405160200161046d906113fb565b60405160208183030381529060405280519060200120815260200190815260200160002060000190816104a091906114b7565b5060018160020160006040516020016104b8906113fb565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff021916908315150217905550604051602001610505906113db565b60405160208183030381529060405280519060200120816002016000604051602001610530906113fb565b604051602081830303815290604052805190602001208152602001908152602001600020600101819055506105a933826002016000604051602001610574906113fb565b6040516020818303038152906040528051906020012081526020019081526020016000206003016111eb90919063ffffffff16565b50604051806040016040528060188152602001774c4956454c595f53595354454d5f41444d494e5f524f4c4560401b8152508160020160006040516020016105f0906113b7565b604051602081830303815290604052805190602001208152602001908152602001600020600001908161062391906114b7565b50600181600201600060405160200161063b906113b7565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff021916908315150217905550604051602001610688906113db565b604051602081830303815290604052805190602001208160020160006040516020016106b3906113b7565b604051602081830303815290604052805190602001208152602001908152602001600020600101819055506106f733826002016000604051602001610574906113b7565b506040518060400160405280601481526020017304c4956454c595f47454e4552414c5f47524f55560641b81525081600401600060405160200161073a906113db565b604051602081830303815290604052805190602001208152602001908152602001600020600001908161076d91906114b7565b506001816004016000604051602001610785906113db565b60405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506108356040516020016107d5906113fb565b60405160208183030381529060405280519060200120826004016000604051602001610800906113db565b60405160208183030381529060405280519060200120815260200190815260200160002060020161120090919063ffffffff16565b506108486040516020016107d5906113b7565b50604051806040016040528060148152602001734c4956454c595f47454e4552414c5f5245414c4d60601b8152508160030160006040516020016108a690734c4956454c595f47454e4552414c5f5245414c4d60601b815260140190565b60405160208183030381529060405280519060200120815260200190815260200160002060000190816108d991906114b7565b50600181600301600060405160200161090c90734c4956454c595f47454e4552414c5f5245414c4d60601b815260140190565b60405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600181600301600060405160200161097c90734c4956454c595f47454e4552414c5f5245414c4d60601b815260140190565b60405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555050565b600061035d8284600301600060405160200161032890734c4956454c595f47454e4552414c5f5245414c4d60601b815260140190565b60008381526001858101602081815260408085206001600160e01b031987168652600281018352908520548886529290915290910154600160a01b900460ff168015610a615750600085815260018088016020908152604080842054845260038a01909152909120015460ff165b8015610aad5750600160008681526001808901602090815260408084206001600160e01b0319891685526002908101909252909220015460ff1690811115610aab57610aab6113a1565b145b8015610adf575060008181526002870160209081526040808320600190810154845260048a01909252909120015460ff165b8015610b20575060016001600160a01b03851660009081526020888152604080832085845290915290205460ff166002811115610b1e57610b1e6113a1565b145b9695505050505050565b6001600160a01b0381166000908152602083815260408083209051600192849161028891016113fb565b604051602001610245906113b7565b604080516060808201835260008083526020808401839052838501829052845180840186528281528082019390935282850191909152925191929091610ba991016113fb565b60408051601f19818403018152918152815160209283012083526001838201528051601e8082526103e082019092529182016103c080368337505050602082018190528051633784630b60e01b9190600090610c0757610c07611577565b6001600160e01b0319909216602092830291909101820152810151805163057cadc160e41b91906001908110610c3f57610c3f611577565b6001600160e01b03199092166020928302919091018201528101518051633825b60160e11b91906002908110610c7757610c77611577565b6001600160e01b03199092166020928302919091018201528101518051637147855d60e01b91906003908110610caf57610caf611577565b6001600160e01b03199092166020928302919091018201528101518051631cc032cf60e01b91906004908110610ce757610ce7611577565b6001600160e01b03199092166020928302919091018201528101518051632312026960e01b91906005908110610d1f57610d1f611577565b6001600160e01b03199092166020928302919091018201528101518051630496de2560e51b91906006908110610d5757610d57611577565b6001600160e01b0319909216602092830291909101820152810151805163771bcf4560e01b91906007908110610d8f57610d8f611577565b6001600160e01b03199092166020928302919091018201528101518051634346a04b60e01b91906008908110610dc757610dc7611577565b6001600160e01b03199092166020928302919091018201528101518051633d3ff65d60e11b91906009908110610dff57610dff611577565b6001600160e01b0319909216602092830291909101820152810151805163d338640160e01b9190600a908110610e3757610e37611577565b6001600160e01b03199092166020928302919091018201528101518051630d99ddeb60e31b9190600b908110610e6f57610e6f611577565b6001600160e01b0319909216602092830291909101820152810151805163b2dc26e560e01b9190600c908110610ea757610ea7611577565b6001600160e01b031990921660209283029190910182015281015180516308f09e0f60e41b9190600d908110610edf57610edf611577565b6001600160e01b0319909216602092830291909101820152810151805163df01de4560e01b9190600e908110610f1757610f17611577565b6001600160e01b031990921660209283029190910182015281015180516301801d1160e31b9190600f908110610f4f57610f4f611577565b6001600160e01b03199092166020928302919091018201528101518051630dbf304b60e41b91906010908110610f8757610f87611577565b6001600160e01b031990921660209283029190910182015281015180516307e9933760e31b91906011908110610fbf57610fbf611577565b6001600160e01b03199092166020928302919091018201528101518051635716a26760e11b91906012908110610ff757610ff7611577565b6001600160e01b031990921660209283029190910182015281015180516312ec6fa360e21b9190601390811061102f5761102f611577565b6001600160e01b0319909216602092830291909101820152810151805163a2fecd1360e01b9190601490811061106757611067611577565b6001600160e01b0319909216602092830291909101820152810151805163468166ad60e11b9190601590811061109f5761109f611577565b6001600160e01b031990921660209283029190910190910152919050565b604051602001610245906113db565b6040516d131058d8d95cdcd0dbdb9d1c9bdb60921b6020820152602e01610245565b600081815260018084016020908152604080842090920154825163be22465d60e01b815292516001600160a01b039091169263be22465d9260048083019391928290030181865afa158015611147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035d919061158d565b604051602001610245906113fb565b6000818152600180840160209081526040808420909201548251630151e76560e61b815292516001600160a01b0390911692635479d9409260048083019391928290030181865afa158015611147573d6000803e3d6000fd5b6000818152600183016020526040812054151561035d565b600061035d836001600160a01b038416611208565b600061035d83835b600081815260018301602052604081205461124f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102c6565b5060006102c6565b80356001600160a01b038116811461126e57600080fd5b919050565b6000806040838503121561128657600080fd5b8235915061129660208401611257565b90509250929050565b600080604083850312156112b257600080fd5b50508035926020909101359150565b6000602082840312156112d357600080fd5b5035919050565b600080600080608085870312156112f057600080fd5b843593506020850135925061130760408601611257565b915060608501356001600160e01b03198116811461132457600080fd5b939692955090935050565b6020808252825182820152828101516060604084015280516080840181905260009291820190839060a08601905b808310156113875783516001600160e01b031916825292840192600192909201919084019061135d565b506040870151151560608701528094505050505092915050565b634e487b7160e01b600052602160045260246000fd5b774c4956454c595f53595354454d5f41444d494e5f524f4c4560401b815260180190565b7304c4956454c595f47454e4552414c5f47524f55560641b815260140190565b704c4956454c595f41444d494e5f524f4c4560781b815260110190565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061144257607f821691505b60208210810361146257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156114b257600081815260208120601f850160051c8101602086101561148f5750805b601f850160051c820191505b818110156114ae5782815560010161149b565b5050505b505050565b815167ffffffffffffffff8111156114d1576114d1611418565b6114e5816114df845461142e565b84611468565b602080601f83116001811461151a57600084156115025750858301515b600019600386901b1c1916600185901b1785556114ae565b600085815260208120601f198616915b828110156115495788860151825594840194600190910190840161152a565b50858210156115675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561159f57600080fd5b8151801515811461035d57600080fdfea26469706673582212206d2345cde01e1f718a6fc498d723690e7730d0dcaa19144dc732c2c3d9a25f3a64736f6c634300080f0033";

type LAccessControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LAccessControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LAccessControl__factory extends ContractFactory {
  constructor(...args: LAccessControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LAccessControl> {
    return super.deploy(overrides || {}) as Promise<LAccessControl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LAccessControl {
    return super.attach(address) as LAccessControl;
  }
  override connect(signer: Signer): LAccessControl__factory {
    return super.connect(signer) as LAccessControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LAccessControlInterface {
    return new utils.Interface(_abi) as LAccessControlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LAccessControl {
    return new Contract(address, _abi, signerOrProvider) as LAccessControl;
  }
}
