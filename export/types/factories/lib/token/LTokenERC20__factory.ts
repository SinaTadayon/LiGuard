/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LTokenERC20,
  LTokenERC20Interface,
} from "../../../lib/token/LTokenERC20";

const _abi = [
  {
    inputs: [],
    name: "LIB_NAME",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIB_VERSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domainVersion",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "realm",
        type: "bytes32",
      },
    ],
    name: "createRequestContext",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "version",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "realm",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "smca",
            type: "address",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
        ],
        internalType: "struct IContextManagement.RequestContext",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "role",
            type: "bytes32",
          },
          {
            internalType: "bytes4[]",
            name: "funcSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
        ],
        internalType: "struct IContextManagement.RequestRegisterContext[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x611e33610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80632466209b1461005057806397ca328d1461006e578063bec947511461009f575b600080fd5b6100586100bd565b6040516100659190611899565b60405180910390f35b610088600480360381019061008391906118e5565b6100e5565b604051610096929190611c07565b60405180910390f35b6100a76117df565b6040516100b49190611899565b60405180910390f35b6040516020016100cc90611c8e565b6040516020818303038152906040528051906020012081565b6100ed61180a565b606061011b7fd18c9c190acb4efdf078e2d92d95a2615ef82dc3dc287ddb99ac8abcf4aa025b60001b611807565b6101477fbdf5eb4e440cca0065245da25611a75eb95f7090f3e83c8755a1d2b82140737160001b611807565b6101737f78bdc9aeec357c8488971c84b0ecd409f8c66f96c8b89217f7bce76520eb4f5360001b611807565b6000600367ffffffffffffffff8111156101905761018f611ca3565b5b6040519080825280602002602001820160405280156101c957816020015b6101b661185a565b8152602001906001900390816101ae5790505b5090506101f87ff3fa244226e6bbc1f92a752a4efed1fa9bab3e7b9f968444cd152403e6ab521260001b611807565b6102247fde968ba7ace3d83ed70e51b97534c31ce2325582b4cfb4fb8ffd4ca249a7928960001b611807565b3073ffffffffffffffffffffffffffffffffffffffff1663b4a0bdf36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102939190611cfe565b73ffffffffffffffffffffffffffffffffffffffff1663407681406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190611d40565b8160008151811061031557610314611d6d565b5b602002602001015160000181815250506103517f0e6c11d60192fcc4dc505c17b9fdb90da285d87dd3fd59b4e0242070cbd21fd260001b611807565b61037d7f32e31233c3f1c26407ce1f93625194159f72763b5e52bc90200eb534e95f118a60001b611807565b60018160008151811061039357610392611d6d565b5b602002602001015160400190151590811515815250506103d47ec603f000a1582d47da3197e6598fd65e63764a24504f0562faca2edd82bd3860001b611807565b6104007f53b40ea722780d711a52cb7dc3cd1ba1fd60c8a0ea9b4dd3625562457979c8af60001b611807565b600267ffffffffffffffff81111561041b5761041a611ca3565b5b6040519080825280602002602001820160405280156104495781602001602082028036833780820191505090505b508160008151811061045e5761045d611d6d565b5b6020026020010151602001819052506104997f4c0357035551fec4da396f16e868031a41cbe524aa2f6d0f4b2a76d3a2ecc6bd60001b611807565b6104c57fd1c84a5c8913a28219082f3e7948e3a2440c1d232485de293e63bf894b99c34c60001b611807565b63a9059cbb60e01b816000815181106104e1576104e0611d6d565b5b602002602001015160200151600081518110610500576104ff611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506105787f555d781ad4e9b576789d159f2fa1844fab49091ed6d438a49926e2ff9d853bc260001b611807565b6105a47fac3155a7695ffce63816b25d977b72bf829379c2fd289a613b4878233ed2346b60001b611807565b63095ea7b360e01b816000815181106105c0576105bf611d6d565b5b6020026020010151602001516001815181106105df576105de611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506106577f56b07942052e5f44551e5cb3d0c4f3d30301a0d5e254fd18f87c01cfd2c583dd60001b611807565b6106837ff784f8416a6f455f9e34a8baba8551e98bdcb51ff59b312dc61d65fd281f702c60001b611807565b3073ffffffffffffffffffffffffffffffffffffffff1663b4a0bdf36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f29190611cfe565b73ffffffffffffffffffffffffffffffffffffffff1663098b01cf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611d40565b8160018151811061077457610773611d6d565b5b602002602001015160000181815250506107b07f5118ca10a7823b6bab8d58bab36f9d74aff79cffff941e4d63e5e0423c35495b60001b611807565b6107dc7f57ff07f817ae25a5f13155f09db73860b215ca9fb77434f02226aa0fb3546b5160001b611807565b6001816001815181106107f2576107f1611d6d565b5b602002602001015160400190151590811515815250506108347f6182b9f4dea80cffa4c8504b1b90e4a5d381acd346449e272467ffe852463bba60001b611807565b6108607f62d6af415648a52597c9aaa00d466e92f28a3acc9d720bb2d8c03adc0b4c31cf60001b611807565b600a67ffffffffffffffff81111561087b5761087a611ca3565b5b6040519080825280602002602001820160405280156108a95781602001602082028036833780820191505090505b50816001815181106108be576108bd611d6d565b5b6020026020010151602001819052506108f97fb9d1631ec4a331f736a95236540715911d3f95eb380c850c0d96ad4fa0ad42a160001b611807565b6109257f629b6d397f23debd7a0ba54139f0464f28651758d6cfd1d2ceaf26daba20f04d60001b611807565b6348e6be1c60e01b8160018151811061094157610940611d6d565b5b6020026020010151602001516000815181106109605761095f611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506109d87f805235bb0712ecc5f5f1092481c8d097b95064edfd2d8299b332075dc957885160001b611807565b610a047fc2a4d496b894089cb036d9623d7a4df71e4cdaaa1536245dad82aacd2f6dd38360001b611807565b639dc29fac60e01b81600181518110610a2057610a1f611d6d565b5b602002602001015160200151600181518110610a3f57610a3e611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610ab77f1840f214269a35a201426839d5ab36409567e7aa92c90bc8779d6499905eeebf60001b611807565b610ae37f22e0e78a725010b35621d9a7b074b1663e141273873187cf1c79093994baac3360001b611807565b6340c10f1960e01b81600181518110610aff57610afe611d6d565b5b602002602001015160200151600281518110610b1e57610b1d611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610b967fee630e35bc07ca278cdcef3e88b82b9c1b2484e249be7efd287a94df8f7007dc60001b611807565b610bc27f8f7d065e5657886e73a076eb7a51410d0f045cb5d2196d28485f053ecda6f3b460001b611807565b6317fdcc8e60e01b81600181518110610bde57610bdd611d6d565b5b602002602001015160200151600381518110610bfd57610bfc611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610c757fa75f7a34752a632db7b3e62a95c91f6841fd564887be0ee98919d5c7badbfa6060001b611807565b610ca17f0dbd5db1f700220acec5e3fdf1e8d1d700675007342a8b503a8c50d41b3aa02060001b611807565b6346a634d460e01b81600181518110610cbd57610cbc611d6d565b5b602002602001015160200151600481518110610cdc57610cdb611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610d547fab5d26859a9504019c191b1915ce6396652312ec8dc6fad9a5a20118d00a4b3460001b611807565b610d807f0976e45d7b60b4b3bd37eb547db877b8255876f21a1dacca19052f134ec8850f60001b611807565b6376a67a5160e01b81600181518110610d9c57610d9b611d6d565b5b602002602001015160200151600581518110610dbb57610dba611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610e337fd43e9355314aebc8c6cd68f741b75a9f2fe7fa0a950fc6041eabef710e3f347560001b611807565b610e5f7fc3307f11a3f0f194bb90e6632f0fdcc2460849aa5b378f5b8b73f4aae6af97e760001b611807565b6357b001f960e01b81600181518110610e7b57610e7a611d6d565b5b602002602001015160200151600681518110610e9a57610e99611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610f127f17f85bd57b9c37253c48102281b9d56d345e86871d9af55d50dfcedf4bcd317c60001b611807565b610f3e7f1a816b7b0c3d2cfb2dc6d5e336c4666eeb215ca5353b9c978d64a6177a7ab50560001b611807565b63595c6a6760e01b81600181518110610f5a57610f59611d6d565b5b602002602001015160200151600781518110610f7957610f78611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050610ff17f5d454f278f36e427cd73a5f24fb1641298431dc7b37b68639fa58cbc8fddc53b60001b611807565b61101d7fef670c42368a8e84dc001c49539c6dd2b5bc346a0b7c9fe578724d4ab72a866760001b611807565b638a2ddd0360e01b8160018151811061103957611038611d6d565b5b60200260200101516020015160088151811061105857611057611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506110d07f3e998ecdd393455e3c4a929be74f042c9d0518ef5b344d2b94bb5a7ce6c171a760001b611807565b6110fc7f8779d0c91668ec1f1f282b65af911d69876b70a84fc5a9a120a3dcae71ec779560001b611807565b7f756af45f4ce05d832bee0c171992c529ad6d3ca8e13303d78feace2f8fd7faf28160018151811061113157611130611d6d565b5b6020026020010151602001516009815181106111505761114f611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506111c87fa7347fda2a8101b7534e81397d0e4ebd403f8703f89bfba2981acb44c3a021f160001b611807565b6111f47f6f43406ce4af5dc3caa25465300ee77357d1d61af45e644d5fb926e53aff6f6160001b611807565b3073ffffffffffffffffffffffffffffffffffffffff1663b4a0bdf36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561123f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112639190611cfe565b73ffffffffffffffffffffffffffffffffffffffff16635ec7870a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d19190611d40565b816002815181106112e5576112e4611d6d565b5b602002602001015160000181815250506113217f0f4d71150e4be1553e8e3b13e60f51d62e71761fa103bb7e4abb2f3f95a59a2b60001b611807565b61134d7f3547f795da235ea934a38bad3a0f697937a146c1941e5e482492c6383c41ba8460001b611807565b60018160028151811061136357611362611d6d565b5b602002602001015160400190151590811515815250506113a57f51e6e1225af9bbb8316ddf163a428530e640c4090c2e0a57fa1374557884c32960001b611807565b6113d17fb14a53e672be4e1b01a05d65abe59a4a41295809bd3f7c37432775dbd9be062a60001b611807565b600367ffffffffffffffff8111156113ec576113eb611ca3565b5b60405190808252806020026020018201604052801561141a5781602001602082028036833780820191505090505b508160028151811061142f5761142e611d6d565b5b60200260200101516020018190525061146a7f35ac89afdc966020a6c2fbb8022746afbadac15605ed4e19bdf4aef32904947660001b611807565b6114967fab8a14299ff6c2f0ccc2645fa91e96ed49dedb685b48386255ee644c7d56a0d360001b611807565b63d9dc1f1960e01b816002815181106114b2576114b1611d6d565b5b6020026020010151602001516000815181106114d1576114d0611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506115497fa4f64473491f0abbcfd8ffbaf5e3e94757d5e776c6c27797455e754a45628c6160001b611807565b6115757fda93b94619d86a4971ea6868a2dcd3bfe52bf6bf63cfca98051328d13012286d60001b611807565b6344b7e5f260e01b8160028151811061159157611590611d6d565b5b6020026020010151602001516001815181106115b0576115af611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506116287fa602d156543151fe7ea45d44b7d491c65519a6e58f8c0bb2d5d573102618176c60001b611807565b6116547fcb200cac7fb53a61f4c9ca1541b70b3c1dd58a5cca026eb57103bd2e92b1484960001b611807565b637147855d60e01b816002815181106116705761166f611d6d565b5b60200260200101516020015160028151811061168f5761168e611d6d565b5b60200260200101907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250506117077fff35b57f7765fdab77af57ab649144d3cec854d3e47db3a68f1f5924c3308f3360001b611807565b6117337f816cca829f44fcd5a981b2908f224a85e6ce910346d683604a674c9e443f046560001b611807565b60006040518060a001604052808881526020018781526020018681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090506117a37faa340baaa83b81b7c14dddb60bad92fce988e59e65ad4f887979f91cdabfc0ea60001b611807565b6117cf7f38e90225561fd69b79fcf8559d54cc709d9585720cd25a6aec3156739c6a2b5660001b611807565b8082935093505050935093915050565b6040516020016117ee90611de8565b6040516020818303038152906040528051906020012081565b50565b6040518060a00160405280600080191681526020016000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b604051806060016040528060008019168152602001606081526020016000151581525090565b6000819050919050565b61189381611880565b82525050565b60006020820190506118ae600083018461188a565b92915050565b600080fd5b6118c281611880565b81146118cd57600080fd5b50565b6000813590506118df816118b9565b92915050565b6000806000606084860312156118fe576118fd6118b4565b5b600061190c868287016118d0565b935050602061191d868287016118d0565b925050604061192e868287016118d0565b9150509250925092565b61194181611880565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061197282611947565b9050919050565b61198281611967565b82525050565b60008115159050919050565b61199d81611988565b82525050565b60a0820160008201516119b96000850182611938565b5060208201516119cc6020850182611938565b5060408201516119df6040850182611938565b5060608201516119f26060850182611979565b506080820151611a056080850182611994565b50505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a9881611a63565b82525050565b6000611aaa8383611a8f565b60208301905092915050565b6000602082019050919050565b6000611ace82611a37565b611ad88185611a42565b9350611ae383611a53565b8060005b83811015611b14578151611afb8882611a9e565b9750611b0683611ab6565b925050600181019050611ae7565b5085935050505092915050565b6000606083016000830151611b396000860182611938565b5060208301518482036020860152611b518282611ac3565b9150506040830151611b666040860182611994565b508091505092915050565b6000611b7d8383611b21565b905092915050565b6000602082019050919050565b6000611b9d82611a0b565b611ba78185611a16565b935083602082028501611bb985611a27565b8060005b85811015611bf55784840389528151611bd68582611b71565b9450611be183611b85565b925060208a01995050600181019050611bbd565b50829750879550505050505092915050565b600060c082019050611c1c60008301856119a3565b81810360a0830152611c2e8184611b92565b90509392505050565b600081905092915050565b7f312e302e30000000000000000000000000000000000000000000000000000000600082015250565b6000611c78600583611c37565b9150611c8382611c42565b600582019050919050565b6000611c9982611c6b565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cdb81611967565b8114611ce657600080fd5b50565b600081519050611cf881611cd2565b92915050565b600060208284031215611d1457611d136118b4565b5b6000611d2284828501611ce9565b91505092915050565b600081519050611d3a816118b9565b92915050565b600060208284031215611d5657611d556118b4565b5b6000611d6484828501611d2b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4c546f6b656e4552433230000000000000000000000000000000000000000000600082015250565b6000611dd2600b83611c37565b9150611ddd82611d9c565b600b82019050919050565b6000611df382611dc5565b915081905091905056fea2646970667358221220ea93f77e0c4dc169a058b59d515495d552a7e66e7ebe2e4487504abe000216ee64736f6c634300080f0033";

type LTokenERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LTokenERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LTokenERC20__factory extends ContractFactory {
  constructor(...args: LTokenERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LTokenERC20> {
    return super.deploy(overrides || {}) as Promise<LTokenERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LTokenERC20 {
    return super.attach(address) as LTokenERC20;
  }
  override connect(signer: Signer): LTokenERC20__factory {
    return super.connect(signer) as LTokenERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LTokenERC20Interface {
    return new utils.Interface(_abi) as LTokenERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LTokenERC20 {
    return new Contract(address, _abi, signerOrProvider) as LTokenERC20;
  }
}
