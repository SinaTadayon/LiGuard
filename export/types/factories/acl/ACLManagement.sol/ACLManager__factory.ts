/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ACLManager,
  ACLManagerInterface,
} from "../../../acl/ACLManagement.sol/ACLManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "realm",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "ActivityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "ProxyAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newVersion",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldVersion",
        type: "string",
      },
    ],
    name: "ProxyUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "realm",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "UpgradablilityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActivated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isUpgradable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setActivity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setProxyAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setUpgradability",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subjectContext",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subjectName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subjectRealm",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subjectVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "forceInitCall",
        type: "bool",
      },
    ],
    name: "upgradeTo",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000031565b6200002b3362000041565b62000296565b6200003e61ffff62000136565b50565b6001600160a01b0381166200009d5760405162461bcd60e51b815260206004820152601d60248201527f6e65772061646d696e20697320746865207a65726f206164647265737300000060448201526064015b60405180910390fd5b30337f6dd9a711c71f2384e1a3f1ab85a1d06eee5c81ec1e377a10e6b672052116362d620000ca6200024b565b604080516001600160a01b03928316815291861660208301520160405180910390a38062000115600080516020620014d783398151915260001b6200028460201b6200060e1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60455460009062010000900460ff1615620001cf578161ffff16600114801562000173575062000171306200028760201b620006111760201c565b155b620001c75760405162461bcd60e51b815260206004820152602e6024820152600080516020620014b783398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000094565b506000919050565b60455461ffff8084169116106200022f5760405162461bcd60e51b815260206004820152602e6024820152600080516020620014b783398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000094565b506045805461ffff191661ffff92909216919091179055600190565b600062000275600080516020620014d783398151915260001b6200028460201b6200060e1760201c565b546001600160a01b0316919050565b90565b6001600160a01b03163b151590565b6080516111f7620002c060003960008181610322015281816103d3015261045801526111f76000f3fe6080604052600436106100c65760003560e01c80635c60da1b1161007f5780638b3240a0116100595780638b3240a014610229578063900574a51461023e5780639dd0725414610253578063cf891e2b14610273576100d5565b80635c60da1b146101ba5780637147855d146101e7578063886ddb5214610214576100d5565b8063133899f5146100dd57806347c02661146101125780634a8c1fb4146101325780634bce20dd1461014a57806352d1902d146101885780635479d9401461019d576100d5565b366100d5576100d3610288565b005b6100d3610288565b3480156100e957600080fd5b506100fd6100f8366004610e32565b61029a565b60405190151581526020015b60405180910390f35b34801561011e57600080fd5b506100fd61012d366004610e6b565b6102fd565b34801561013e57600080fd5b5060045460ff166100fd565b34801561015657600080fd5b50604080513060208083019190915282518083038201815291830190925280519101205b604051908152602001610109565b34801561019457600080fd5b5061017a610315565b3480156101a957600080fd5b50600454610100900460ff166100fd565b3480156101c657600080fd5b506101cf6103bd565b6040516001600160a01b039091168152602001610109565b3480156101f357600080fd5b50610207610202366004610ef5565b6103c7565b6040516101099190610ff6565b34801561022057600080fd5b5060035461017a565b34801561023557600080fd5b506101cf610511565b34801561024a57600080fd5b5061020761051b565b34801561025f57600080fd5b506100fd61026e366004610e32565b6105ad565b34801561027f57600080fd5b506102076105ff565b610298610293610620565b610641565b565b6004805461ff0019166101008315150217905560035460009030336001600160a01b03167fbcecca91f4cd073bcfd7630ef1a39f42ce6cc45c2ca12324e82e1d9021e71c9b856040516102f1911515815260200190565b60405180910390a45090565b600061030882610665565b506001919050565b905090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103aa5760405162461bcd60e51b815260206004820152602d60248201527f555550533a206d757374206e6f742062652063616c6c6564207468726f75676860448201526c0819195b1959d85d1958d85b1b609a1b60648201526084015b60405180910390fd5b5060008051602061117b83398151915290565b6000610310610620565b60606001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104565760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016103a1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610488610620565b6001600160a01b0316146104f35760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016103a1565b6104fc8461074c565b610507848484610802565b90505b9392505050565b600061031061098b565b60606001805461052a90611009565b80601f016020809104026020016040519081016040528092919081815260200182805461055690611009565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050905090565b6004805460ff191682151517905560035460009030336001600160a01b03167f139c91c652708a87d9a40a2cbfb6d5d37c20d1dcd2a75b2d0c09b59a214474bc856040516102f1911515815260200190565b60606002805461052a90611009565b90565b6001600160a01b03163b151590565b600060008051602061117b8339815191525b546001600160a01b0316919050565b3660008037600080366000845af43d6000803e808015610660573d6000f35b3d6000fd5b6001600160a01b0381166106bb5760405162461bcd60e51b815260206004820152601d60248201527f6e65772061646d696e20697320746865207a65726f206164647265737300000060448201526064016103a1565b30337f6dd9a711c71f2384e1a3f1ab85a1d06eee5c81ec1e377a10e6b672052116362d6106e661098b565b604080516001600160a01b03928316815291861660208301520160405180910390a3807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b61075c637147855d60e01b6109b3565b6107a85760405162461bcd60e51b815260206004820152601f60248201527f436f6e74657874205570677261646162696c69747920466f7262696464656e0060448201526064016103a1565b600454610100900460ff166107ff5760405162461bcd60e51b815260206004820152601960248201527f436f6e74657874204973204e6f742055706772616461626c650000000000000060448201526064016103a1565b50565b60607f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561084c5761083784610a60565b5060408051600081526020810190915261050a565b836001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156108a6575060408051601f3d908101601f191682019092526108a391810190611043565b60015b6109095760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103a1565b60008051602061117b83398151915281146109785760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103a1565b50610984848484610b04565b905061050a565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610632565b60008054604080513060208083019190915282518083038201815291830190925280519101206001600160a01b039091169063c7ab39e6906040516001600160e01b031960e084901b8116825260048201929092523360248201529085166044820152606401602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a919061105c565b92915050565b60045460ff16610a825760405162461bcd60e51b81526004016103a190611079565b6001600160a01b0381163b610aef5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103a1565b8060008051602061117b83398151915261072b565b6060610b0f84610b42565b600083511180610b1c5750815b15610b2b576109848484610cd4565b505060408051600081526020810190915292915050565b60045460ff16610b645760405162461bcd60e51b81526004016103a190611079565b6000610b6e610620565b6040519091506001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2816001600160a01b0316306001600160a01b0316336001600160a01b03167ebe01838f727d9b6a4cc703cad7dd0426a7dd3a2ad8bbc1aae8e61a5f7fdd3684866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c4a91908101906110b0565b866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c88573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb091908101906110b0565b604051610cbf9392919061111e565b60405180910390a4610cd082610a60565b5050565b60045460609060ff16610cf95760405162461bcd60e51b81526004016103a190611079565b6001600160a01b0383163b610d5f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103a1565b600080846001600160a01b031684604051610d7a919061115e565b600060405180830381855af49150503d8060008114610db5576040519150601f19603f3d011682016040523d82523d6000602084013e610dba565b606091505b5091509150610de2828260405180606001604052806027815260200161119b60279139610deb565b95945050505050565b60608315610dfa57508161050a565b825115610e0a5782518084602001fd5b8160405162461bcd60e51b81526004016103a19190610ff6565b80151581146107ff57600080fd5b600060208284031215610e4457600080fd5b813561050a81610e24565b80356001600160a01b0381168114610e6657600080fd5b919050565b600060208284031215610e7d57600080fd5b61050a82610e4f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ec557610ec5610e86565b604052919050565b600067ffffffffffffffff821115610ee757610ee7610e86565b50601f01601f191660200190565b600080600060608486031215610f0a57600080fd5b610f1384610e4f565b9250602084013567ffffffffffffffff811115610f2f57600080fd5b8401601f81018613610f4057600080fd5b8035610f53610f4e82610ecd565b610e9c565b818152876020838501011115610f6857600080fd5b816020840160208301376000602083830101528094505050506040840135610f8f81610e24565b809150509250925092565b60005b83811015610fb5578181015183820152602001610f9d565b83811115610fc4576000848401525b50505050565b60008151808452610fe2816020860160208601610f9a565b601f01601f19169290920160200192915050565b60208152600061050a6020830184610fca565b600181811c9082168061101d57607f821691505b60208210810361103d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561105557600080fd5b5051919050565b60006020828403121561106e57600080fd5b815161050a81610e24565b60208082526018908201527f436f6e74657874204973204e6f74204163746976617465640000000000000000604082015260600190565b6000602082840312156110c257600080fd5b815167ffffffffffffffff8111156110d957600080fd5b8201601f810184136110ea57600080fd5b80516110f8610f4e82610ecd565b81815285602083850101111561110d57600080fd5b610de2826020830160208601610f9a565b6001600160a01b038416815260606020820181905260009061114290830185610fca565b82810360408401526111548185610fca565b9695505050505050565b60008251611170818460208701610f9a565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220045a294cee6591528e9b74f7dbd4a95438b931c89ae18cc0dff7026f0ff142e964736f6c634300080f0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103";

type ACLManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ACLManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ACLManager__factory extends ContractFactory {
  constructor(...args: ACLManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ACLManager> {
    return super.deploy(overrides || {}) as Promise<ACLManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ACLManager {
    return super.attach(address) as ACLManager;
  }
  override connect(signer: Signer): ACLManager__factory {
    return super.connect(signer) as ACLManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ACLManagerInterface {
    return new utils.Interface(_abi) as ACLManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ACLManager {
    return new Contract(address, _abi, signerOrProvider) as ACLManager;
  }
}
