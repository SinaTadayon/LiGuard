{"version":3,"file":"IRealmManagement.js","sourceRoot":"","sources":["../../../../../typechain/types/acl/scope/IRealmManagement.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport declare namespace IRealmManagement {\n  export type RealmInfoStruct = {\n    domainId: PromiseOrValue<BytesLike>;\n    adminId: PromiseOrValue<BytesLike>;\n    contextLimit: PromiseOrValue<BigNumberish>;\n    agentLimit: PromiseOrValue<BigNumberish>;\n    referredByAgent: PromiseOrValue<BigNumberish>;\n    referredByPolicy: PromiseOrValue<BigNumberish>;\n    acstat: PromiseOrValue<BigNumberish>;\n    alstate: PromiseOrValue<BigNumberish>;\n    adminType: PromiseOrValue<BigNumberish>;\n    name: PromiseOrValue<string>;\n  };\n\n  export type RealmInfoStructOutput = [\n    string,\n    string,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    string\n  ] & {\n    domainId: string;\n    adminId: string;\n    contextLimit: number;\n    agentLimit: number;\n    referredByAgent: number;\n    referredByPolicy: number;\n    acstat: number;\n    alstate: number;\n    adminType: number;\n    name: string;\n  };\n\n  export type RealmRegisterRequestStruct = {\n    domainId: PromiseOrValue<BytesLike>;\n    adminId: PromiseOrValue<BytesLike>;\n    contextLimit: PromiseOrValue<BigNumberish>;\n    agentLimit: PromiseOrValue<BigNumberish>;\n    acstat: PromiseOrValue<BigNumberish>;\n    alstat: PromiseOrValue<BigNumberish>;\n    name: PromiseOrValue<string>;\n  };\n\n  export type RealmRegisterRequestStructOutput = [\n    string,\n    string,\n    number,\n    number,\n    number,\n    number,\n    string\n  ] & {\n    domainId: string;\n    adminId: string;\n    contextLimit: number;\n    agentLimit: number;\n    acstat: number;\n    alstat: number;\n    name: string;\n  };\n\n  export type RealmUpdateContextLimitRequestStruct = {\n    realmId: PromiseOrValue<BytesLike>;\n    contextLimit: PromiseOrValue<BigNumberish>;\n  };\n\n  export type RealmUpdateContextLimitRequestStructOutput = [string, number] & {\n    realmId: string;\n    contextLimit: number;\n  };\n}\n\nexport declare namespace IACLCommons {\n  export type UpdateActivityRequestStruct = {\n    id: PromiseOrValue<BytesLike>;\n    acstat: PromiseOrValue<BigNumberish>;\n  };\n\n  export type UpdateActivityRequestStructOutput = [string, number] & {\n    id: string;\n    acstat: number;\n  };\n\n  export type UpdateAdminRequestStruct = {\n    id: PromiseOrValue<BytesLike>;\n    adminId: PromiseOrValue<BytesLike>;\n  };\n\n  export type UpdateAdminRequestStructOutput = [string, string] & {\n    id: string;\n    adminId: string;\n  };\n\n  export type ScopeUpdateAgentLimitRequestStruct = {\n    scopeId: PromiseOrValue<BytesLike>;\n    agentLimit: PromiseOrValue<BigNumberish>;\n  };\n\n  export type ScopeUpdateAgentLimitRequestStructOutput = [string, number] & {\n    scopeId: string;\n    agentLimit: number;\n  };\n\n  export type UpdateAlterabilityRequestStruct = {\n    id: PromiseOrValue<BytesLike>;\n    alstat: PromiseOrValue<BigNumberish>;\n  };\n\n  export type UpdateAlterabilityRequestStructOutput = [string, number] & {\n    id: string;\n    alstat: number;\n  };\n}\n\nexport interface IRealmManagementInterface extends utils.Interface {\n  functions: {\n    \"realmCheckAdmin(bytes32,address)\": FunctionFragment;\n    \"realmCheckId(bytes32)\": FunctionFragment;\n    \"realmCheckName(string)\": FunctionFragment;\n    \"realmDeleteActivity(bytes32[])\": FunctionFragment;\n    \"realmGetContexts(bytes32)\": FunctionFragment;\n    \"realmGetInfo(bytes32)\": FunctionFragment;\n    \"realmHasContext(bytes32,bytes32)\": FunctionFragment;\n    \"realmHasFunction(bytes32,bytes32)\": FunctionFragment;\n    \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\": FunctionFragment;\n    \"realmUpdateActivityStatus((bytes32,uint8)[])\": FunctionFragment;\n    \"realmUpdateAdmin((bytes32,bytes32)[])\": FunctionFragment;\n    \"realmUpdateAgentLimit((bytes32,uint16)[])\": FunctionFragment;\n    \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\": FunctionFragment;\n    \"realmUpdateContextLimit((bytes32,uint32)[])\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"realmCheckAdmin\"\n      | \"realmCheckAdmin(bytes32,address)\"\n      | \"realmCheckId\"\n      | \"realmCheckId(bytes32)\"\n      | \"realmCheckName\"\n      | \"realmCheckName(string)\"\n      | \"realmDeleteActivity\"\n      | \"realmDeleteActivity(bytes32[])\"\n      | \"realmGetContexts\"\n      | \"realmGetContexts(bytes32)\"\n      | \"realmGetInfo\"\n      | \"realmGetInfo(bytes32)\"\n      | \"realmHasContext\"\n      | \"realmHasContext(bytes32,bytes32)\"\n      | \"realmHasFunction\"\n      | \"realmHasFunction(bytes32,bytes32)\"\n      | \"realmRegister\"\n      | \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\"\n      | \"realmUpdateActivityStatus\"\n      | \"realmUpdateActivityStatus((bytes32,uint8)[])\"\n      | \"realmUpdateAdmin\"\n      | \"realmUpdateAdmin((bytes32,bytes32)[])\"\n      | \"realmUpdateAgentLimit\"\n      | \"realmUpdateAgentLimit((bytes32,uint16)[])\"\n      | \"realmUpdateAlterabilityStatus\"\n      | \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\"\n      | \"realmUpdateContextLimit\"\n      | \"realmUpdateContextLimit((bytes32,uint32)[])\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"realmCheckAdmin\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmCheckAdmin(bytes32,address)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmCheckId\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmCheckId(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmCheckName\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmCheckName(string)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmDeleteActivity\",\n    values: [PromiseOrValue<BytesLike>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmDeleteActivity(bytes32[])\",\n    values: [PromiseOrValue<BytesLike>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmGetContexts\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmGetContexts(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmGetInfo\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmGetInfo(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmHasContext\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmHasContext(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmHasFunction\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmHasFunction(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmRegister\",\n    values: [IRealmManagement.RealmRegisterRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\",\n    values: [IRealmManagement.RealmRegisterRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateActivityStatus\",\n    values: [IACLCommons.UpdateActivityRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateActivityStatus((bytes32,uint8)[])\",\n    values: [IACLCommons.UpdateActivityRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateAdmin\",\n    values: [IACLCommons.UpdateAdminRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateAdmin((bytes32,bytes32)[])\",\n    values: [IACLCommons.UpdateAdminRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateAgentLimit\",\n    values: [IACLCommons.ScopeUpdateAgentLimitRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateAgentLimit((bytes32,uint16)[])\",\n    values: [IACLCommons.ScopeUpdateAgentLimitRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateAlterabilityStatus\",\n    values: [IACLCommons.UpdateAlterabilityRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\",\n    values: [IACLCommons.UpdateAlterabilityRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateContextLimit\",\n    values: [IRealmManagement.RealmUpdateContextLimitRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"realmUpdateContextLimit((bytes32,uint32)[])\",\n    values: [IRealmManagement.RealmUpdateContextLimitRequestStruct[]]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"realmCheckAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmCheckAdmin(bytes32,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmCheckId\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmCheckId(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmCheckName\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmCheckName(string)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmDeleteActivity\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmDeleteActivity(bytes32[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmGetContexts\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmGetContexts(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmGetInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmGetInfo(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmHasContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmHasContext(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmHasFunction\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmHasFunction(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmRegister\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateActivityStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateActivityStatus((bytes32,uint8)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateAdmin((bytes32,bytes32)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateAgentLimit\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateAgentLimit((bytes32,uint16)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateAlterabilityStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateContextLimit\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"realmUpdateContextLimit((bytes32,uint32)[])\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"AgentReferredByPolicyUpdated(address,bytes32,bytes32,uint8)\": EventFragment;\n    \"AgentReferredByScopeUpdated(address,bytes32,bytes32,uint8)\": EventFragment;\n    \"RealmActivityUpdated(address,bytes32,uint8)\": EventFragment;\n    \"RealmAdminUpdated(address,bytes32,bytes32)\": EventFragment;\n    \"RealmAgentLimitUpdated(address,bytes32,uint16)\": EventFragment;\n    \"RealmAlterabilityUpdated(address,bytes32,uint8)\": EventFragment;\n    \"RealmContextLimitUpdated(address,bytes32,uint32)\": EventFragment;\n    \"RealmRegistered(address,bytes32,bytes32,bytes32)\": EventFragment;\n    \"ScopeReferredByAgentUpdated(address,bytes32,bytes32,uint8)\": EventFragment;\n    \"ScopeReferredByPolicyUpdated(address,bytes32,bytes32,uint8)\": EventFragment;\n  };\n\n  getEvent(\n    nameOrSignatureOrTopic: \"AgentReferredByPolicyUpdated\"\n  ): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AgentReferredByPolicyUpdated(address,bytes32,bytes32,uint8)\"\n  ): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AgentReferredByScopeUpdated\"\n  ): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AgentReferredByScopeUpdated(address,bytes32,bytes32,uint8)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmActivityUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmActivityUpdated(address,bytes32,uint8)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmAdminUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmAdminUpdated(address,bytes32,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmAgentLimitUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmAgentLimitUpdated(address,bytes32,uint16)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmAlterabilityUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmAlterabilityUpdated(address,bytes32,uint8)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmContextLimitUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmContextLimitUpdated(address,bytes32,uint32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmRegistered(address,bytes32,bytes32,bytes32)\"\n  ): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ScopeReferredByAgentUpdated\"\n  ): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ScopeReferredByAgentUpdated(address,bytes32,bytes32,uint8)\"\n  ): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ScopeReferredByPolicyUpdated\"\n  ): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ScopeReferredByPolicyUpdated(address,bytes32,bytes32,uint8)\"\n  ): EventFragment;\n}\n\nexport interface AgentReferredByPolicyUpdatedEventObject {\n  sender: string;\n  agentId: string;\n  policyId: string;\n  action: number;\n}\nexport type AgentReferredByPolicyUpdatedEvent = TypedEvent<\n  [string, string, string, number],\n  AgentReferredByPolicyUpdatedEventObject\n>;\n\nexport type AgentReferredByPolicyUpdatedEventFilter =\n  TypedEventFilter<AgentReferredByPolicyUpdatedEvent>;\n\nexport interface AgentReferredByScopeUpdatedEventObject {\n  sender: string;\n  agentId: string;\n  scopeId: string;\n  action: number;\n}\nexport type AgentReferredByScopeUpdatedEvent = TypedEvent<\n  [string, string, string, number],\n  AgentReferredByScopeUpdatedEventObject\n>;\n\nexport type AgentReferredByScopeUpdatedEventFilter =\n  TypedEventFilter<AgentReferredByScopeUpdatedEvent>;\n\nexport interface RealmActivityUpdatedEventObject {\n  sender: string;\n  realmId: string;\n  acstat: number;\n}\nexport type RealmActivityUpdatedEvent = TypedEvent<\n  [string, string, number],\n  RealmActivityUpdatedEventObject\n>;\n\nexport type RealmActivityUpdatedEventFilter =\n  TypedEventFilter<RealmActivityUpdatedEvent>;\n\nexport interface RealmAdminUpdatedEventObject {\n  sender: string;\n  realmId: string;\n  adminId: string;\n}\nexport type RealmAdminUpdatedEvent = TypedEvent<\n  [string, string, string],\n  RealmAdminUpdatedEventObject\n>;\n\nexport type RealmAdminUpdatedEventFilter =\n  TypedEventFilter<RealmAdminUpdatedEvent>;\n\nexport interface RealmAgentLimitUpdatedEventObject {\n  sender: string;\n  realmId: string;\n  agentLimit: number;\n}\nexport type RealmAgentLimitUpdatedEvent = TypedEvent<\n  [string, string, number],\n  RealmAgentLimitUpdatedEventObject\n>;\n\nexport type RealmAgentLimitUpdatedEventFilter =\n  TypedEventFilter<RealmAgentLimitUpdatedEvent>;\n\nexport interface RealmAlterabilityUpdatedEventObject {\n  sender: string;\n  realmId: string;\n  alstat: number;\n}\nexport type RealmAlterabilityUpdatedEvent = TypedEvent<\n  [string, string, number],\n  RealmAlterabilityUpdatedEventObject\n>;\n\nexport type RealmAlterabilityUpdatedEventFilter =\n  TypedEventFilter<RealmAlterabilityUpdatedEvent>;\n\nexport interface RealmContextLimitUpdatedEventObject {\n  sender: string;\n  realmId: string;\n  contextLimit: number;\n}\nexport type RealmContextLimitUpdatedEvent = TypedEvent<\n  [string, string, number],\n  RealmContextLimitUpdatedEventObject\n>;\n\nexport type RealmContextLimitUpdatedEventFilter =\n  TypedEventFilter<RealmContextLimitUpdatedEvent>;\n\nexport interface RealmRegisteredEventObject {\n  sender: string;\n  realmId: string;\n  domainId: string;\n  adminId: string;\n}\nexport type RealmRegisteredEvent = TypedEvent<\n  [string, string, string, string],\n  RealmRegisteredEventObject\n>;\n\nexport type RealmRegisteredEventFilter = TypedEventFilter<RealmRegisteredEvent>;\n\nexport interface ScopeReferredByAgentUpdatedEventObject {\n  sender: string;\n  scopeId: string;\n  agentId: string;\n  action: number;\n}\nexport type ScopeReferredByAgentUpdatedEvent = TypedEvent<\n  [string, string, string, number],\n  ScopeReferredByAgentUpdatedEventObject\n>;\n\nexport type ScopeReferredByAgentUpdatedEventFilter =\n  TypedEventFilter<ScopeReferredByAgentUpdatedEvent>;\n\nexport interface ScopeReferredByPolicyUpdatedEventObject {\n  sender: string;\n  scopeId: string;\n  policyId: string;\n  action: number;\n}\nexport type ScopeReferredByPolicyUpdatedEvent = TypedEvent<\n  [string, string, string, number],\n  ScopeReferredByPolicyUpdatedEventObject\n>;\n\nexport type ScopeReferredByPolicyUpdatedEventFilter =\n  TypedEventFilter<ScopeReferredByPolicyUpdatedEvent>;\n\nexport interface IRealmManagement extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IRealmManagementInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    realmCheckAdmin(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"realmCheckAdmin(bytes32,address)\"(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    realmCheckId(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"realmCheckId(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    realmCheckName(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"realmCheckName(string)\"(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    realmDeleteActivity(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"realmDeleteActivity(bytes32[])\"(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    realmGetContexts(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    \"realmGetContexts(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    realmGetInfo(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[IRealmManagement.RealmInfoStructOutput]>;\n\n    \"realmGetInfo(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[IRealmManagement.RealmInfoStructOutput]>;\n\n    realmHasContext(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"realmHasContext(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    realmHasFunction(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"realmHasFunction(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    realmRegister(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\"(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    realmUpdateActivityStatus(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"realmUpdateActivityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    realmUpdateAdmin(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"realmUpdateAdmin((bytes32,bytes32)[])\"(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    realmUpdateAgentLimit(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"realmUpdateAgentLimit((bytes32,uint16)[])\"(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    realmUpdateAlterabilityStatus(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    realmUpdateContextLimit(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"realmUpdateContextLimit((bytes32,uint32)[])\"(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  realmCheckAdmin(\n    contextId: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"realmCheckAdmin(bytes32,address)\"(\n    contextId: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  realmCheckId(\n    realmId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"realmCheckId(bytes32)\"(\n    realmId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  realmCheckName(\n    realmName: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"realmCheckName(string)\"(\n    realmName: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  realmDeleteActivity(\n    requests: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"realmDeleteActivity(bytes32[])\"(\n    requests: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  realmGetContexts(\n    realmId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  \"realmGetContexts(bytes32)\"(\n    realmId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  realmGetInfo(\n    realmId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<IRealmManagement.RealmInfoStructOutput>;\n\n  \"realmGetInfo(bytes32)\"(\n    realmId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<IRealmManagement.RealmInfoStructOutput>;\n\n  realmHasContext(\n    realmId: PromiseOrValue<BytesLike>,\n    contextId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"realmHasContext(bytes32,bytes32)\"(\n    realmId: PromiseOrValue<BytesLike>,\n    contextId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  realmHasFunction(\n    realmId: PromiseOrValue<BytesLike>,\n    functionId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"realmHasFunction(bytes32,bytes32)\"(\n    realmId: PromiseOrValue<BytesLike>,\n    functionId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  realmRegister(\n    requests: IRealmManagement.RealmRegisterRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\"(\n    requests: IRealmManagement.RealmRegisterRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  realmUpdateActivityStatus(\n    requests: IACLCommons.UpdateActivityRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"realmUpdateActivityStatus((bytes32,uint8)[])\"(\n    requests: IACLCommons.UpdateActivityRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  realmUpdateAdmin(\n    requests: IACLCommons.UpdateAdminRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"realmUpdateAdmin((bytes32,bytes32)[])\"(\n    requests: IACLCommons.UpdateAdminRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  realmUpdateAgentLimit(\n    requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"realmUpdateAgentLimit((bytes32,uint16)[])\"(\n    requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  realmUpdateAlterabilityStatus(\n    requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\"(\n    requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  realmUpdateContextLimit(\n    requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"realmUpdateContextLimit((bytes32,uint32)[])\"(\n    requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    realmCheckAdmin(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmCheckAdmin(bytes32,address)\"(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmCheckId(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmCheckId(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmCheckName(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmCheckName(string)\"(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmDeleteActivity(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmDeleteActivity(bytes32[])\"(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmGetContexts(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"realmGetContexts(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    realmGetInfo(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<IRealmManagement.RealmInfoStructOutput>;\n\n    \"realmGetInfo(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<IRealmManagement.RealmInfoStructOutput>;\n\n    realmHasContext(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmHasContext(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmHasFunction(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmHasFunction(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmRegister(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\"(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmUpdateActivityStatus(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmUpdateActivityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmUpdateAdmin(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmUpdateAdmin((bytes32,bytes32)[])\"(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmUpdateAgentLimit(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmUpdateAgentLimit((bytes32,uint16)[])\"(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmUpdateAlterabilityStatus(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    realmUpdateContextLimit(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"realmUpdateContextLimit((bytes32,uint32)[])\"(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n  };\n\n  filters: {\n    \"AgentReferredByPolicyUpdated(address,bytes32,bytes32,uint8)\"(\n      sender?: PromiseOrValue<string> | null,\n      agentId?: PromiseOrValue<BytesLike> | null,\n      policyId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): AgentReferredByPolicyUpdatedEventFilter;\n    AgentReferredByPolicyUpdated(\n      sender?: PromiseOrValue<string> | null,\n      agentId?: PromiseOrValue<BytesLike> | null,\n      policyId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): AgentReferredByPolicyUpdatedEventFilter;\n\n    \"AgentReferredByScopeUpdated(address,bytes32,bytes32,uint8)\"(\n      sender?: PromiseOrValue<string> | null,\n      agentId?: PromiseOrValue<BytesLike> | null,\n      scopeId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): AgentReferredByScopeUpdatedEventFilter;\n    AgentReferredByScopeUpdated(\n      sender?: PromiseOrValue<string> | null,\n      agentId?: PromiseOrValue<BytesLike> | null,\n      scopeId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): AgentReferredByScopeUpdatedEventFilter;\n\n    \"RealmActivityUpdated(address,bytes32,uint8)\"(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      acstat?: null\n    ): RealmActivityUpdatedEventFilter;\n    RealmActivityUpdated(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      acstat?: null\n    ): RealmActivityUpdatedEventFilter;\n\n    \"RealmAdminUpdated(address,bytes32,bytes32)\"(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      adminId?: PromiseOrValue<BytesLike> | null\n    ): RealmAdminUpdatedEventFilter;\n    RealmAdminUpdated(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      adminId?: PromiseOrValue<BytesLike> | null\n    ): RealmAdminUpdatedEventFilter;\n\n    \"RealmAgentLimitUpdated(address,bytes32,uint16)\"(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      agentLimit?: null\n    ): RealmAgentLimitUpdatedEventFilter;\n    RealmAgentLimitUpdated(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      agentLimit?: null\n    ): RealmAgentLimitUpdatedEventFilter;\n\n    \"RealmAlterabilityUpdated(address,bytes32,uint8)\"(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      alstat?: null\n    ): RealmAlterabilityUpdatedEventFilter;\n    RealmAlterabilityUpdated(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      alstat?: null\n    ): RealmAlterabilityUpdatedEventFilter;\n\n    \"RealmContextLimitUpdated(address,bytes32,uint32)\"(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      contextLimit?: null\n    ): RealmContextLimitUpdatedEventFilter;\n    RealmContextLimitUpdated(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      contextLimit?: null\n    ): RealmContextLimitUpdatedEventFilter;\n\n    \"RealmRegistered(address,bytes32,bytes32,bytes32)\"(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      domainId?: PromiseOrValue<BytesLike> | null,\n      adminId?: null\n    ): RealmRegisteredEventFilter;\n    RealmRegistered(\n      sender?: PromiseOrValue<string> | null,\n      realmId?: PromiseOrValue<BytesLike> | null,\n      domainId?: PromiseOrValue<BytesLike> | null,\n      adminId?: null\n    ): RealmRegisteredEventFilter;\n\n    \"ScopeReferredByAgentUpdated(address,bytes32,bytes32,uint8)\"(\n      sender?: PromiseOrValue<string> | null,\n      scopeId?: PromiseOrValue<BytesLike> | null,\n      agentId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): ScopeReferredByAgentUpdatedEventFilter;\n    ScopeReferredByAgentUpdated(\n      sender?: PromiseOrValue<string> | null,\n      scopeId?: PromiseOrValue<BytesLike> | null,\n      agentId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): ScopeReferredByAgentUpdatedEventFilter;\n\n    \"ScopeReferredByPolicyUpdated(address,bytes32,bytes32,uint8)\"(\n      sender?: PromiseOrValue<string> | null,\n      scopeId?: PromiseOrValue<BytesLike> | null,\n      policyId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): ScopeReferredByPolicyUpdatedEventFilter;\n    ScopeReferredByPolicyUpdated(\n      sender?: PromiseOrValue<string> | null,\n      scopeId?: PromiseOrValue<BytesLike> | null,\n      policyId?: PromiseOrValue<BytesLike> | null,\n      action?: null\n    ): ScopeReferredByPolicyUpdatedEventFilter;\n  };\n\n  estimateGas: {\n    realmCheckAdmin(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"realmCheckAdmin(bytes32,address)\"(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    realmCheckId(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"realmCheckId(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    realmCheckName(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"realmCheckName(string)\"(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    realmDeleteActivity(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"realmDeleteActivity(bytes32[])\"(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    realmGetContexts(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"realmGetContexts(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    realmGetInfo(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"realmGetInfo(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    realmHasContext(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"realmHasContext(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    realmHasFunction(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"realmHasFunction(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    realmRegister(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\"(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    realmUpdateActivityStatus(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"realmUpdateActivityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    realmUpdateAdmin(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"realmUpdateAdmin((bytes32,bytes32)[])\"(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    realmUpdateAgentLimit(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"realmUpdateAgentLimit((bytes32,uint16)[])\"(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    realmUpdateAlterabilityStatus(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    realmUpdateContextLimit(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"realmUpdateContextLimit((bytes32,uint32)[])\"(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    realmCheckAdmin(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"realmCheckAdmin(bytes32,address)\"(\n      contextId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    realmCheckId(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"realmCheckId(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    realmCheckName(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"realmCheckName(string)\"(\n      realmName: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    realmDeleteActivity(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"realmDeleteActivity(bytes32[])\"(\n      requests: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    realmGetContexts(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"realmGetContexts(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    realmGetInfo(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"realmGetInfo(bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    realmHasContext(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"realmHasContext(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      contextId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    realmHasFunction(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"realmHasFunction(bytes32,bytes32)\"(\n      realmId: PromiseOrValue<BytesLike>,\n      functionId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    realmRegister(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"realmRegister((bytes32,bytes32,uint32,uint16,uint8,uint8,string)[])\"(\n      requests: IRealmManagement.RealmRegisterRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    realmUpdateActivityStatus(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"realmUpdateActivityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateActivityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    realmUpdateAdmin(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"realmUpdateAdmin((bytes32,bytes32)[])\"(\n      requests: IACLCommons.UpdateAdminRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    realmUpdateAgentLimit(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"realmUpdateAgentLimit((bytes32,uint16)[])\"(\n      requests: IACLCommons.ScopeUpdateAgentLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    realmUpdateAlterabilityStatus(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"realmUpdateAlterabilityStatus((bytes32,uint8)[])\"(\n      requests: IACLCommons.UpdateAlterabilityRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    realmUpdateContextLimit(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"realmUpdateContextLimit((bytes32,uint32)[])\"(\n      requests: IRealmManagement.RealmUpdateContextLimitRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}