{"version":3,"file":"IGroupManagement.js","sourceRoot":"","sources":["../../../../typechain/types/acl/IGroupManagement.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../common\";\n\nexport interface IGroupManagementInterface extends utils.Interface {\n  functions: {\n    \"getGroupInfo(bytes32)\": FunctionFragment;\n    \"getGroupRoles(bytes32)\": FunctionFragment;\n    \"hasGroupRole(bytes32,bytes32)\": FunctionFragment;\n    \"registerGroup(string,bool)\": FunctionFragment;\n    \"setGroupStatus(bytes32,bool)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"getGroupInfo\"\n      | \"getGroupInfo(bytes32)\"\n      | \"getGroupRoles\"\n      | \"getGroupRoles(bytes32)\"\n      | \"hasGroupRole\"\n      | \"hasGroupRole(bytes32,bytes32)\"\n      | \"registerGroup\"\n      | \"registerGroup(string,bool)\"\n      | \"setGroupStatus\"\n      | \"setGroupStatus(bytes32,bool)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"getGroupInfo\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupInfo(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupRoles\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupRoles(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasGroupRole\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasGroupRole(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerGroup\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerGroup(string,bool)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setGroupStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setGroupStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"getGroupInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupInfo(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupRoles\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupRoles(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasGroupRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasGroupRole(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerGroup(string,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setGroupStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setGroupStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"GroupRegistered(bytes32,address,string,bool)\": EventFragment;\n    \"GroupStatusChanged(bytes32,address,bool)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"GroupRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"GroupRegistered(bytes32,address,string,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"GroupStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"GroupStatusChanged(bytes32,address,bool)\"\n  ): EventFragment;\n}\n\nexport interface GroupRegisteredEventObject {\n  group: string;\n  sender: string;\n  name: string;\n  status: boolean;\n}\nexport type GroupRegisteredEvent = TypedEvent<\n  [string, string, string, boolean],\n  GroupRegisteredEventObject\n>;\n\nexport type GroupRegisteredEventFilter = TypedEventFilter<GroupRegisteredEvent>;\n\nexport interface GroupStatusChangedEventObject {\n  group: string;\n  sender: string;\n  status: boolean;\n}\nexport type GroupStatusChangedEvent = TypedEvent<\n  [string, string, boolean],\n  GroupStatusChangedEventObject\n>;\n\nexport type GroupStatusChangedEventFilter =\n  TypedEventFilter<GroupStatusChangedEvent>;\n\nexport interface IGroupManagement extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IGroupManagementInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  getGroupInfo(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean]>;\n\n  \"getGroupInfo(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean]>;\n\n  getGroupRoles(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  \"getGroupRoles(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  hasGroupRole(\n    group: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasGroupRole(bytes32,bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  registerGroup(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerGroup(string,bool)\"(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setGroupStatus(\n    group: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setGroupStatus(bytes32,bool)\"(\n    group: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n  };\n\n  filters: {\n    \"GroupRegistered(bytes32,address,string,bool)\"(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null\n    ): GroupRegisteredEventFilter;\n    GroupRegistered(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null\n    ): GroupRegisteredEventFilter;\n\n    \"GroupStatusChanged(bytes32,address,bool)\"(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): GroupStatusChangedEventFilter;\n    GroupStatusChanged(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): GroupStatusChangedEventFilter;\n  };\n\n  estimateGas: {\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}