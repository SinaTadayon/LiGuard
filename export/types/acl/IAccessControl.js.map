{"version":3,"file":"IAccessControl.js","sourceRoot":"","sources":["../../../../typechain/types/acl/IAccessControl.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type { FunctionFragment, Result } from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../common\";\n\nexport interface IAccessControlInterface extends utils.Interface {\n  functions: {\n    \"hasAccess(bytes32,address,bytes4)\": FunctionFragment;\n    \"isContextEnabled(bytes32)\": FunctionFragment;\n    \"isContextExists(bytes32)\": FunctionFragment;\n    \"isContextFunctionEnabled(bytes32,bytes4)\": FunctionFragment;\n    \"isContextFunctionExists(bytes32,bytes4)\": FunctionFragment;\n    \"isContextSafeMode(bytes32)\": FunctionFragment;\n    \"isContextUpgradable(bytes32)\": FunctionFragment;\n    \"isGroupEnabled(bytes32)\": FunctionFragment;\n    \"isGroupExists(bytes32)\": FunctionFragment;\n    \"isLivelyAdmin(address)\": FunctionFragment;\n    \"isLivelyAssetManager(address)\": FunctionFragment;\n    \"isLivelyDao(address)\": FunctionFragment;\n    \"isLivelyDaoExecutor(address)\": FunctionFragment;\n    \"isLivelyGeneralGroup(bytes32)\": FunctionFragment;\n    \"isLivelyGeneralRealm(bytes32)\": FunctionFragment;\n    \"isLivelySystemAdmin(address)\": FunctionFragment;\n    \"isRealmEnabled(bytes32)\": FunctionFragment;\n    \"isRealmExists(bytes32)\": FunctionFragment;\n    \"isRealmUpgradable(bytes32)\": FunctionFragment;\n    \"isRoleEnabled(bytes32)\": FunctionFragment;\n    \"isRoleExists(bytes32)\": FunctionFragment;\n    \"livelyAdminRole()\": FunctionFragment;\n    \"livelyAnonymousRole()\": FunctionFragment;\n    \"livelyAssetManagerRole()\": FunctionFragment;\n    \"livelyDaoExecutorRole()\": FunctionFragment;\n    \"livelyDaoRole()\": FunctionFragment;\n    \"livelyGeneralGroupRole()\": FunctionFragment;\n    \"livelyGeneralRealmRole()\": FunctionFragment;\n    \"livelySystemAdminRole()\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"hasAccess\"\n      | \"hasAccess(bytes32,address,bytes4)\"\n      | \"isContextEnabled\"\n      | \"isContextEnabled(bytes32)\"\n      | \"isContextExists\"\n      | \"isContextExists(bytes32)\"\n      | \"isContextFunctionEnabled\"\n      | \"isContextFunctionEnabled(bytes32,bytes4)\"\n      | \"isContextFunctionExists\"\n      | \"isContextFunctionExists(bytes32,bytes4)\"\n      | \"isContextSafeMode\"\n      | \"isContextSafeMode(bytes32)\"\n      | \"isContextUpgradable\"\n      | \"isContextUpgradable(bytes32)\"\n      | \"isGroupEnabled\"\n      | \"isGroupEnabled(bytes32)\"\n      | \"isGroupExists\"\n      | \"isGroupExists(bytes32)\"\n      | \"isLivelyAdmin\"\n      | \"isLivelyAdmin(address)\"\n      | \"isLivelyAssetManager\"\n      | \"isLivelyAssetManager(address)\"\n      | \"isLivelyDao\"\n      | \"isLivelyDao(address)\"\n      | \"isLivelyDaoExecutor\"\n      | \"isLivelyDaoExecutor(address)\"\n      | \"isLivelyGeneralGroup\"\n      | \"isLivelyGeneralGroup(bytes32)\"\n      | \"isLivelyGeneralRealm\"\n      | \"isLivelyGeneralRealm(bytes32)\"\n      | \"isLivelySystemAdmin\"\n      | \"isLivelySystemAdmin(address)\"\n      | \"isRealmEnabled\"\n      | \"isRealmEnabled(bytes32)\"\n      | \"isRealmExists\"\n      | \"isRealmExists(bytes32)\"\n      | \"isRealmUpgradable\"\n      | \"isRealmUpgradable(bytes32)\"\n      | \"isRoleEnabled\"\n      | \"isRoleEnabled(bytes32)\"\n      | \"isRoleExists\"\n      | \"isRoleExists(bytes32)\"\n      | \"livelyAdminRole\"\n      | \"livelyAdminRole()\"\n      | \"livelyAnonymousRole\"\n      | \"livelyAnonymousRole()\"\n      | \"livelyAssetManagerRole\"\n      | \"livelyAssetManagerRole()\"\n      | \"livelyDaoExecutorRole\"\n      | \"livelyDaoExecutorRole()\"\n      | \"livelyDaoRole\"\n      | \"livelyDaoRole()\"\n      | \"livelyGeneralGroupRole\"\n      | \"livelyGeneralGroupRole()\"\n      | \"livelyGeneralRealmRole\"\n      | \"livelyGeneralRealmRole()\"\n      | \"livelySystemAdminRole\"\n      | \"livelySystemAdminRole()\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"hasAccess\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasAccess(bytes32,address,bytes4)\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionEnabled\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionEnabled(bytes32,bytes4)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionExists\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionExists(bytes32,bytes4)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextSafeMode\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextSafeMode(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextUpgradable\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextUpgradable(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAdmin\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAdmin(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetManager\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetManager(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDao\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDao(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDaoExecutor\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDaoExecutor(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralGroup\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralGroup(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralRealm\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralRealm(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelySystemAdmin\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelySystemAdmin(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmUpgradable\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmUpgradable(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyAdminRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyAdminRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyAnonymousRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyAnonymousRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyAssetManagerRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyAssetManagerRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyDaoExecutorRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyDaoExecutorRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyDaoRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyDaoRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyGeneralGroupRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyGeneralGroupRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyGeneralRealmRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelyGeneralRealmRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelySystemAdminRole\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"livelySystemAdminRole()\",\n    values?: undefined\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"hasAccess\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasAccess(bytes32,address,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionEnabled(bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionExists(bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextSafeMode\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextSafeMode(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextUpgradable(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAdmin(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetManager\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetManager(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDao\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDao(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDaoExecutor\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDaoExecutor(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralGroup(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralRealm(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelySystemAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelySystemAdmin(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmUpgradable(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyAdminRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyAnonymousRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyAnonymousRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyAssetManagerRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyAssetManagerRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyDaoExecutorRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyDaoExecutorRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyDaoRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyDaoRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyGeneralGroupRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyGeneralGroupRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyGeneralRealmRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelyGeneralRealmRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelySystemAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"livelySystemAdminRole()\",\n    data: BytesLike\n  ): Result;\n\n  events: {};\n}\n\nexport interface IAccessControl extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IAccessControlInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetManager(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetManager(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyDao(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyDao(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyDaoExecutor(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyDaoExecutor(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelySystemAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelySystemAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    livelyAdminRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelyAdminRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    livelyAnonymousRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelyAnonymousRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    livelyAssetManagerRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelyAssetManagerRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    livelyDaoExecutorRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelyDaoExecutorRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    livelyDaoRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelyDaoRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    livelyGeneralGroupRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelyGeneralGroupRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    livelyGeneralRealmRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelyGeneralRealmRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    livelySystemAdminRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"livelySystemAdminRole()\"(overrides?: CallOverrides): Promise<[string]>;\n  };\n\n  hasAccess(\n    context: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasAccess(bytes32,address,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextEnabled(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextEnabled(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextExists(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextExists(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextFunctionEnabled(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextFunctionEnabled(bytes32,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextFunctionExists(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextFunctionExists(bytes32,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextSafeMode(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextSafeMode(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextUpgradable(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextUpgradable(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isGroupEnabled(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isGroupEnabled(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isGroupExists(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isGroupExists(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAdmin(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAdmin(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetManager(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetManager(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyDao(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyDao(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyDaoExecutor(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyDaoExecutor(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyGeneralGroup(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyGeneralGroup(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyGeneralRealm(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyGeneralRealm(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelySystemAdmin(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelySystemAdmin(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmEnabled(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmEnabled(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmExists(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmExists(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmUpgradable(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmUpgradable(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRoleEnabled(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRoleEnabled(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRoleExists(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRoleExists(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  livelyAdminRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelyAdminRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  livelyAnonymousRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelyAnonymousRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  livelyAssetManagerRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelyAssetManagerRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  livelyDaoExecutorRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelyDaoExecutorRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  livelyDaoRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelyDaoRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  livelyGeneralGroupRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelyGeneralGroupRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  livelyGeneralRealmRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelyGeneralRealmRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  livelySystemAdminRole(overrides?: CallOverrides): Promise<string>;\n\n  \"livelySystemAdminRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  callStatic: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetManager(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetManager(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyDao(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyDao(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyDaoExecutor(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyDaoExecutor(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelySystemAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelySystemAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    livelyAdminRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelyAdminRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    livelyAnonymousRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelyAnonymousRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    livelyAssetManagerRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelyAssetManagerRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    livelyDaoExecutorRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelyDaoExecutorRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    livelyDaoRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelyDaoRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    livelyGeneralGroupRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelyGeneralGroupRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    livelyGeneralRealmRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelyGeneralRealmRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    livelySystemAdminRole(overrides?: CallOverrides): Promise<string>;\n\n    \"livelySystemAdminRole()\"(overrides?: CallOverrides): Promise<string>;\n  };\n\n  filters: {};\n\n  estimateGas: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetManager(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetManager(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyDao(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyDao(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyDaoExecutor(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyDaoExecutor(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelySystemAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelySystemAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    livelyAdminRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelyAdminRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    livelyAnonymousRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelyAnonymousRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    livelyAssetManagerRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelyAssetManagerRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    livelyDaoExecutorRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelyDaoExecutorRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    livelyDaoRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelyDaoRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    livelyGeneralGroupRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelyGeneralGroupRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    livelyGeneralRealmRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelyGeneralRealmRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    livelySystemAdminRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"livelySystemAdminRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetManager(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetManager(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyDao(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyDao(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyDaoExecutor(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyDaoExecutor(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelySystemAdmin(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelySystemAdmin(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    livelyAdminRole(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"livelyAdminRole()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    livelyAnonymousRole(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"livelyAnonymousRole()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    livelyAssetManagerRole(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"livelyAssetManagerRole()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    livelyDaoExecutorRole(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"livelyDaoExecutorRole()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    livelyDaoRole(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"livelyDaoRole()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    livelyGeneralGroupRole(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"livelyGeneralGroupRole()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    livelyGeneralRealmRole(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"livelyGeneralRealmRole()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    livelySystemAdminRole(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"livelySystemAdminRole()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}