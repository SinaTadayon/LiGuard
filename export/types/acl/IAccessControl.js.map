{"version":3,"file":"IAccessControl.js","sourceRoot":"","sources":["../../../../typechain/types/acl/IAccessControl.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type { FunctionFragment, Result } from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../common\";\n\nexport interface IAccessControlInterface extends utils.Interface {\n  functions: {\n    \"hasAccess(bytes32,address,bytes4)\": FunctionFragment;\n    \"isContextEnabled(bytes32)\": FunctionFragment;\n    \"isContextExists(bytes32)\": FunctionFragment;\n    \"isContextFunctionEnabled(bytes32,bytes4)\": FunctionFragment;\n    \"isContextFunctionExists(bytes32,bytes4)\": FunctionFragment;\n    \"isContextSafeMode(bytes32)\": FunctionFragment;\n    \"isContextUpgradable(bytes32)\": FunctionFragment;\n    \"isGroupEnabled(bytes32)\": FunctionFragment;\n    \"isGroupExists(bytes32)\": FunctionFragment;\n    \"isLivelyAdminRole(address)\": FunctionFragment;\n    \"isLivelyAssetAdminRole(address)\": FunctionFragment;\n    \"isLivelyAssetGroup(bytes32)\": FunctionFragment;\n    \"isLivelyAssetManagerRole(address)\": FunctionFragment;\n    \"isLivelyAssetRealm(bytes32)\": FunctionFragment;\n    \"isLivelyCommunityDaoExecutorRole(address)\": FunctionFragment;\n    \"isLivelyCommunityDaoRole(address)\": FunctionFragment;\n    \"isLivelyDaoGroup(bytes32)\": FunctionFragment;\n    \"isLivelyGeneralGroup(bytes32)\": FunctionFragment;\n    \"isLivelyGeneralRealm(bytes32)\": FunctionFragment;\n    \"isLivelySystemAdminRole(address)\": FunctionFragment;\n    \"isRealmEnabled(bytes32)\": FunctionFragment;\n    \"isRealmExists(bytes32)\": FunctionFragment;\n    \"isRealmUpgradable(bytes32)\": FunctionFragment;\n    \"isRoleEnabled(bytes32)\": FunctionFragment;\n    \"isRoleExists(bytes32)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"hasAccess\"\n      | \"hasAccess(bytes32,address,bytes4)\"\n      | \"isContextEnabled\"\n      | \"isContextEnabled(bytes32)\"\n      | \"isContextExists\"\n      | \"isContextExists(bytes32)\"\n      | \"isContextFunctionEnabled\"\n      | \"isContextFunctionEnabled(bytes32,bytes4)\"\n      | \"isContextFunctionExists\"\n      | \"isContextFunctionExists(bytes32,bytes4)\"\n      | \"isContextSafeMode\"\n      | \"isContextSafeMode(bytes32)\"\n      | \"isContextUpgradable\"\n      | \"isContextUpgradable(bytes32)\"\n      | \"isGroupEnabled\"\n      | \"isGroupEnabled(bytes32)\"\n      | \"isGroupExists\"\n      | \"isGroupExists(bytes32)\"\n      | \"isLivelyAdminRole\"\n      | \"isLivelyAdminRole(address)\"\n      | \"isLivelyAssetAdminRole\"\n      | \"isLivelyAssetAdminRole(address)\"\n      | \"isLivelyAssetGroup\"\n      | \"isLivelyAssetGroup(bytes32)\"\n      | \"isLivelyAssetManagerRole\"\n      | \"isLivelyAssetManagerRole(address)\"\n      | \"isLivelyAssetRealm\"\n      | \"isLivelyAssetRealm(bytes32)\"\n      | \"isLivelyCommunityDaoExecutorRole\"\n      | \"isLivelyCommunityDaoExecutorRole(address)\"\n      | \"isLivelyCommunityDaoRole\"\n      | \"isLivelyCommunityDaoRole(address)\"\n      | \"isLivelyDaoGroup\"\n      | \"isLivelyDaoGroup(bytes32)\"\n      | \"isLivelyGeneralGroup\"\n      | \"isLivelyGeneralGroup(bytes32)\"\n      | \"isLivelyGeneralRealm\"\n      | \"isLivelyGeneralRealm(bytes32)\"\n      | \"isLivelySystemAdminRole\"\n      | \"isLivelySystemAdminRole(address)\"\n      | \"isRealmEnabled\"\n      | \"isRealmEnabled(bytes32)\"\n      | \"isRealmExists\"\n      | \"isRealmExists(bytes32)\"\n      | \"isRealmUpgradable\"\n      | \"isRealmUpgradable(bytes32)\"\n      | \"isRoleEnabled\"\n      | \"isRoleEnabled(bytes32)\"\n      | \"isRoleExists\"\n      | \"isRoleExists(bytes32)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"hasAccess\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasAccess(bytes32,address,bytes4)\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionEnabled\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionEnabled(bytes32,bytes4)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionExists\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionExists(bytes32,bytes4)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextSafeMode\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextSafeMode(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextUpgradable\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextUpgradable(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAdminRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAdminRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetAdminRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetAdminRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetGroup\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetGroup(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetManagerRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetManagerRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetRealm\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetRealm(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDaoGroup\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDaoGroup(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralGroup\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralGroup(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralRealm\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralRealm(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelySystemAdminRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelySystemAdminRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmUpgradable\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmUpgradable(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"hasAccess\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasAccess(bytes32,address,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionEnabled(bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionExists(bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextSafeMode\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextSafeMode(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextUpgradable(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAdminRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetAdminRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetGroup(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetManagerRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetManagerRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetRealm(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDaoGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDaoGroup(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralGroup(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralRealm(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelySystemAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelySystemAdminRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmUpgradable(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n\n  events: {};\n}\n\nexport interface IAccessControl extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IAccessControlInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n  };\n\n  hasAccess(\n    context: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasAccess(bytes32,address,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextEnabled(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextEnabled(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextExists(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextExists(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextFunctionEnabled(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextFunctionEnabled(bytes32,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextFunctionExists(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextFunctionExists(bytes32,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextSafeMode(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextSafeMode(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextUpgradable(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextUpgradable(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isGroupEnabled(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isGroupEnabled(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isGroupExists(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isGroupExists(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAdminRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAdminRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetAdminRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetAdminRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetGroup(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetGroup(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetManagerRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetManagerRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetRealm(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetRealm(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyCommunityDaoExecutorRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyCommunityDaoExecutorRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyCommunityDaoRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyCommunityDaoRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyDaoGroup(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyDaoGroup(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyGeneralGroup(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyGeneralGroup(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyGeneralRealm(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyGeneralRealm(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelySystemAdminRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelySystemAdminRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmEnabled(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmEnabled(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmExists(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmExists(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmUpgradable(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmUpgradable(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRoleEnabled(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRoleEnabled(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRoleExists(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRoleExists(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  callStatic: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n  };\n\n  filters: {};\n\n  estimateGas: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}