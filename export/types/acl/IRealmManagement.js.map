{"version":3,"file":"IRealmManagement.js","sourceRoot":"","sources":["../../../../typechain/types/acl/IRealmManagement.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../common\";\n\nexport interface IRealmManagementInterface extends utils.Interface {\n  functions: {\n    \"getRealmContexts(bytes32)\": FunctionFragment;\n    \"getRealmInfo(bytes32)\": FunctionFragment;\n    \"hasRealmContext(bytes32,bytes32)\": FunctionFragment;\n    \"registerRealm(string,bool,bool)\": FunctionFragment;\n    \"setRealmStatus(bytes32,bool)\": FunctionFragment;\n    \"setRealmUpgradeStatus(bytes32,bool)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"getRealmContexts\"\n      | \"getRealmContexts(bytes32)\"\n      | \"getRealmInfo\"\n      | \"getRealmInfo(bytes32)\"\n      | \"hasRealmContext\"\n      | \"hasRealmContext(bytes32,bytes32)\"\n      | \"registerRealm\"\n      | \"registerRealm(string,bool,bool)\"\n      | \"setRealmStatus\"\n      | \"setRealmStatus(bytes32,bool)\"\n      | \"setRealmUpgradeStatus\"\n      | \"setRealmUpgradeStatus(bytes32,bool)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"getRealmContexts\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRealmContexts(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRealmInfo\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRealmInfo(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRealmContext\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRealmContext(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerRealm\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<boolean>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerRealm(string,bool,bool)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<boolean>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmUpgradeStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmUpgradeStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"getRealmContexts\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRealmContexts(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRealmInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRealmInfo(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasRealmContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasRealmContext(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerRealm(string,bool,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmUpgradeStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmUpgradeStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"RealmRegistered(bytes32,address,string,bool,bool)\": EventFragment;\n    \"RealmStatusChanged(bytes32,address,bool)\": EventFragment;\n    \"RealmUpgradeStatusChanged(bytes32,address,bool)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"RealmRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmRegistered(bytes32,address,string,bool,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmStatusChanged(bytes32,address,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmUpgradeStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmUpgradeStatusChanged(bytes32,address,bool)\"\n  ): EventFragment;\n}\n\nexport interface RealmRegisteredEventObject {\n  realm: string;\n  sender: string;\n  name: string;\n  status: boolean;\n  isUpgradable: boolean;\n}\nexport type RealmRegisteredEvent = TypedEvent<\n  [string, string, string, boolean, boolean],\n  RealmRegisteredEventObject\n>;\n\nexport type RealmRegisteredEventFilter = TypedEventFilter<RealmRegisteredEvent>;\n\nexport interface RealmStatusChangedEventObject {\n  realm: string;\n  sender: string;\n  status: boolean;\n}\nexport type RealmStatusChangedEvent = TypedEvent<\n  [string, string, boolean],\n  RealmStatusChangedEventObject\n>;\n\nexport type RealmStatusChangedEventFilter =\n  TypedEventFilter<RealmStatusChangedEvent>;\n\nexport interface RealmUpgradeStatusChangedEventObject {\n  realm: string;\n  sender: string;\n  status: boolean;\n}\nexport type RealmUpgradeStatusChangedEvent = TypedEvent<\n  [string, string, boolean],\n  RealmUpgradeStatusChangedEventObject\n>;\n\nexport type RealmUpgradeStatusChangedEventFilter =\n  TypedEventFilter<RealmUpgradeStatusChangedEvent>;\n\nexport interface IRealmManagement extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IRealmManagementInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  getRealmContexts(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  \"getRealmContexts(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  getRealmInfo(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean, boolean]>;\n\n  \"getRealmInfo(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean, boolean]>;\n\n  hasRealmContext(\n    realm: PromiseOrValue<BytesLike>,\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasRealmContext(bytes32,bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  registerRealm(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    isUpgradable: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerRealm(string,bool,bool)\"(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    isUpgradable: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setRealmStatus(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setRealmStatus(bytes32,bool)\"(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setRealmUpgradeStatus(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setRealmUpgradeStatus(bytes32,bool)\"(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n  };\n\n  filters: {\n    \"RealmRegistered(bytes32,address,string,bool,bool)\"(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null,\n      isUpgradable?: null\n    ): RealmRegisteredEventFilter;\n    RealmRegistered(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null,\n      isUpgradable?: null\n    ): RealmRegisteredEventFilter;\n\n    \"RealmStatusChanged(bytes32,address,bool)\"(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmStatusChangedEventFilter;\n    RealmStatusChanged(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmStatusChangedEventFilter;\n\n    \"RealmUpgradeStatusChanged(bytes32,address,bool)\"(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmUpgradeStatusChangedEventFilter;\n    RealmUpgradeStatusChanged(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmUpgradeStatusChangedEventFilter;\n  };\n\n  estimateGas: {\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}