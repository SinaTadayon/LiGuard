{"version":3,"file":"AccessControlManager.js","sourceRoot":"","sources":["../../../../typechain/types/acl/AccessControlManager.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../common\";\n\nexport declare namespace IRoleManagement {\n  export type UpdateRoleRequestStruct = {\n    role: PromiseOrValue<BytesLike>;\n    account: PromiseOrValue<string>;\n  };\n\n  export type UpdateRoleRequestStructOutput = [string, string] & {\n    role: string;\n    account: string;\n  };\n\n  export type RegiterRoleRequestStruct = {\n    group: PromiseOrValue<BytesLike>;\n    name: PromiseOrValue<string>;\n    status: PromiseOrValue<boolean>;\n  };\n\n  export type RegiterRoleRequestStructOutput = [string, string, boolean] & {\n    group: string;\n    name: string;\n    status: boolean;\n  };\n}\n\nexport declare namespace IContextManagement {\n  export type ResponseContextStruct = {\n    name: PromiseOrValue<BytesLike>;\n    version: PromiseOrValue<BytesLike>;\n    realm: PromiseOrValue<BytesLike>;\n    contractId: PromiseOrValue<string>;\n    isSafeMode: PromiseOrValue<boolean>;\n    isUpgradable: PromiseOrValue<boolean>;\n  };\n\n  export type ResponseContextStructOutput = [\n    string,\n    string,\n    string,\n    string,\n    boolean,\n    boolean\n  ] & {\n    name: string;\n    version: string;\n    realm: string;\n    contractId: string;\n    isSafeMode: boolean;\n    isUpgradable: boolean;\n  };\n\n  export type RequestContextStruct = {\n    name: PromiseOrValue<BytesLike>;\n    version: PromiseOrValue<BytesLike>;\n    realm: PromiseOrValue<BytesLike>;\n    contractId: PromiseOrValue<string>;\n    status: PromiseOrValue<boolean>;\n  };\n\n  export type RequestContextStructOutput = [\n    string,\n    string,\n    string,\n    string,\n    boolean\n  ] & {\n    name: string;\n    version: string;\n    realm: string;\n    contractId: string;\n    status: boolean;\n  };\n\n  export type RequestRegisterContextStruct = {\n    role: PromiseOrValue<BytesLike>;\n    funcSelectors: PromiseOrValue<BytesLike>[];\n    isEnabled: PromiseOrValue<boolean>;\n  };\n\n  export type RequestRegisterContextStructOutput = [\n    string,\n    string[],\n    boolean\n  ] & { role: string; funcSelectors: string[]; isEnabled: boolean };\n\n  export type RequestPredictContextStruct = {\n    name: PromiseOrValue<BytesLike>;\n    version: PromiseOrValue<BytesLike>;\n    realm: PromiseOrValue<BytesLike>;\n    salt: PromiseOrValue<BytesLike>;\n    bytesHash: PromiseOrValue<BytesLike>;\n    deployer: PromiseOrValue<string>;\n    status: PromiseOrValue<boolean>;\n  };\n\n  export type RequestPredictContextStructOutput = [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    boolean\n  ] & {\n    name: string;\n    version: string;\n    realm: string;\n    salt: string;\n    bytesHash: string;\n    deployer: string;\n    status: boolean;\n  };\n\n  export type RequestUpdateContextStruct = {\n    role: PromiseOrValue<BytesLike>;\n    funcSelectors: PromiseOrValue<BytesLike>[];\n    updateStatus: PromiseOrValue<BigNumberish>;\n  };\n\n  export type RequestUpdateContextStructOutput = [string, string[], number] & {\n    role: string;\n    funcSelectors: string[];\n    updateStatus: number;\n  };\n}\n\nexport interface AccessControlManagerInterface extends utils.Interface {\n  functions: {\n    \"accessControlManager()\": FunctionFragment;\n    \"addContextFuncRole(bytes32,bytes4,bytes32)\": FunctionFragment;\n    \"batchGrantRoleAccount((bytes32,address)[])\": FunctionFragment;\n    \"batchRegisterRole((bytes32,string,bool)[])\": FunctionFragment;\n    \"batchRevokeRoleAccount((bytes32,address)[])\": FunctionFragment;\n    \"contractContext()\": FunctionFragment;\n    \"contractName()\": FunctionFragment;\n    \"contractRealm()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"domainSeparator()\": FunctionFragment;\n    \"getContextFuncs(bytes32)\": FunctionFragment;\n    \"getContextInfo(bytes32)\": FunctionFragment;\n    \"getGroupInfo(bytes32)\": FunctionFragment;\n    \"getGroupRoles(bytes32)\": FunctionFragment;\n    \"getRealmContexts(bytes32)\": FunctionFragment;\n    \"getRealmInfo(bytes32)\": FunctionFragment;\n    \"getRoleAccounts(bytes32)\": FunctionFragment;\n    \"getRoleInfo(bytes32)\": FunctionFragment;\n    \"grantContextRole(bytes32,bytes4,bytes32)\": FunctionFragment;\n    \"grantRoleAccount(bytes32,address)\": FunctionFragment;\n    \"hasAccess(bytes32,address,bytes4)\": FunctionFragment;\n    \"hasContextRole(bytes32,bytes32,bytes4)\": FunctionFragment;\n    \"hasGroupRole(bytes32,bytes32)\": FunctionFragment;\n    \"hasRealmContext(bytes32,bytes32)\": FunctionFragment;\n    \"hasRoleAccount(bytes32,address)\": FunctionFragment;\n    \"initVersion()\": FunctionFragment;\n    \"initialize(string,string,string,address)\": FunctionFragment;\n    \"isContextEnabled(bytes32)\": FunctionFragment;\n    \"isContextExists(bytes32)\": FunctionFragment;\n    \"isContextFunctionEnabled(bytes32,bytes4)\": FunctionFragment;\n    \"isContextFunctionExists(bytes32,bytes4)\": FunctionFragment;\n    \"isContextSafeMode(bytes32)\": FunctionFragment;\n    \"isContextUpgradable(bytes32)\": FunctionFragment;\n    \"isGroupEnabled(bytes32)\": FunctionFragment;\n    \"isGroupExists(bytes32)\": FunctionFragment;\n    \"isLivelyAdminRole(address)\": FunctionFragment;\n    \"isLivelyAssetAdminRole(address)\": FunctionFragment;\n    \"isLivelyAssetGroup(bytes32)\": FunctionFragment;\n    \"isLivelyAssetManagerRole(address)\": FunctionFragment;\n    \"isLivelyAssetRealm(bytes32)\": FunctionFragment;\n    \"isLivelyCommunityDaoExecutorRole(address)\": FunctionFragment;\n    \"isLivelyCommunityDaoRole(address)\": FunctionFragment;\n    \"isLivelyDaoGroup(bytes32)\": FunctionFragment;\n    \"isLivelyGeneralGroup(bytes32)\": FunctionFragment;\n    \"isLivelyGeneralRealm(bytes32)\": FunctionFragment;\n    \"isLivelySystemAdminRole(address)\": FunctionFragment;\n    \"isRealmEnabled(bytes32)\": FunctionFragment;\n    \"isRealmExists(bytes32)\": FunctionFragment;\n    \"isRealmUpgradable(bytes32)\": FunctionFragment;\n    \"isRoleEnabled(bytes32)\": FunctionFragment;\n    \"isRoleExists(bytes32)\": FunctionFragment;\n    \"isSafeMode()\": FunctionFragment;\n    \"isUpgradable()\": FunctionFragment;\n    \"localAdmin()\": FunctionFragment;\n    \"proxiableUUID()\": FunctionFragment;\n    \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\": FunctionFragment;\n    \"registerGroup(string,bool)\": FunctionFragment;\n    \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\": FunctionFragment;\n    \"registerRealm(string,bool,bool)\": FunctionFragment;\n    \"registerRole(string,bytes32,bool)\": FunctionFragment;\n    \"removeContextFunc(bytes32,bytes4)\": FunctionFragment;\n    \"revokeContextRole(bytes32,bytes4,bytes32)\": FunctionFragment;\n    \"revokeRoleAccount(bytes32,address)\": FunctionFragment;\n    \"setContextRealm(bytes32,bytes32)\": FunctionFragment;\n    \"setContextStatus(bytes32,bool)\": FunctionFragment;\n    \"setGroupStatus(bytes32,bool)\": FunctionFragment;\n    \"setLocalAdmin(address)\": FunctionFragment;\n    \"setRealmStatus(bytes32,bool)\": FunctionFragment;\n    \"setRealmUpgradeStatus(bytes32,bool)\": FunctionFragment;\n    \"setRoleGroup(bytes32,bytes32)\": FunctionFragment;\n    \"setRoleStatus(bytes32,bool)\": FunctionFragment;\n    \"setSafeMode(bool)\": FunctionFragment;\n    \"setUpgradeStatus(bool)\": FunctionFragment;\n    \"subjectAddress()\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\": FunctionFragment;\n    \"upgradeTo(address,bytes,bool)\": FunctionFragment;\n    \"withdrawBalance(address)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"accessControlManager\"\n      | \"accessControlManager()\"\n      | \"addContextFuncRole\"\n      | \"addContextFuncRole(bytes32,bytes4,bytes32)\"\n      | \"batchGrantRoleAccount\"\n      | \"batchGrantRoleAccount((bytes32,address)[])\"\n      | \"batchRegisterRole\"\n      | \"batchRegisterRole((bytes32,string,bool)[])\"\n      | \"batchRevokeRoleAccount\"\n      | \"batchRevokeRoleAccount((bytes32,address)[])\"\n      | \"contractContext\"\n      | \"contractContext()\"\n      | \"contractName\"\n      | \"contractName()\"\n      | \"contractRealm\"\n      | \"contractRealm()\"\n      | \"contractVersion\"\n      | \"contractVersion()\"\n      | \"domainSeparator\"\n      | \"domainSeparator()\"\n      | \"getContextFuncs\"\n      | \"getContextFuncs(bytes32)\"\n      | \"getContextInfo\"\n      | \"getContextInfo(bytes32)\"\n      | \"getGroupInfo\"\n      | \"getGroupInfo(bytes32)\"\n      | \"getGroupRoles\"\n      | \"getGroupRoles(bytes32)\"\n      | \"getRealmContexts\"\n      | \"getRealmContexts(bytes32)\"\n      | \"getRealmInfo\"\n      | \"getRealmInfo(bytes32)\"\n      | \"getRoleAccounts\"\n      | \"getRoleAccounts(bytes32)\"\n      | \"getRoleInfo\"\n      | \"getRoleInfo(bytes32)\"\n      | \"grantContextRole\"\n      | \"grantContextRole(bytes32,bytes4,bytes32)\"\n      | \"grantRoleAccount\"\n      | \"grantRoleAccount(bytes32,address)\"\n      | \"hasAccess\"\n      | \"hasAccess(bytes32,address,bytes4)\"\n      | \"hasContextRole\"\n      | \"hasContextRole(bytes32,bytes32,bytes4)\"\n      | \"hasGroupRole\"\n      | \"hasGroupRole(bytes32,bytes32)\"\n      | \"hasRealmContext\"\n      | \"hasRealmContext(bytes32,bytes32)\"\n      | \"hasRoleAccount\"\n      | \"hasRoleAccount(bytes32,address)\"\n      | \"initVersion\"\n      | \"initVersion()\"\n      | \"initialize\"\n      | \"initialize(string,string,string,address)\"\n      | \"isContextEnabled\"\n      | \"isContextEnabled(bytes32)\"\n      | \"isContextExists\"\n      | \"isContextExists(bytes32)\"\n      | \"isContextFunctionEnabled\"\n      | \"isContextFunctionEnabled(bytes32,bytes4)\"\n      | \"isContextFunctionExists\"\n      | \"isContextFunctionExists(bytes32,bytes4)\"\n      | \"isContextSafeMode\"\n      | \"isContextSafeMode(bytes32)\"\n      | \"isContextUpgradable\"\n      | \"isContextUpgradable(bytes32)\"\n      | \"isGroupEnabled\"\n      | \"isGroupEnabled(bytes32)\"\n      | \"isGroupExists\"\n      | \"isGroupExists(bytes32)\"\n      | \"isLivelyAdminRole\"\n      | \"isLivelyAdminRole(address)\"\n      | \"isLivelyAssetAdminRole\"\n      | \"isLivelyAssetAdminRole(address)\"\n      | \"isLivelyAssetGroup\"\n      | \"isLivelyAssetGroup(bytes32)\"\n      | \"isLivelyAssetManagerRole\"\n      | \"isLivelyAssetManagerRole(address)\"\n      | \"isLivelyAssetRealm\"\n      | \"isLivelyAssetRealm(bytes32)\"\n      | \"isLivelyCommunityDaoExecutorRole\"\n      | \"isLivelyCommunityDaoExecutorRole(address)\"\n      | \"isLivelyCommunityDaoRole\"\n      | \"isLivelyCommunityDaoRole(address)\"\n      | \"isLivelyDaoGroup\"\n      | \"isLivelyDaoGroup(bytes32)\"\n      | \"isLivelyGeneralGroup\"\n      | \"isLivelyGeneralGroup(bytes32)\"\n      | \"isLivelyGeneralRealm\"\n      | \"isLivelyGeneralRealm(bytes32)\"\n      | \"isLivelySystemAdminRole\"\n      | \"isLivelySystemAdminRole(address)\"\n      | \"isRealmEnabled\"\n      | \"isRealmEnabled(bytes32)\"\n      | \"isRealmExists\"\n      | \"isRealmExists(bytes32)\"\n      | \"isRealmUpgradable\"\n      | \"isRealmUpgradable(bytes32)\"\n      | \"isRoleEnabled\"\n      | \"isRoleEnabled(bytes32)\"\n      | \"isRoleExists\"\n      | \"isRoleExists(bytes32)\"\n      | \"isSafeMode\"\n      | \"isSafeMode()\"\n      | \"isUpgradable\"\n      | \"isUpgradable()\"\n      | \"localAdmin\"\n      | \"localAdmin()\"\n      | \"proxiableUUID\"\n      | \"proxiableUUID()\"\n      | \"registerContext\"\n      | \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"\n      | \"registerGroup\"\n      | \"registerGroup(string,bool)\"\n      | \"registerPredictContext\"\n      | \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"\n      | \"registerRealm\"\n      | \"registerRealm(string,bool,bool)\"\n      | \"registerRole\"\n      | \"registerRole(string,bytes32,bool)\"\n      | \"removeContextFunc\"\n      | \"removeContextFunc(bytes32,bytes4)\"\n      | \"revokeContextRole\"\n      | \"revokeContextRole(bytes32,bytes4,bytes32)\"\n      | \"revokeRoleAccount\"\n      | \"revokeRoleAccount(bytes32,address)\"\n      | \"setContextRealm\"\n      | \"setContextRealm(bytes32,bytes32)\"\n      | \"setContextStatus\"\n      | \"setContextStatus(bytes32,bool)\"\n      | \"setGroupStatus\"\n      | \"setGroupStatus(bytes32,bool)\"\n      | \"setLocalAdmin\"\n      | \"setLocalAdmin(address)\"\n      | \"setRealmStatus\"\n      | \"setRealmStatus(bytes32,bool)\"\n      | \"setRealmUpgradeStatus\"\n      | \"setRealmUpgradeStatus(bytes32,bool)\"\n      | \"setRoleGroup\"\n      | \"setRoleGroup(bytes32,bytes32)\"\n      | \"setRoleStatus\"\n      | \"setRoleStatus(bytes32,bool)\"\n      | \"setSafeMode\"\n      | \"setSafeMode(bool)\"\n      | \"setUpgradeStatus\"\n      | \"setUpgradeStatus(bool)\"\n      | \"subjectAddress\"\n      | \"subjectAddress()\"\n      | \"supportsInterface\"\n      | \"supportsInterface(bytes4)\"\n      | \"updateContext\"\n      | \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\"\n      | \"upgradeTo\"\n      | \"upgradeTo(address,bytes,bool)\"\n      | \"withdrawBalance\"\n      | \"withdrawBalance(address)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"accessControlManager\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"accessControlManager()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"addContextFuncRole\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"addContextFuncRole(bytes32,bytes4,bytes32)\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchGrantRoleAccount\",\n    values: [IRoleManagement.UpdateRoleRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchGrantRoleAccount((bytes32,address)[])\",\n    values: [IRoleManagement.UpdateRoleRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchRegisterRole\",\n    values: [IRoleManagement.RegiterRoleRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchRegisterRole((bytes32,string,bool)[])\",\n    values: [IRoleManagement.RegiterRoleRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchRevokeRoleAccount\",\n    values: [IRoleManagement.UpdateRoleRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchRevokeRoleAccount((bytes32,address)[])\",\n    values: [IRoleManagement.UpdateRoleRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractContext\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractContext()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractName\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractName()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractRealm\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractRealm()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"domainSeparator\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"domainSeparator()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getContextFuncs\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getContextFuncs(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getContextInfo\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getContextInfo(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupInfo\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupInfo(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupRoles\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupRoles(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRealmContexts\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRealmContexts(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRealmInfo\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRealmInfo(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleAccounts\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleAccounts(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleInfo\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleInfo(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantContextRole\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantContextRole(bytes32,bytes4,bytes32)\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantRoleAccount\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantRoleAccount(bytes32,address)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasAccess\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasAccess(bytes32,address,bytes4)\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasContextRole\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasContextRole(bytes32,bytes32,bytes4)\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasGroupRole\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasGroupRole(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRealmContext\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRealmContext(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRoleAccount\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRoleAccount(bytes32,address)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize(string,string,string,address)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionEnabled\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionEnabled(bytes32,bytes4)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionExists\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextFunctionExists(bytes32,bytes4)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextSafeMode\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextSafeMode(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextUpgradable\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isContextUpgradable(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isGroupExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAdminRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAdminRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetAdminRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetAdminRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetGroup\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetGroup(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetManagerRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetManagerRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetRealm\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyAssetRealm(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyCommunityDaoRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDaoGroup\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyDaoGroup(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralGroup\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralGroup(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralRealm\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelyGeneralRealm(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelySystemAdminRole\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isLivelySystemAdminRole(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmUpgradable\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRealmUpgradable(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleEnabled\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleEnabled(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleExists\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRoleExists(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isSafeMode\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isSafeMode()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isUpgradable\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isUpgradable()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"localAdmin\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"localAdmin()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerContext\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      IContextManagement.RequestContextStruct,\n      IContextManagement.RequestRegisterContextStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      IContextManagement.RequestContextStruct,\n      IContextManagement.RequestRegisterContextStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerGroup\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerGroup(string,bool)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerPredictContext\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      IContextManagement.RequestPredictContextStruct,\n      IContextManagement.RequestRegisterContextStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      IContextManagement.RequestPredictContextStruct,\n      IContextManagement.RequestRegisterContextStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerRealm\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<boolean>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerRealm(string,bool,bool)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<boolean>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerRole\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerRole(string,bytes32,bool)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"removeContextFunc\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"removeContextFunc(bytes32,bytes4)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeContextRole\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeContextRole(bytes32,bytes4,bytes32)\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeRoleAccount\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeRoleAccount(bytes32,address)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContextRealm\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContextRealm(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContextStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContextStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setGroupStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setGroupStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setLocalAdmin\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setLocalAdmin(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmUpgradeStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRealmUpgradeStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRoleGroup\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRoleGroup(bytes32,bytes32)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRoleStatus\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRoleStatus(bytes32,bool)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeMode\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeMode(bool)\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setUpgradeStatus\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setUpgradeStatus(bool)\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"subjectAddress\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"subjectAddress()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface(bytes4)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateContext\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      IContextManagement.RequestContextStruct,\n      IContextManagement.RequestUpdateContextStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\",\n    values: [\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BytesLike>,\n      IContextManagement.RequestContextStruct,\n      IContextManagement.RequestUpdateContextStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo(address,bytes,bool)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"accessControlManager\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"accessControlManager()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"addContextFuncRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"addContextFuncRole(bytes32,bytes4,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchGrantRoleAccount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchGrantRoleAccount((bytes32,address)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchRegisterRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchRegisterRole((bytes32,string,bool)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchRevokeRoleAccount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchRevokeRoleAccount((bytes32,address)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractContext()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractName\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractName()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractRealm()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"domainSeparator\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"domainSeparator()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getContextFuncs\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getContextFuncs(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getContextInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getContextInfo(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupInfo(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupRoles\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupRoles(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRealmContexts\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRealmContexts(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRealmInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRealmInfo(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleAccounts\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleAccounts(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleInfo(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"grantContextRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"grantContextRole(bytes32,bytes4,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"grantRoleAccount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"grantRoleAccount(bytes32,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"hasAccess\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasAccess(bytes32,address,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasContextRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasContextRole(bytes32,bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasGroupRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasGroupRole(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasRealmContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasRealmContext(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasRoleAccount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"hasRoleAccount(bytes32,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"initVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"initVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"initialize(string,string,string,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionEnabled(bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextFunctionExists(bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextSafeMode\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextSafeMode(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isContextUpgradable(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isGroupExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAdminRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetAdminRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetGroup(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetManagerRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetManagerRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyAssetRealm(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoExecutorRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyCommunityDaoRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDaoGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyDaoGroup(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralGroup(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelyGeneralRealm(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelySystemAdminRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isLivelySystemAdminRole(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRealmUpgradable(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleEnabled(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRoleExists(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"isSafeMode\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isSafeMode()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isUpgradable()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"localAdmin\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"localAdmin()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerGroup(string,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerPredictContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerRealm(string,bool,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerRole(string,bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"removeContextFunc\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"removeContextFunc(bytes32,bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"revokeContextRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"revokeContextRole(bytes32,bytes4,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"revokeRoleAccount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"revokeRoleAccount(bytes32,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContextRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContextRealm(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContextStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContextStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setGroupStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setGroupStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setLocalAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setLocalAdmin(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmUpgradeStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRealmUpgradeStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRoleGroup\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRoleGroup(bytes32,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRoleStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRoleStatus(bytes32,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeMode\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeMode(bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setUpgradeStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setUpgradeStatus(bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"subjectAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"subjectAddress()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface(bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"upgradeTo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"upgradeTo(address,bytes,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance(address)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"ContextFuncRemoved(bytes32,address,bytes4,bytes32)\": EventFragment;\n    \"ContextFuncRoleAdded(bytes32,bytes32,address,bytes4,bytes32)\": EventFragment;\n    \"ContextRealmChanged(bytes32,address,bytes32,bytes32)\": EventFragment;\n    \"ContextRegistered(bytes32,address,address,address,bytes32)\": EventFragment;\n    \"ContextRoleGranted(bytes32,bytes32,address,bytes4,bytes32)\": EventFragment;\n    \"ContextRoleRevoked(bytes32,bytes32,address,bytes4,bytes32)\": EventFragment;\n    \"ContextStatusChanged(bytes32,address,bytes32,bool)\": EventFragment;\n    \"ContextUpdated(bytes32,address,address,bytes32)\": EventFragment;\n    \"GroupRegistered(bytes32,address,string,bool)\": EventFragment;\n    \"GroupStatusChanged(bytes32,address,bool)\": EventFragment;\n    \"Initialized(address,address,address,string,string,bytes32,uint16)\": EventFragment;\n    \"LocalAdminChanged(address,address,address)\": EventFragment;\n    \"PredictContextRegistered(bytes32,address,address,address,bytes32,bytes32)\": EventFragment;\n    \"RealmRegistered(bytes32,address,string,bool,bool)\": EventFragment;\n    \"RealmStatusChanged(bytes32,address,bool)\": EventFragment;\n    \"RealmUpgradeStatusChanged(bytes32,address,bool)\": EventFragment;\n    \"RoleAccountGranted(address,bytes32,address)\": EventFragment;\n    \"RoleAccountRevoked(address,bytes32,address)\": EventFragment;\n    \"RoleGroupChanged(address,bytes32,bytes32,bytes32)\": EventFragment;\n    \"RoleRegistered(address,bytes32,string,bytes32,bool)\": EventFragment;\n    \"RoleStatusChanged(address,bytes32,bytes32,bool)\": EventFragment;\n    \"SafeModeChanged(address,address,bytes32,bool)\": EventFragment;\n    \"UpgradeStatusChanged(address,address,bytes32,bool)\": EventFragment;\n    \"Upgraded(address,address,address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"ContextFuncRemoved\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextFuncRemoved(bytes32,address,bytes4,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ContextFuncRoleAdded\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextFuncRoleAdded(bytes32,bytes32,address,bytes4,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ContextRealmChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextRealmChanged(bytes32,address,bytes32,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ContextRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextRegistered(bytes32,address,address,address,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ContextRoleGranted\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextRoleGranted(bytes32,bytes32,address,bytes4,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ContextRoleRevoked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextRoleRevoked(bytes32,bytes32,address,bytes4,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ContextStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextStatusChanged(bytes32,address,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ContextUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ContextUpdated(bytes32,address,address,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"GroupRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"GroupRegistered(bytes32,address,string,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"GroupStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"GroupStatusChanged(bytes32,address,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Initialized\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Initialized(address,address,address,string,string,bytes32,uint16)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"LocalAdminChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"LocalAdminChanged(address,address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PredictContextRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"PredictContextRegistered(bytes32,address,address,address,bytes32,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmRegistered(bytes32,address,string,bool,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmStatusChanged(bytes32,address,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RealmUpgradeStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RealmUpgradeStatusChanged(bytes32,address,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleAccountGranted\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RoleAccountGranted(address,bytes32,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleAccountRevoked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RoleAccountRevoked(address,bytes32,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleGroupChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RoleGroupChanged(address,bytes32,bytes32,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RoleRegistered(address,bytes32,string,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"RoleStatusChanged(address,bytes32,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"SafeModeChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"SafeModeChanged(address,address,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"UpgradeStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"UpgradeStatusChanged(address,address,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Upgraded\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Upgraded(address,address,address)\"\n  ): EventFragment;\n}\n\nexport interface ContextFuncRemovedEventObject {\n  context: string;\n  sender: string;\n  functionSelector: string;\n  realm: string;\n}\nexport type ContextFuncRemovedEvent = TypedEvent<\n  [string, string, string, string],\n  ContextFuncRemovedEventObject\n>;\n\nexport type ContextFuncRemovedEventFilter =\n  TypedEventFilter<ContextFuncRemovedEvent>;\n\nexport interface ContextFuncRoleAddedEventObject {\n  context: string;\n  role: string;\n  sender: string;\n  functionSelector: string;\n  realm: string;\n}\nexport type ContextFuncRoleAddedEvent = TypedEvent<\n  [string, string, string, string, string],\n  ContextFuncRoleAddedEventObject\n>;\n\nexport type ContextFuncRoleAddedEventFilter =\n  TypedEventFilter<ContextFuncRoleAddedEvent>;\n\nexport interface ContextRealmChangedEventObject {\n  context: string;\n  sender: string;\n  realm: string;\n  oldRealm: string;\n}\nexport type ContextRealmChangedEvent = TypedEvent<\n  [string, string, string, string],\n  ContextRealmChangedEventObject\n>;\n\nexport type ContextRealmChangedEventFilter =\n  TypedEventFilter<ContextRealmChangedEvent>;\n\nexport interface ContextRegisteredEventObject {\n  context: string;\n  contractId: string;\n  signer: string;\n  sender: string;\n  realm: string;\n}\nexport type ContextRegisteredEvent = TypedEvent<\n  [string, string, string, string, string],\n  ContextRegisteredEventObject\n>;\n\nexport type ContextRegisteredEventFilter =\n  TypedEventFilter<ContextRegisteredEvent>;\n\nexport interface ContextRoleGrantedEventObject {\n  context: string;\n  role: string;\n  sender: string;\n  functionSelector: string;\n  realm: string;\n}\nexport type ContextRoleGrantedEvent = TypedEvent<\n  [string, string, string, string, string],\n  ContextRoleGrantedEventObject\n>;\n\nexport type ContextRoleGrantedEventFilter =\n  TypedEventFilter<ContextRoleGrantedEvent>;\n\nexport interface ContextRoleRevokedEventObject {\n  context: string;\n  role: string;\n  sender: string;\n  functionSelector: string;\n  realm: string;\n}\nexport type ContextRoleRevokedEvent = TypedEvent<\n  [string, string, string, string, string],\n  ContextRoleRevokedEventObject\n>;\n\nexport type ContextRoleRevokedEventFilter =\n  TypedEventFilter<ContextRoleRevokedEvent>;\n\nexport interface ContextStatusChangedEventObject {\n  context: string;\n  sender: string;\n  realm: string;\n  status: boolean;\n}\nexport type ContextStatusChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  ContextStatusChangedEventObject\n>;\n\nexport type ContextStatusChangedEventFilter =\n  TypedEventFilter<ContextStatusChangedEvent>;\n\nexport interface ContextUpdatedEventObject {\n  context: string;\n  contractId: string;\n  sender: string;\n  realm: string;\n}\nexport type ContextUpdatedEvent = TypedEvent<\n  [string, string, string, string],\n  ContextUpdatedEventObject\n>;\n\nexport type ContextUpdatedEventFilter = TypedEventFilter<ContextUpdatedEvent>;\n\nexport interface GroupRegisteredEventObject {\n  group: string;\n  sender: string;\n  name: string;\n  status: boolean;\n}\nexport type GroupRegisteredEvent = TypedEvent<\n  [string, string, string, boolean],\n  GroupRegisteredEventObject\n>;\n\nexport type GroupRegisteredEventFilter = TypedEventFilter<GroupRegisteredEvent>;\n\nexport interface GroupStatusChangedEventObject {\n  group: string;\n  sender: string;\n  status: boolean;\n}\nexport type GroupStatusChangedEvent = TypedEvent<\n  [string, string, boolean],\n  GroupStatusChangedEventObject\n>;\n\nexport type GroupStatusChangedEventFilter =\n  TypedEventFilter<GroupStatusChangedEvent>;\n\nexport interface InitializedEventObject {\n  sender: string;\n  proxy: string;\n  subject: string;\n  name: string;\n  version: string;\n  realm: string;\n  initCount: number;\n}\nexport type InitializedEvent = TypedEvent<\n  [string, string, string, string, string, string, number],\n  InitializedEventObject\n>;\n\nexport type InitializedEventFilter = TypedEventFilter<InitializedEvent>;\n\nexport interface LocalAdminChangedEventObject {\n  sender: string;\n  proxy: string;\n  newAdmin: string;\n}\nexport type LocalAdminChangedEvent = TypedEvent<\n  [string, string, string],\n  LocalAdminChangedEventObject\n>;\n\nexport type LocalAdminChangedEventFilter =\n  TypedEventFilter<LocalAdminChangedEvent>;\n\nexport interface PredictContextRegisteredEventObject {\n  context: string;\n  base: string;\n  signer: string;\n  sender: string;\n  realm: string;\n  bytesHash: string;\n}\nexport type PredictContextRegisteredEvent = TypedEvent<\n  [string, string, string, string, string, string],\n  PredictContextRegisteredEventObject\n>;\n\nexport type PredictContextRegisteredEventFilter =\n  TypedEventFilter<PredictContextRegisteredEvent>;\n\nexport interface RealmRegisteredEventObject {\n  realm: string;\n  sender: string;\n  name: string;\n  status: boolean;\n  isUpgradable: boolean;\n}\nexport type RealmRegisteredEvent = TypedEvent<\n  [string, string, string, boolean, boolean],\n  RealmRegisteredEventObject\n>;\n\nexport type RealmRegisteredEventFilter = TypedEventFilter<RealmRegisteredEvent>;\n\nexport interface RealmStatusChangedEventObject {\n  realm: string;\n  sender: string;\n  status: boolean;\n}\nexport type RealmStatusChangedEvent = TypedEvent<\n  [string, string, boolean],\n  RealmStatusChangedEventObject\n>;\n\nexport type RealmStatusChangedEventFilter =\n  TypedEventFilter<RealmStatusChangedEvent>;\n\nexport interface RealmUpgradeStatusChangedEventObject {\n  realm: string;\n  sender: string;\n  status: boolean;\n}\nexport type RealmUpgradeStatusChangedEvent = TypedEvent<\n  [string, string, boolean],\n  RealmUpgradeStatusChangedEventObject\n>;\n\nexport type RealmUpgradeStatusChangedEventFilter =\n  TypedEventFilter<RealmUpgradeStatusChangedEvent>;\n\nexport interface RoleAccountGrantedEventObject {\n  sender: string;\n  role: string;\n  account: string;\n}\nexport type RoleAccountGrantedEvent = TypedEvent<\n  [string, string, string],\n  RoleAccountGrantedEventObject\n>;\n\nexport type RoleAccountGrantedEventFilter =\n  TypedEventFilter<RoleAccountGrantedEvent>;\n\nexport interface RoleAccountRevokedEventObject {\n  sender: string;\n  role: string;\n  account: string;\n}\nexport type RoleAccountRevokedEvent = TypedEvent<\n  [string, string, string],\n  RoleAccountRevokedEventObject\n>;\n\nexport type RoleAccountRevokedEventFilter =\n  TypedEventFilter<RoleAccountRevokedEvent>;\n\nexport interface RoleGroupChangedEventObject {\n  sender: string;\n  role: string;\n  newGroup: string;\n  oldGroup: string;\n}\nexport type RoleGroupChangedEvent = TypedEvent<\n  [string, string, string, string],\n  RoleGroupChangedEventObject\n>;\n\nexport type RoleGroupChangedEventFilter =\n  TypedEventFilter<RoleGroupChangedEvent>;\n\nexport interface RoleRegisteredEventObject {\n  sender: string;\n  role: string;\n  name: string;\n  group: string;\n  isEnabled: boolean;\n}\nexport type RoleRegisteredEvent = TypedEvent<\n  [string, string, string, string, boolean],\n  RoleRegisteredEventObject\n>;\n\nexport type RoleRegisteredEventFilter = TypedEventFilter<RoleRegisteredEvent>;\n\nexport interface RoleStatusChangedEventObject {\n  sender: string;\n  role: string;\n  group: string;\n  status: boolean;\n}\nexport type RoleStatusChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  RoleStatusChangedEventObject\n>;\n\nexport type RoleStatusChangedEventFilter =\n  TypedEventFilter<RoleStatusChangedEvent>;\n\nexport interface SafeModeChangedEventObject {\n  sender: string;\n  proxy: string;\n  realm: string;\n  status: boolean;\n}\nexport type SafeModeChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  SafeModeChangedEventObject\n>;\n\nexport type SafeModeChangedEventFilter = TypedEventFilter<SafeModeChangedEvent>;\n\nexport interface UpgradeStatusChangedEventObject {\n  sender: string;\n  proxy: string;\n  realm: string;\n  status: boolean;\n}\nexport type UpgradeStatusChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  UpgradeStatusChangedEventObject\n>;\n\nexport type UpgradeStatusChangedEventFilter =\n  TypedEventFilter<UpgradeStatusChangedEvent>;\n\nexport interface UpgradedEventObject {\n  sender: string;\n  proxy: string;\n  newImplementation: string;\n}\nexport type UpgradedEvent = TypedEvent<\n  [string, string, string],\n  UpgradedEventObject\n>;\n\nexport type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;\n\nexport interface AccessControlManager extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: AccessControlManagerInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    accessControlManager(overrides?: CallOverrides): Promise<[string]>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    addContextFuncRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"addContextFuncRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchGrantRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchGrantRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchRegisterRole(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchRegisterRole((bytes32,string,bool)[])\"(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchRevokeRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchRevokeRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    contractContext(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractName(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractRealm(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<[string]>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    getContextFuncs(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    \"getContextFuncs(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    getContextInfo(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[IContextManagement.ResponseContextStructOutput]>;\n\n    \"getContextInfo(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[IContextManagement.ResponseContextStructOutput]>;\n\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    getRoleAccounts(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    \"getRoleAccounts(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string[]]>;\n\n    getRoleInfo(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, string, boolean]>;\n\n    \"getRoleInfo(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, string, boolean]>;\n\n    grantContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"grantContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    grantRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"grantRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    hasContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasContextRole(bytes32,bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    hasRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"hasRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    initVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<[number]>;\n\n    initialize(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"initialize(string,string,string,address)\"(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    localAdmin(overrides?: CallOverrides): Promise<[string]>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<[string]>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    registerContext(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    registerPredictContext(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    registerRole(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerRole(string,bytes32,bool)\"(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    removeContextFunc(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"removeContextFunc(bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    revokeContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"revokeContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    revokeRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"revokeRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setContextRealm(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setContextRealm(bytes32,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setContextStatus(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setContextStatus(bytes32,bool)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setRoleGroup(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setRoleGroup(bytes32,bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setRoleStatus(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setRoleStatus(bytes32,bool)\"(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<[string]>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    updateContext(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\"(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  accessControlManager(overrides?: CallOverrides): Promise<string>;\n\n  \"accessControlManager()\"(overrides?: CallOverrides): Promise<string>;\n\n  addContextFuncRole(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"addContextFuncRole(bytes32,bytes4,bytes32)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchGrantRoleAccount(\n    requests: IRoleManagement.UpdateRoleRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchGrantRoleAccount((bytes32,address)[])\"(\n    requests: IRoleManagement.UpdateRoleRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchRegisterRole(\n    requests: IRoleManagement.RegiterRoleRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchRegisterRole((bytes32,string,bool)[])\"(\n    requests: IRoleManagement.RegiterRoleRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchRevokeRoleAccount(\n    requests: IRoleManagement.UpdateRoleRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchRevokeRoleAccount((bytes32,address)[])\"(\n    requests: IRoleManagement.UpdateRoleRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  contractContext(overrides?: CallOverrides): Promise<string>;\n\n  \"contractContext()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractName(overrides?: CallOverrides): Promise<string>;\n\n  \"contractName()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractRealm(overrides?: CallOverrides): Promise<string>;\n\n  \"contractRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<string>;\n\n  \"contractVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n  domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n  \"domainSeparator()\"(overrides?: CallOverrides): Promise<string>;\n\n  getContextFuncs(\n    ctx: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  \"getContextFuncs(bytes32)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  getContextInfo(\n    ctx: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<IContextManagement.ResponseContextStructOutput>;\n\n  \"getContextInfo(bytes32)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<IContextManagement.ResponseContextStructOutput>;\n\n  getGroupInfo(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean]>;\n\n  \"getGroupInfo(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean]>;\n\n  getGroupRoles(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  \"getGroupRoles(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  getRealmContexts(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  \"getRealmContexts(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  getRealmInfo(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean, boolean]>;\n\n  \"getRealmInfo(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, boolean, boolean]>;\n\n  getRoleAccounts(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  \"getRoleAccounts(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string[]>;\n\n  getRoleInfo(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, string, boolean]>;\n\n  \"getRoleInfo(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<[string, string, boolean]>;\n\n  grantContextRole(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"grantContextRole(bytes32,bytes4,bytes32)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  grantRoleAccount(\n    role: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"grantRoleAccount(bytes32,address)\"(\n    role: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  hasAccess(\n    context: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasAccess(bytes32,address,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  hasContextRole(\n    ctx: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasContextRole(bytes32,bytes32,bytes4)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  hasGroupRole(\n    group: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasGroupRole(bytes32,bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  hasRealmContext(\n    realm: PromiseOrValue<BytesLike>,\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasRealmContext(bytes32,bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  hasRoleAccount(\n    role: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"hasRoleAccount(bytes32,address)\"(\n    role: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  initVersion(overrides?: CallOverrides): Promise<number>;\n\n  \"initVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n  initialize(\n    domainName: PromiseOrValue<string>,\n    domainVersion: PromiseOrValue<string>,\n    domainRealm: PromiseOrValue<string>,\n    accessControlManager: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"initialize(string,string,string,address)\"(\n    domainName: PromiseOrValue<string>,\n    domainVersion: PromiseOrValue<string>,\n    domainRealm: PromiseOrValue<string>,\n    accessControlManager: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  isContextEnabled(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextEnabled(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextExists(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextExists(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextFunctionEnabled(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextFunctionEnabled(bytes32,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextFunctionExists(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextFunctionExists(bytes32,bytes4)\"(\n    context: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextSafeMode(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextSafeMode(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isContextUpgradable(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isContextUpgradable(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isGroupEnabled(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isGroupEnabled(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isGroupExists(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isGroupExists(bytes32)\"(\n    group: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAdminRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAdminRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetAdminRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetAdminRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetGroup(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetGroup(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetManagerRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetManagerRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyAssetRealm(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyAssetRealm(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyCommunityDaoExecutorRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyCommunityDaoExecutorRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyCommunityDaoRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyCommunityDaoRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyDaoGroup(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyDaoGroup(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyGeneralGroup(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyGeneralGroup(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelyGeneralRealm(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelyGeneralRealm(bytes32)\"(\n    context: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isLivelySystemAdminRole(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isLivelySystemAdminRole(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmEnabled(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmEnabled(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmExists(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmExists(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRealmUpgradable(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRealmUpgradable(bytes32)\"(\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRoleEnabled(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRoleEnabled(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isRoleExists(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isRoleExists(bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  isUpgradable(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isUpgradable()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  localAdmin(overrides?: CallOverrides): Promise<string>;\n\n  \"localAdmin()\"(overrides?: CallOverrides): Promise<string>;\n\n  proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n  \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n  registerContext(\n    signature: PromiseOrValue<BytesLike>,\n    rc: IContextManagement.RequestContextStruct,\n    rrc: IContextManagement.RequestRegisterContextStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n    signature: PromiseOrValue<BytesLike>,\n    rc: IContextManagement.RequestContextStruct,\n    rrc: IContextManagement.RequestRegisterContextStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  registerGroup(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerGroup(string,bool)\"(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  registerPredictContext(\n    signature: PromiseOrValue<BytesLike>,\n    rpc: IContextManagement.RequestPredictContextStruct,\n    rrc: IContextManagement.RequestRegisterContextStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n    signature: PromiseOrValue<BytesLike>,\n    rpc: IContextManagement.RequestPredictContextStruct,\n    rrc: IContextManagement.RequestRegisterContextStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  registerRealm(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    isUpgradable: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerRealm(string,bool,bool)\"(\n    name: PromiseOrValue<string>,\n    status: PromiseOrValue<boolean>,\n    isUpgradable: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  registerRole(\n    name: PromiseOrValue<string>,\n    group: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerRole(string,bytes32,bool)\"(\n    name: PromiseOrValue<string>,\n    group: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  removeContextFunc(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"removeContextFunc(bytes32,bytes4)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  revokeContextRole(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"revokeContextRole(bytes32,bytes4,bytes32)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    functionSelector: PromiseOrValue<BytesLike>,\n    role: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  revokeRoleAccount(\n    role: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"revokeRoleAccount(bytes32,address)\"(\n    role: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setContextRealm(\n    ctx: PromiseOrValue<BytesLike>,\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setContextRealm(bytes32,bytes32)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    realm: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setContextStatus(\n    ctx: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setContextStatus(bytes32,bool)\"(\n    ctx: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setGroupStatus(\n    group: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setGroupStatus(bytes32,bool)\"(\n    group: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setLocalAdmin(\n    newLocalAdmin: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setLocalAdmin(address)\"(\n    newLocalAdmin: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setRealmStatus(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setRealmStatus(bytes32,bool)\"(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setRealmUpgradeStatus(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setRealmUpgradeStatus(bytes32,bool)\"(\n    realm: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setRoleGroup(\n    role: PromiseOrValue<BytesLike>,\n    group: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setRoleGroup(bytes32,bytes32)\"(\n    role: PromiseOrValue<BytesLike>,\n    group: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setRoleStatus(\n    role: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setRoleStatus(bytes32,bool)\"(\n    role: PromiseOrValue<BytesLike>,\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setSafeMode(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setSafeMode(bool)\"(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setUpgradeStatus(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setUpgradeStatus(bool)\"(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  subjectAddress(overrides?: CallOverrides): Promise<string>;\n\n  \"subjectAddress()\"(overrides?: CallOverrides): Promise<string>;\n\n  supportsInterface(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"supportsInterface(bytes4)\"(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  updateContext(\n    ctx: PromiseOrValue<BytesLike>,\n    signature: PromiseOrValue<BytesLike>,\n    rc: IContextManagement.RequestContextStruct,\n    rcr: IContextManagement.RequestUpdateContextStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\"(\n    ctx: PromiseOrValue<BytesLike>,\n    signature: PromiseOrValue<BytesLike>,\n    rc: IContextManagement.RequestContextStruct,\n    rcr: IContextManagement.RequestUpdateContextStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  upgradeTo(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    forceCall: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"upgradeTo(address,bytes,bool)\"(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    forceCall: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  withdrawBalance(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"withdrawBalance(address)\"(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    accessControlManager(overrides?: CallOverrides): Promise<string>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<string>;\n\n    addContextFuncRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"addContextFuncRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    batchGrantRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"batchGrantRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    batchRegisterRole(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"batchRegisterRole((bytes32,string,bool)[])\"(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    batchRevokeRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"batchRevokeRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    contractContext(overrides?: CallOverrides): Promise<string>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractName(overrides?: CallOverrides): Promise<string>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractRealm(overrides?: CallOverrides): Promise<string>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<string>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<string>;\n\n    getContextFuncs(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"getContextFuncs(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    getContextInfo(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<IContextManagement.ResponseContextStructOutput>;\n\n    \"getContextInfo(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<IContextManagement.ResponseContextStructOutput>;\n\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean]>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, boolean, boolean]>;\n\n    getRoleAccounts(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"getRoleAccounts(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    getRoleInfo(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, string, boolean]>;\n\n    \"getRoleInfo(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string, string, boolean]>;\n\n    grantContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"grantContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    grantRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"grantRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    hasContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasContextRole(bytes32,bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    hasRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"hasRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    initVersion(overrides?: CallOverrides): Promise<number>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n    initialize(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"initialize(string,string,string,address)\"(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    localAdmin(overrides?: CallOverrides): Promise<string>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<string>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n    registerContext(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    registerPredictContext(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    registerRole(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"registerRole(string,bytes32,bool)\"(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    removeContextFunc(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"removeContextFunc(bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    revokeContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"revokeContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    revokeRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"revokeRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setContextRealm(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setContextRealm(bytes32,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setContextStatus(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setContextStatus(bytes32,bool)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setRoleGroup(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setRoleGroup(bytes32,bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setRoleStatus(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setRoleStatus(bytes32,bool)\"(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<string>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<string>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    updateContext(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\"(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"ContextFuncRemoved(bytes32,address,bytes4,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextFuncRemovedEventFilter;\n    ContextFuncRemoved(\n      context?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextFuncRemovedEventFilter;\n\n    \"ContextFuncRoleAdded(bytes32,bytes32,address,bytes4,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextFuncRoleAddedEventFilter;\n    ContextFuncRoleAdded(\n      context?: PromiseOrValue<BytesLike> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextFuncRoleAddedEventFilter;\n\n    \"ContextRealmChanged(bytes32,address,bytes32,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      oldRealm?: null\n    ): ContextRealmChangedEventFilter;\n    ContextRealmChanged(\n      context?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      oldRealm?: null\n    ): ContextRealmChangedEventFilter;\n\n    \"ContextRegistered(bytes32,address,address,address,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      contractId?: PromiseOrValue<string> | null,\n      signer?: PromiseOrValue<string> | null,\n      sender?: null,\n      realm?: null\n    ): ContextRegisteredEventFilter;\n    ContextRegistered(\n      context?: PromiseOrValue<BytesLike> | null,\n      contractId?: PromiseOrValue<string> | null,\n      signer?: PromiseOrValue<string> | null,\n      sender?: null,\n      realm?: null\n    ): ContextRegisteredEventFilter;\n\n    \"ContextRoleGranted(bytes32,bytes32,address,bytes4,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextRoleGrantedEventFilter;\n    ContextRoleGranted(\n      context?: PromiseOrValue<BytesLike> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextRoleGrantedEventFilter;\n\n    \"ContextRoleRevoked(bytes32,bytes32,address,bytes4,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextRoleRevokedEventFilter;\n    ContextRoleRevoked(\n      context?: PromiseOrValue<BytesLike> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      functionSelector?: null,\n      realm?: null\n    ): ContextRoleRevokedEventFilter;\n\n    \"ContextStatusChanged(bytes32,address,bytes32,bool)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): ContextStatusChangedEventFilter;\n    ContextStatusChanged(\n      context?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): ContextStatusChangedEventFilter;\n\n    \"ContextUpdated(bytes32,address,address,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      contractId?: PromiseOrValue<string> | null,\n      sender?: PromiseOrValue<string> | null,\n      realm?: null\n    ): ContextUpdatedEventFilter;\n    ContextUpdated(\n      context?: PromiseOrValue<BytesLike> | null,\n      contractId?: PromiseOrValue<string> | null,\n      sender?: PromiseOrValue<string> | null,\n      realm?: null\n    ): ContextUpdatedEventFilter;\n\n    \"GroupRegistered(bytes32,address,string,bool)\"(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null\n    ): GroupRegisteredEventFilter;\n    GroupRegistered(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null\n    ): GroupRegisteredEventFilter;\n\n    \"GroupStatusChanged(bytes32,address,bool)\"(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): GroupStatusChangedEventFilter;\n    GroupStatusChanged(\n      group?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): GroupStatusChangedEventFilter;\n\n    \"Initialized(address,address,address,string,string,bytes32,uint16)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      subject?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null,\n      initCount?: null\n    ): InitializedEventFilter;\n    Initialized(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      subject?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null,\n      initCount?: null\n    ): InitializedEventFilter;\n\n    \"LocalAdminChanged(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newAdmin?: null\n    ): LocalAdminChangedEventFilter;\n    LocalAdminChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newAdmin?: null\n    ): LocalAdminChangedEventFilter;\n\n    \"PredictContextRegistered(bytes32,address,address,address,bytes32,bytes32)\"(\n      context?: PromiseOrValue<BytesLike> | null,\n      base?: PromiseOrValue<string> | null,\n      signer?: PromiseOrValue<string> | null,\n      sender?: null,\n      realm?: null,\n      bytesHash?: null\n    ): PredictContextRegisteredEventFilter;\n    PredictContextRegistered(\n      context?: PromiseOrValue<BytesLike> | null,\n      base?: PromiseOrValue<string> | null,\n      signer?: PromiseOrValue<string> | null,\n      sender?: null,\n      realm?: null,\n      bytesHash?: null\n    ): PredictContextRegisteredEventFilter;\n\n    \"RealmRegistered(bytes32,address,string,bool,bool)\"(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null,\n      isUpgradable?: null\n    ): RealmRegisteredEventFilter;\n    RealmRegistered(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      name?: null,\n      status?: null,\n      isUpgradable?: null\n    ): RealmRegisteredEventFilter;\n\n    \"RealmStatusChanged(bytes32,address,bool)\"(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmStatusChangedEventFilter;\n    RealmStatusChanged(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmStatusChangedEventFilter;\n\n    \"RealmUpgradeStatusChanged(bytes32,address,bool)\"(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmUpgradeStatusChangedEventFilter;\n    RealmUpgradeStatusChanged(\n      realm?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      status?: null\n    ): RealmUpgradeStatusChangedEventFilter;\n\n    \"RoleAccountGranted(address,bytes32,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      account?: PromiseOrValue<string> | null\n    ): RoleAccountGrantedEventFilter;\n    RoleAccountGranted(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      account?: PromiseOrValue<string> | null\n    ): RoleAccountGrantedEventFilter;\n\n    \"RoleAccountRevoked(address,bytes32,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      account?: PromiseOrValue<string> | null\n    ): RoleAccountRevokedEventFilter;\n    RoleAccountRevoked(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      account?: PromiseOrValue<string> | null\n    ): RoleAccountRevokedEventFilter;\n\n    \"RoleGroupChanged(address,bytes32,bytes32,bytes32)\"(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      newGroup?: PromiseOrValue<BytesLike> | null,\n      oldGroup?: null\n    ): RoleGroupChangedEventFilter;\n    RoleGroupChanged(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      newGroup?: PromiseOrValue<BytesLike> | null,\n      oldGroup?: null\n    ): RoleGroupChangedEventFilter;\n\n    \"RoleRegistered(address,bytes32,string,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      name?: PromiseOrValue<string> | null,\n      group?: null,\n      isEnabled?: null\n    ): RoleRegisteredEventFilter;\n    RoleRegistered(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      name?: PromiseOrValue<string> | null,\n      group?: null,\n      isEnabled?: null\n    ): RoleRegisteredEventFilter;\n\n    \"RoleStatusChanged(address,bytes32,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      group?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): RoleStatusChangedEventFilter;\n    RoleStatusChanged(\n      sender?: PromiseOrValue<string> | null,\n      role?: PromiseOrValue<BytesLike> | null,\n      group?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): RoleStatusChangedEventFilter;\n\n    \"SafeModeChanged(address,address,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): SafeModeChangedEventFilter;\n    SafeModeChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): SafeModeChangedEventFilter;\n\n    \"UpgradeStatusChanged(address,address,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): UpgradeStatusChangedEventFilter;\n    UpgradeStatusChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): UpgradeStatusChangedEventFilter;\n\n    \"Upgraded(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n    Upgraded(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n  };\n\n  estimateGas: {\n    accessControlManager(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    addContextFuncRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"addContextFuncRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchGrantRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchGrantRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchRegisterRole(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchRegisterRole((bytes32,string,bool)[])\"(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchRevokeRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchRevokeRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    contractContext(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractName(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractRealm(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getContextFuncs(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getContextFuncs(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getContextInfo(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getContextInfo(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleAccounts(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getRoleAccounts(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleInfo(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getRoleInfo(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    grantContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"grantContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    grantRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"grantRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    hasContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasContextRole(bytes32,bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    hasRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"hasRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    initVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    initialize(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"initialize(string,string,string,address)\"(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    localAdmin(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    registerContext(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    registerPredictContext(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    registerRole(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerRole(string,bytes32,bool)\"(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    removeContextFunc(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"removeContextFunc(bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    revokeContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"revokeContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    revokeRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"revokeRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setContextRealm(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setContextRealm(bytes32,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setContextStatus(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setContextStatus(bytes32,bool)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setRoleGroup(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setRoleGroup(bytes32,bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setRoleStatus(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setRoleStatus(bytes32,bool)\"(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    updateContext(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\"(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    accessControlManager(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"accessControlManager()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    addContextFuncRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"addContextFuncRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchGrantRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchGrantRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchRegisterRole(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchRegisterRole((bytes32,string,bool)[])\"(\n      requests: IRoleManagement.RegiterRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchRevokeRoleAccount(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchRevokeRoleAccount((bytes32,address)[])\"(\n      requests: IRoleManagement.UpdateRoleRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    contractContext(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractContext()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    contractName(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractRealm(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractVersion()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"domainSeparator()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getContextFuncs(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getContextFuncs(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getContextInfo(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getContextInfo(bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getGroupInfo(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getGroupInfo(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getGroupRoles(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getGroupRoles(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRealmContexts(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getRealmContexts(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRealmInfo(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getRealmInfo(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleAccounts(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getRoleAccounts(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleInfo(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getRoleInfo(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    grantContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"grantContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    grantRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"grantRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    hasAccess(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasAccess(bytes32,address,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    hasContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasContextRole(bytes32,bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    hasGroupRole(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasGroupRole(bytes32,bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    hasRealmContext(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasRealmContext(bytes32,bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    hasRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"hasRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    initVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    initialize(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"initialize(string,string,string,address)\"(\n      domainName: PromiseOrValue<string>,\n      domainVersion: PromiseOrValue<string>,\n      domainRealm: PromiseOrValue<string>,\n      accessControlManager: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    isContextEnabled(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextEnabled(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextExists(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextExists(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextFunctionEnabled(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextFunctionEnabled(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextFunctionExists(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextFunctionExists(bytes32,bytes4)\"(\n      context: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextSafeMode(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextSafeMode(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isContextUpgradable(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isContextUpgradable(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isGroupEnabled(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isGroupEnabled(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isGroupExists(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isGroupExists(bytes32)\"(\n      group: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetManagerRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetManagerRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyAssetRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyAssetRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyCommunityDaoExecutorRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyCommunityDaoExecutorRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyCommunityDaoRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyCommunityDaoRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyDaoGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyDaoGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyGeneralGroup(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyGeneralGroup(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelyGeneralRealm(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelyGeneralRealm(bytes32)\"(\n      context: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isLivelySystemAdminRole(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isLivelySystemAdminRole(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmEnabled(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmEnabled(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmExists(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmExists(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRealmUpgradable(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRealmUpgradable(bytes32)\"(\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRoleEnabled(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRoleEnabled(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isRoleExists(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isRoleExists(bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    localAdmin(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    registerContext(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerContext(bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    registerGroup(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerGroup(string,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    registerPredictContext(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerPredictContext(bytes,(bytes32,bytes32,bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],bool)[])\"(\n      signature: PromiseOrValue<BytesLike>,\n      rpc: IContextManagement.RequestPredictContextStruct,\n      rrc: IContextManagement.RequestRegisterContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    registerRealm(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerRealm(string,bool,bool)\"(\n      name: PromiseOrValue<string>,\n      status: PromiseOrValue<boolean>,\n      isUpgradable: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    registerRole(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerRole(string,bytes32,bool)\"(\n      name: PromiseOrValue<string>,\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    removeContextFunc(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"removeContextFunc(bytes32,bytes4)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    revokeContextRole(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"revokeContextRole(bytes32,bytes4,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      functionSelector: PromiseOrValue<BytesLike>,\n      role: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    revokeRoleAccount(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"revokeRoleAccount(bytes32,address)\"(\n      role: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setContextRealm(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setContextRealm(bytes32,bytes32)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      realm: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setContextStatus(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setContextStatus(bytes32,bool)\"(\n      ctx: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setGroupStatus(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setGroupStatus(bytes32,bool)\"(\n      group: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRealmStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setRealmStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRealmUpgradeStatus(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setRealmUpgradeStatus(bytes32,bool)\"(\n      realm: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRoleGroup(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setRoleGroup(bytes32,bytes32)\"(\n      role: PromiseOrValue<BytesLike>,\n      group: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRoleStatus(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setRoleStatus(bytes32,bool)\"(\n      role: PromiseOrValue<BytesLike>,\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"subjectAddress()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    updateContext(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"updateContext(bytes32,bytes,(bytes32,bytes32,bytes32,address,bool),(bytes32,bytes4[],uint8)[])\"(\n      ctx: PromiseOrValue<BytesLike>,\n      signature: PromiseOrValue<BytesLike>,\n      rc: IContextManagement.RequestContextStruct,\n      rcr: IContextManagement.RequestUpdateContextStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}