{"version":3,"file":"IERC20Lock.js","sourceRoot":"","sources":["../../../../../typechain/types/token/lively/IERC20Lock.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport declare namespace IERC20Lock {\n  export type LockTokenRequestStruct = {\n    source: PromiseOrValue<string>;\n    dest: PromiseOrValue<string>;\n    timestamp: PromiseOrValue<BigNumberish>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type LockTokenRequestStructOutput = [\n    string,\n    string,\n    BigNumber,\n    BigNumber\n  ] & { source: string; dest: string; timestamp: BigNumber; amount: BigNumber };\n\n  export type UnLockTokenRequestStruct = {\n    lockId: PromiseOrValue<BytesLike>;\n    account: PromiseOrValue<string>;\n    reason: PromiseOrValue<string>;\n  };\n\n  export type UnLockTokenRequestStructOutput = [string, string, string] & {\n    lockId: string;\n    account: string;\n    reason: string;\n  };\n}\n\nexport interface IERC20LockInterface extends utils.Interface {\n  functions: {\n    \"batchClaimToken(bytes32[])\": FunctionFragment;\n    \"batchLockToken((address,address,uint256,uint256)[])\": FunctionFragment;\n    \"batchUnlockToken((bytes32,address,string)[])\": FunctionFragment;\n    \"claimToken(bytes32)\": FunctionFragment;\n    \"lockBalanceOf(address)\": FunctionFragment;\n    \"lockInfo(bytes32,address)\": FunctionFragment;\n    \"lockToken((address,address,uint256,uint256))\": FunctionFragment;\n    \"totalBalanceOf(address)\": FunctionFragment;\n    \"unlockToken((bytes32,address,string))\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"batchClaimToken\"\n      | \"batchClaimToken(bytes32[])\"\n      | \"batchLockToken\"\n      | \"batchLockToken((address,address,uint256,uint256)[])\"\n      | \"batchUnlockToken\"\n      | \"batchUnlockToken((bytes32,address,string)[])\"\n      | \"claimToken\"\n      | \"claimToken(bytes32)\"\n      | \"lockBalanceOf\"\n      | \"lockBalanceOf(address)\"\n      | \"lockInfo\"\n      | \"lockInfo(bytes32,address)\"\n      | \"lockToken\"\n      | \"lockToken((address,address,uint256,uint256))\"\n      | \"totalBalanceOf\"\n      | \"totalBalanceOf(address)\"\n      | \"unlockToken\"\n      | \"unlockToken((bytes32,address,string))\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"batchClaimToken\",\n    values: [PromiseOrValue<BytesLike>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchClaimToken(bytes32[])\",\n    values: [PromiseOrValue<BytesLike>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchLockToken\",\n    values: [IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchLockToken((address,address,uint256,uint256)[])\",\n    values: [IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchUnlockToken\",\n    values: [IERC20Lock.UnLockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchUnlockToken((bytes32,address,string)[])\",\n    values: [IERC20Lock.UnLockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"claimToken\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"claimToken(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockBalanceOf\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockBalanceOf(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockInfo\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockInfo(bytes32,address)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockToken\",\n    values: [IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockToken((address,address,uint256,uint256))\",\n    values: [IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalBalanceOf\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalBalanceOf(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unlockToken\",\n    values: [IERC20Lock.UnLockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unlockToken((bytes32,address,string))\",\n    values: [IERC20Lock.UnLockTokenRequestStruct]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"batchClaimToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchClaimToken(bytes32[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchLockToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchLockToken((address,address,uint256,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchUnlockToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchUnlockToken((bytes32,address,string)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"claimToken\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"claimToken(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockBalanceOf\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockBalanceOf(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"lockInfo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockInfo(bytes32,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"lockToken\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockToken((address,address,uint256,uint256))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalBalanceOf\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalBalanceOf(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"unlockToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"unlockToken((bytes32,address,string))\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"BatchTokenClaimed(address,uint256)\": EventFragment;\n    \"BatchTokenLocked(address,uint256)\": EventFragment;\n    \"BatchTokenUnlocked(address,uint256)\": EventFragment;\n    \"TokenClaimed(bytes32,address,address,uint256)\": EventFragment;\n    \"TokenLocked(bytes32,address,address,address,uint256,uint256)\": EventFragment;\n    \"TokenUnlocked(bytes32,address,address,address,uint256,string)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"BatchTokenClaimed\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTokenClaimed(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"BatchTokenLocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTokenLocked(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"BatchTokenUnlocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTokenUnlocked(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenClaimed\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenClaimed(bytes32,address,address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenLocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenLocked(bytes32,address,address,address,uint256,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenUnlocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenUnlocked(bytes32,address,address,address,uint256,string)\"\n  ): EventFragment;\n}\n\nexport interface BatchTokenClaimedEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTokenClaimedEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTokenClaimedEventObject\n>;\n\nexport type BatchTokenClaimedEventFilter =\n  TypedEventFilter<BatchTokenClaimedEvent>;\n\nexport interface BatchTokenLockedEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTokenLockedEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTokenLockedEventObject\n>;\n\nexport type BatchTokenLockedEventFilter =\n  TypedEventFilter<BatchTokenLockedEvent>;\n\nexport interface BatchTokenUnlockedEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTokenUnlockedEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTokenUnlockedEventObject\n>;\n\nexport type BatchTokenUnlockedEventFilter =\n  TypedEventFilter<BatchTokenUnlockedEvent>;\n\nexport interface TokenClaimedEventObject {\n  id: string;\n  sender: string;\n  src: string;\n  amount: BigNumber;\n}\nexport type TokenClaimedEvent = TypedEvent<\n  [string, string, string, BigNumber],\n  TokenClaimedEventObject\n>;\n\nexport type TokenClaimedEventFilter = TypedEventFilter<TokenClaimedEvent>;\n\nexport interface TokenLockedEventObject {\n  id: string;\n  sender: string;\n  src: string;\n  account: string;\n  timestamp: BigNumber;\n  amount: BigNumber;\n}\nexport type TokenLockedEvent = TypedEvent<\n  [string, string, string, string, BigNumber, BigNumber],\n  TokenLockedEventObject\n>;\n\nexport type TokenLockedEventFilter = TypedEventFilter<TokenLockedEvent>;\n\nexport interface TokenUnlockedEventObject {\n  id: string;\n  sender: string;\n  account: string;\n  dest: string;\n  amount: BigNumber;\n  reason: string;\n}\nexport type TokenUnlockedEvent = TypedEvent<\n  [string, string, string, string, BigNumber, string],\n  TokenUnlockedEventObject\n>;\n\nexport type TokenUnlockedEventFilter = TypedEventFilter<TokenUnlockedEvent>;\n\nexport interface IERC20Lock extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IERC20LockInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  batchClaimToken(\n    lockIds: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchClaimToken(bytes32[])\"(\n    lockIds: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchLockToken(\n    lockRequest: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchLockToken((address,address,uint256,uint256)[])\"(\n    lockRequest: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchUnlockToken(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchUnlockToken((bytes32,address,string)[])\"(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  claimToken(\n    lockId: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"claimToken(bytes32)\"(\n    lockId: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  lockBalanceOf(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"lockBalanceOf(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  lockInfo(\n    lockId: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n  \"lockInfo(bytes32,address)\"(\n    lockId: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n  lockToken(\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"lockToken((address,address,uint256,uint256))\"(\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  totalBalanceOf(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"totalBalanceOf(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  unlockToken(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"unlockToken((bytes32,address,string))\"(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n  };\n\n  filters: {\n    \"BatchTokenClaimed(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenClaimedEventFilter;\n    BatchTokenClaimed(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenClaimedEventFilter;\n\n    \"BatchTokenLocked(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenLockedEventFilter;\n    BatchTokenLocked(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenLockedEventFilter;\n\n    \"BatchTokenUnlocked(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenUnlockedEventFilter;\n    BatchTokenUnlocked(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenUnlockedEventFilter;\n\n    \"TokenClaimed(bytes32,address,address,uint256)\"(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      amount?: null\n    ): TokenClaimedEventFilter;\n    TokenClaimed(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      amount?: null\n    ): TokenClaimedEventFilter;\n\n    \"TokenLocked(bytes32,address,address,address,uint256,uint256)\"(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      account?: null,\n      timestamp?: null,\n      amount?: null\n    ): TokenLockedEventFilter;\n    TokenLocked(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      account?: null,\n      timestamp?: null,\n      amount?: null\n    ): TokenLockedEventFilter;\n\n    \"TokenUnlocked(bytes32,address,address,address,uint256,string)\"(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      dest?: null,\n      amount?: null,\n      reason?: null\n    ): TokenUnlockedEventFilter;\n    TokenUnlocked(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      dest?: null,\n      amount?: null,\n      reason?: null\n    ): TokenUnlockedEventFilter;\n  };\n\n  estimateGas: {\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}