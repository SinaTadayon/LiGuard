{"version":3,"file":"LivelyToken.js","sourceRoot":"","sources":["../../../../../typechain/types/token/lively/LivelyToken.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport declare namespace IERC20Lock {\n  export type LockTokenRequestStruct = {\n    source: PromiseOrValue<string>;\n    dest: PromiseOrValue<string>;\n    timestamp: PromiseOrValue<BigNumberish>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type LockTokenRequestStructOutput = [\n    string,\n    string,\n    BigNumber,\n    BigNumber\n  ] & { source: string; dest: string; timestamp: BigNumber; amount: BigNumber };\n\n  export type UnLockTokenRequestStruct = {\n    lockId: PromiseOrValue<BytesLike>;\n    account: PromiseOrValue<string>;\n    reason: PromiseOrValue<string>;\n  };\n\n  export type UnLockTokenRequestStructOutput = [string, string, string] & {\n    lockId: string;\n    account: string;\n    reason: string;\n  };\n}\n\nexport declare namespace IERC20Extra {\n  export type BatchTransferRequestStruct = {\n    to: PromiseOrValue<string>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type BatchTransferRequestStructOutput = [string, BigNumber] & {\n    to: string;\n    amount: BigNumber;\n  };\n\n  export type BatchTransferFromRequestStruct = {\n    from: PromiseOrValue<string>;\n    to: PromiseOrValue<string>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type BatchTransferFromRequestStructOutput = [\n    string,\n    string,\n    BigNumber\n  ] & { from: string; to: string; amount: BigNumber };\n\n  export type BatchUpdateTaxWhitelistRequestStruct = {\n    account: PromiseOrValue<string>;\n    isDeleted: PromiseOrValue<boolean>;\n  };\n\n  export type BatchUpdateTaxWhitelistRequestStructOutput = [string, boolean] & {\n    account: string;\n    isDeleted: boolean;\n  };\n}\n\nexport declare namespace LivelyToken {\n  export type InitRequestStruct = {\n    domainName: PromiseOrValue<string>;\n    domainVersion: PromiseOrValue<string>;\n    domainRealm: PromiseOrValue<string>;\n    signature: PromiseOrValue<BytesLike>;\n    taxRateValue: PromiseOrValue<BigNumberish>;\n    accessControlManager: PromiseOrValue<string>;\n  };\n\n  export type InitRequestStructOutput = [\n    string,\n    string,\n    string,\n    string,\n    BigNumber,\n    string\n  ] & {\n    domainName: string;\n    domainVersion: string;\n    domainRealm: string;\n    signature: string;\n    taxRateValue: BigNumber;\n    accessControlManager: string;\n  };\n}\n\nexport interface LivelyTokenInterface extends utils.Interface {\n  functions: {\n    \"accessControlManager()\": FunctionFragment;\n    \"allowance(address,address)\": FunctionFragment;\n    \"approve(address,uint256)\": FunctionFragment;\n    \"balanceOf(address)\": FunctionFragment;\n    \"batchClaimToken(bytes32[])\": FunctionFragment;\n    \"batchLockToken((address,address,uint256,uint256)[])\": FunctionFragment;\n    \"batchTransfer((address,uint256)[])\": FunctionFragment;\n    \"batchTransferFrom((address,address,uint256)[])\": FunctionFragment;\n    \"batchUnlockToken((bytes32,address,string)[])\": FunctionFragment;\n    \"batchUpdateTaxWhitelist((address,bool)[])\": FunctionFragment;\n    \"burn(address,uint256)\": FunctionFragment;\n    \"claimToken(bytes32)\": FunctionFragment;\n    \"contractContext()\": FunctionFragment;\n    \"contractName()\": FunctionFragment;\n    \"contractRealm()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"decimals()\": FunctionFragment;\n    \"decreaseAllowance(address,uint256)\": FunctionFragment;\n    \"domainSeparator()\": FunctionFragment;\n    \"getLibrary()\": FunctionFragment;\n    \"increaseAllowance(address,uint256)\": FunctionFragment;\n    \"initVersion()\": FunctionFragment;\n    \"initialize((string,string,string,bytes,uint256,address))\": FunctionFragment;\n    \"isPaused(address)\": FunctionFragment;\n    \"isPausedAll()\": FunctionFragment;\n    \"isSafeMode()\": FunctionFragment;\n    \"isUpgradable()\": FunctionFragment;\n    \"localAdmin()\": FunctionFragment;\n    \"lockBalanceOf(address)\": FunctionFragment;\n    \"lockInfo(bytes32,address)\": FunctionFragment;\n    \"lockToken((address,address,uint256,uint256))\": FunctionFragment;\n    \"mint(address,uint256)\": FunctionFragment;\n    \"name()\": FunctionFragment;\n    \"nonce(address)\": FunctionFragment;\n    \"pause(address)\": FunctionFragment;\n    \"pauseAll()\": FunctionFragment;\n    \"pausedAccounts()\": FunctionFragment;\n    \"permit(address,address,uint256,uint256,bytes)\": FunctionFragment;\n    \"proxiableUUID()\": FunctionFragment;\n    \"setLocalAdmin(address)\": FunctionFragment;\n    \"setSafeMode(bool)\": FunctionFragment;\n    \"setUpgradeStatus(bool)\": FunctionFragment;\n    \"subjectAddress()\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"symbol()\": FunctionFragment;\n    \"taxRate()\": FunctionFragment;\n    \"taxTreasury()\": FunctionFragment;\n    \"taxWhitelist()\": FunctionFragment;\n    \"tokensDistribution(address,address[7])\": FunctionFragment;\n    \"totalBalanceOf(address)\": FunctionFragment;\n    \"totalSupply()\": FunctionFragment;\n    \"transfer(address,uint256)\": FunctionFragment;\n    \"transferFrom(address,address,uint256)\": FunctionFragment;\n    \"unlockToken((bytes32,address,string))\": FunctionFragment;\n    \"unpause(address)\": FunctionFragment;\n    \"unpauseAll()\": FunctionFragment;\n    \"updateTaxRate(uint256)\": FunctionFragment;\n    \"updateTaxWhitelist(address,bool)\": FunctionFragment;\n    \"upgradeTo(address,bytes,bool)\": FunctionFragment;\n    \"withdrawBalance(address)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"accessControlManager\"\n      | \"accessControlManager()\"\n      | \"allowance\"\n      | \"allowance(address,address)\"\n      | \"approve\"\n      | \"approve(address,uint256)\"\n      | \"balanceOf\"\n      | \"balanceOf(address)\"\n      | \"batchClaimToken\"\n      | \"batchClaimToken(bytes32[])\"\n      | \"batchLockToken\"\n      | \"batchLockToken((address,address,uint256,uint256)[])\"\n      | \"batchTransfer\"\n      | \"batchTransfer((address,uint256)[])\"\n      | \"batchTransferFrom\"\n      | \"batchTransferFrom((address,address,uint256)[])\"\n      | \"batchUnlockToken\"\n      | \"batchUnlockToken((bytes32,address,string)[])\"\n      | \"batchUpdateTaxWhitelist\"\n      | \"batchUpdateTaxWhitelist((address,bool)[])\"\n      | \"burn\"\n      | \"burn(address,uint256)\"\n      | \"claimToken\"\n      | \"claimToken(bytes32)\"\n      | \"contractContext\"\n      | \"contractContext()\"\n      | \"contractName\"\n      | \"contractName()\"\n      | \"contractRealm\"\n      | \"contractRealm()\"\n      | \"contractVersion\"\n      | \"contractVersion()\"\n      | \"decimals\"\n      | \"decimals()\"\n      | \"decreaseAllowance\"\n      | \"decreaseAllowance(address,uint256)\"\n      | \"domainSeparator\"\n      | \"domainSeparator()\"\n      | \"getLibrary\"\n      | \"getLibrary()\"\n      | \"increaseAllowance\"\n      | \"increaseAllowance(address,uint256)\"\n      | \"initVersion\"\n      | \"initVersion()\"\n      | \"initialize\"\n      | \"initialize((string,string,string,bytes,uint256,address))\"\n      | \"isPaused\"\n      | \"isPaused(address)\"\n      | \"isPausedAll\"\n      | \"isPausedAll()\"\n      | \"isSafeMode\"\n      | \"isSafeMode()\"\n      | \"isUpgradable\"\n      | \"isUpgradable()\"\n      | \"localAdmin\"\n      | \"localAdmin()\"\n      | \"lockBalanceOf\"\n      | \"lockBalanceOf(address)\"\n      | \"lockInfo\"\n      | \"lockInfo(bytes32,address)\"\n      | \"lockToken\"\n      | \"lockToken((address,address,uint256,uint256))\"\n      | \"mint\"\n      | \"mint(address,uint256)\"\n      | \"name\"\n      | \"name()\"\n      | \"nonce\"\n      | \"nonce(address)\"\n      | \"pause\"\n      | \"pause(address)\"\n      | \"pauseAll\"\n      | \"pauseAll()\"\n      | \"pausedAccounts\"\n      | \"pausedAccounts()\"\n      | \"permit\"\n      | \"permit(address,address,uint256,uint256,bytes)\"\n      | \"proxiableUUID\"\n      | \"proxiableUUID()\"\n      | \"setLocalAdmin\"\n      | \"setLocalAdmin(address)\"\n      | \"setSafeMode\"\n      | \"setSafeMode(bool)\"\n      | \"setUpgradeStatus\"\n      | \"setUpgradeStatus(bool)\"\n      | \"subjectAddress\"\n      | \"subjectAddress()\"\n      | \"supportsInterface\"\n      | \"supportsInterface(bytes4)\"\n      | \"symbol\"\n      | \"symbol()\"\n      | \"taxRate\"\n      | \"taxRate()\"\n      | \"taxTreasury\"\n      | \"taxTreasury()\"\n      | \"taxWhitelist\"\n      | \"taxWhitelist()\"\n      | \"tokensDistribution\"\n      | \"tokensDistribution(address,address[7])\"\n      | \"totalBalanceOf\"\n      | \"totalBalanceOf(address)\"\n      | \"totalSupply\"\n      | \"totalSupply()\"\n      | \"transfer\"\n      | \"transfer(address,uint256)\"\n      | \"transferFrom\"\n      | \"transferFrom(address,address,uint256)\"\n      | \"unlockToken\"\n      | \"unlockToken((bytes32,address,string))\"\n      | \"unpause\"\n      | \"unpause(address)\"\n      | \"unpauseAll\"\n      | \"unpauseAll()\"\n      | \"updateTaxRate\"\n      | \"updateTaxRate(uint256)\"\n      | \"updateTaxWhitelist\"\n      | \"updateTaxWhitelist(address,bool)\"\n      | \"upgradeTo\"\n      | \"upgradeTo(address,bytes,bool)\"\n      | \"withdrawBalance\"\n      | \"withdrawBalance(address)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"accessControlManager\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"accessControlManager()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"allowance\",\n    values: [PromiseOrValue<string>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"allowance(address,address)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"approve\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"approve(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"balanceOf\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"balanceOf(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchClaimToken\",\n    values: [PromiseOrValue<BytesLike>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchClaimToken(bytes32[])\",\n    values: [PromiseOrValue<BytesLike>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchLockToken\",\n    values: [IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchLockToken((address,address,uint256,uint256)[])\",\n    values: [IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchTransfer\",\n    values: [IERC20Extra.BatchTransferRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchTransfer((address,uint256)[])\",\n    values: [IERC20Extra.BatchTransferRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchTransferFrom\",\n    values: [IERC20Extra.BatchTransferFromRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchTransferFrom((address,address,uint256)[])\",\n    values: [IERC20Extra.BatchTransferFromRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchUnlockToken\",\n    values: [IERC20Lock.UnLockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchUnlockToken((bytes32,address,string)[])\",\n    values: [IERC20Lock.UnLockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchUpdateTaxWhitelist\",\n    values: [IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"batchUpdateTaxWhitelist((address,bool)[])\",\n    values: [IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"burn\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"burn(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"claimToken\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"claimToken(bytes32)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractContext\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractContext()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractName\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractName()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractRealm\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractRealm()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"decimals\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"decimals()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"decreaseAllowance\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"decreaseAllowance(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"domainSeparator\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"domainSeparator()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getLibrary\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getLibrary()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"increaseAllowance\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"increaseAllowance(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [LivelyToken.InitRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize((string,string,string,bytes,uint256,address))\",\n    values: [LivelyToken.InitRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isPaused\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isPaused(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isPausedAll\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isPausedAll()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isSafeMode\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isSafeMode()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isUpgradable\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isUpgradable()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"localAdmin\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"localAdmin()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockBalanceOf\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockBalanceOf(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockInfo\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockInfo(bytes32,address)\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockToken\",\n    values: [IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"lockToken((address,address,uint256,uint256))\",\n    values: [IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mint\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mint(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(functionFragment: \"name\", values?: undefined): string;\n  encodeFunctionData(functionFragment: \"name()\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"nonce\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"nonce(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pause\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pause(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(functionFragment: \"pauseAll\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"pauseAll()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pausedAccounts\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pausedAccounts()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"permit\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"permit(address,address,uint256,uint256,bytes)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"proxiableUUID()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setLocalAdmin\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setLocalAdmin(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeMode\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeMode(bool)\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setUpgradeStatus\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setUpgradeStatus(bool)\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"subjectAddress\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"subjectAddress()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface(bytes4)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(functionFragment: \"symbol\", values?: undefined): string;\n  encodeFunctionData(functionFragment: \"symbol()\", values?: undefined): string;\n  encodeFunctionData(functionFragment: \"taxRate\", values?: undefined): string;\n  encodeFunctionData(functionFragment: \"taxRate()\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"taxTreasury\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"taxTreasury()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"taxWhitelist\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"taxWhitelist()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokensDistribution\",\n    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokensDistribution(address,address[7])\",\n    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalBalanceOf\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalBalanceOf(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalSupply\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalSupply()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transfer\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transfer(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferFrom\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferFrom(address,address,uint256)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unlockToken\",\n    values: [IERC20Lock.UnLockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unlockToken((bytes32,address,string))\",\n    values: [IERC20Lock.UnLockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpause\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpause(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpauseAll\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpauseAll()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateTaxRate\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateTaxRate(uint256)\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateTaxWhitelist\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateTaxWhitelist(address,bool)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"upgradeTo(address,bytes,bool)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<boolean>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"accessControlManager\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"accessControlManager()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"allowance\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"allowance(address,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"approve\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"approve(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"balanceOf(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchClaimToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchClaimToken(bytes32[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchLockToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchLockToken((address,address,uint256,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchTransfer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchTransfer((address,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchTransferFrom((address,address,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchUnlockToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchUnlockToken((bytes32,address,string)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchUpdateTaxWhitelist\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"batchUpdateTaxWhitelist((address,bool)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"burn\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"burn(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"claimToken\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"claimToken(bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractContext\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractContext()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractName\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractName()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractRealm\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractRealm()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"decimals\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"decimals()\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"decreaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"decreaseAllowance(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"domainSeparator\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"domainSeparator()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getLibrary\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getLibrary()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"increaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"increaseAllowance(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"initVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"initVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"initialize((string,string,string,bytes,uint256,address))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"isPaused\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isPaused(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isPausedAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isPausedAll()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"isSafeMode\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isSafeMode()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isUpgradable\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isUpgradable()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"localAdmin\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"localAdmin()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockBalanceOf\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockBalanceOf(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"lockInfo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockInfo(bytes32,address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"lockToken\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"lockToken((address,address,uint256,uint256))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"mint\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"mint(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"name\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"name()\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"nonce\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"nonce(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"pause\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"pause(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"pauseAll\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"pauseAll()\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"pausedAccounts\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"pausedAccounts()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"permit\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"permit(address,address,uint256,uint256,bytes)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"proxiableUUID()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setLocalAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setLocalAdmin(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeMode\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeMode(bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setUpgradeStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setUpgradeStatus(bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"subjectAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"subjectAddress()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface(bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"symbol\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"symbol()\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"taxRate\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"taxRate()\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"taxTreasury\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"taxTreasury()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"taxWhitelist\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"taxWhitelist()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokensDistribution\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokensDistribution(address,address[7])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalBalanceOf\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalBalanceOf(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalSupply\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalSupply()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"transfer\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"transfer(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferFrom(address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"unlockToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"unlockToken((bytes32,address,string))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"unpause\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"unpause(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"unpauseAll\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"unpauseAll()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateTaxRate\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateTaxRate(uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateTaxWhitelist\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateTaxWhitelist(address,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"upgradeTo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"upgradeTo(address,bytes,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance(address)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"Approval(address,address,uint256)\": EventFragment;\n    \"ApprovalDecreased(address,address,uint256)\": EventFragment;\n    \"ApprovalIncreased(address,address,uint256)\": EventFragment;\n    \"BatchTokenClaimed(address,uint256)\": EventFragment;\n    \"BatchTokenLocked(address,uint256)\": EventFragment;\n    \"BatchTokenUnlocked(address,uint256)\": EventFragment;\n    \"BatchTransfer(address,uint256)\": EventFragment;\n    \"BatchTransferFrom(address,uint256)\": EventFragment;\n    \"Burn(address,address,uint256,uint256)\": EventFragment;\n    \"Initialized(address,address,address,string,string,bytes32,uint16)\": EventFragment;\n    \"LocalAdminChanged(address,address,address)\": EventFragment;\n    \"Mint(address,address,uint256,uint256)\": EventFragment;\n    \"Paused(address,address)\": EventFragment;\n    \"PausedAll(address)\": EventFragment;\n    \"SafeModeChanged(address,address,bytes32,bool)\": EventFragment;\n    \"TaxRateUpdated(address,uint256)\": EventFragment;\n    \"TaxWhitelistUpdated(address,address,bool)\": EventFragment;\n    \"TokenClaimed(bytes32,address,address,uint256)\": EventFragment;\n    \"TokenLocked(bytes32,address,address,address,uint256,uint256)\": EventFragment;\n    \"TokenUnlocked(bytes32,address,address,address,uint256,string)\": EventFragment;\n    \"Transfer(address,address,uint256)\": EventFragment;\n    \"TransferFrom(address,address,address,uint256)\": EventFragment;\n    \"Unpaused(address,address)\": EventFragment;\n    \"UnpausedAll(address)\": EventFragment;\n    \"UpgradeStatusChanged(address,address,bytes32,bool)\": EventFragment;\n    \"Upgraded(address,address,address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"Approval\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Approval(address,address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ApprovalDecreased\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ApprovalDecreased(address,address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ApprovalIncreased\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"ApprovalIncreased(address,address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"BatchTokenClaimed\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTokenClaimed(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"BatchTokenLocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTokenLocked(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"BatchTokenUnlocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTokenUnlocked(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"BatchTransfer\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTransfer(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"BatchTransferFrom\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"BatchTransferFrom(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Burn\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Burn(address,address,uint256,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Initialized\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Initialized(address,address,address,string,string,bytes32,uint16)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"LocalAdminChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"LocalAdminChanged(address,address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Mint\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Mint(address,address,uint256,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Paused\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Paused(address,address)\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PausedAll\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PausedAll(address)\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"SafeModeChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"SafeModeChanged(address,address,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TaxRateUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TaxRateUpdated(address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TaxWhitelistUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TaxWhitelistUpdated(address,address,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenClaimed\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenClaimed(bytes32,address,address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenLocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenLocked(bytes32,address,address,address,uint256,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenUnlocked\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenUnlocked(bytes32,address,address,address,uint256,string)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Transfer\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Transfer(address,address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TransferFrom\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TransferFrom(address,address,address,uint256)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Unpaused\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Unpaused(address,address)\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"UnpausedAll\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"UnpausedAll(address)\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"UpgradeStatusChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"UpgradeStatusChanged(address,address,bytes32,bool)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Upgraded\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"Upgraded(address,address,address)\"\n  ): EventFragment;\n}\n\nexport interface ApprovalEventObject {\n  owner: string;\n  spender: string;\n  value: BigNumber;\n}\nexport type ApprovalEvent = TypedEvent<\n  [string, string, BigNumber],\n  ApprovalEventObject\n>;\n\nexport type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;\n\nexport interface ApprovalDecreasedEventObject {\n  owner: string;\n  spender: string;\n  amount: BigNumber;\n}\nexport type ApprovalDecreasedEvent = TypedEvent<\n  [string, string, BigNumber],\n  ApprovalDecreasedEventObject\n>;\n\nexport type ApprovalDecreasedEventFilter =\n  TypedEventFilter<ApprovalDecreasedEvent>;\n\nexport interface ApprovalIncreasedEventObject {\n  owner: string;\n  spender: string;\n  amount: BigNumber;\n}\nexport type ApprovalIncreasedEvent = TypedEvent<\n  [string, string, BigNumber],\n  ApprovalIncreasedEventObject\n>;\n\nexport type ApprovalIncreasedEventFilter =\n  TypedEventFilter<ApprovalIncreasedEvent>;\n\nexport interface BatchTokenClaimedEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTokenClaimedEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTokenClaimedEventObject\n>;\n\nexport type BatchTokenClaimedEventFilter =\n  TypedEventFilter<BatchTokenClaimedEvent>;\n\nexport interface BatchTokenLockedEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTokenLockedEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTokenLockedEventObject\n>;\n\nexport type BatchTokenLockedEventFilter =\n  TypedEventFilter<BatchTokenLockedEvent>;\n\nexport interface BatchTokenUnlockedEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTokenUnlockedEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTokenUnlockedEventObject\n>;\n\nexport type BatchTokenUnlockedEventFilter =\n  TypedEventFilter<BatchTokenUnlockedEvent>;\n\nexport interface BatchTransferEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTransferEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTransferEventObject\n>;\n\nexport type BatchTransferEventFilter = TypedEventFilter<BatchTransferEvent>;\n\nexport interface BatchTransferFromEventObject {\n  sender: string;\n  totalAmount: BigNumber;\n}\nexport type BatchTransferFromEvent = TypedEvent<\n  [string, BigNumber],\n  BatchTransferFromEventObject\n>;\n\nexport type BatchTransferFromEventFilter =\n  TypedEventFilter<BatchTransferFromEvent>;\n\nexport interface BurnEventObject {\n  sender: string;\n  account: string;\n  amount: BigNumber;\n  totalSupply: BigNumber;\n}\nexport type BurnEvent = TypedEvent<\n  [string, string, BigNumber, BigNumber],\n  BurnEventObject\n>;\n\nexport type BurnEventFilter = TypedEventFilter<BurnEvent>;\n\nexport interface InitializedEventObject {\n  sender: string;\n  proxy: string;\n  subject: string;\n  name: string;\n  version: string;\n  realm: string;\n  initCount: number;\n}\nexport type InitializedEvent = TypedEvent<\n  [string, string, string, string, string, string, number],\n  InitializedEventObject\n>;\n\nexport type InitializedEventFilter = TypedEventFilter<InitializedEvent>;\n\nexport interface LocalAdminChangedEventObject {\n  sender: string;\n  proxy: string;\n  newAdmin: string;\n}\nexport type LocalAdminChangedEvent = TypedEvent<\n  [string, string, string],\n  LocalAdminChangedEventObject\n>;\n\nexport type LocalAdminChangedEventFilter =\n  TypedEventFilter<LocalAdminChangedEvent>;\n\nexport interface MintEventObject {\n  sender: string;\n  account: string;\n  amount: BigNumber;\n  totalSupply: BigNumber;\n}\nexport type MintEvent = TypedEvent<\n  [string, string, BigNumber, BigNumber],\n  MintEventObject\n>;\n\nexport type MintEventFilter = TypedEventFilter<MintEvent>;\n\nexport interface PausedEventObject {\n  sender: string;\n  account: string;\n}\nexport type PausedEvent = TypedEvent<[string, string], PausedEventObject>;\n\nexport type PausedEventFilter = TypedEventFilter<PausedEvent>;\n\nexport interface PausedAllEventObject {\n  sender: string;\n}\nexport type PausedAllEvent = TypedEvent<[string], PausedAllEventObject>;\n\nexport type PausedAllEventFilter = TypedEventFilter<PausedAllEvent>;\n\nexport interface SafeModeChangedEventObject {\n  sender: string;\n  proxy: string;\n  realm: string;\n  status: boolean;\n}\nexport type SafeModeChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  SafeModeChangedEventObject\n>;\n\nexport type SafeModeChangedEventFilter = TypedEventFilter<SafeModeChangedEvent>;\n\nexport interface TaxRateUpdatedEventObject {\n  sender: string;\n  rate: BigNumber;\n}\nexport type TaxRateUpdatedEvent = TypedEvent<\n  [string, BigNumber],\n  TaxRateUpdatedEventObject\n>;\n\nexport type TaxRateUpdatedEventFilter = TypedEventFilter<TaxRateUpdatedEvent>;\n\nexport interface TaxWhitelistUpdatedEventObject {\n  sender: string;\n  account: string;\n  isDeleted: boolean;\n}\nexport type TaxWhitelistUpdatedEvent = TypedEvent<\n  [string, string, boolean],\n  TaxWhitelistUpdatedEventObject\n>;\n\nexport type TaxWhitelistUpdatedEventFilter =\n  TypedEventFilter<TaxWhitelistUpdatedEvent>;\n\nexport interface TokenClaimedEventObject {\n  id: string;\n  sender: string;\n  src: string;\n  amount: BigNumber;\n}\nexport type TokenClaimedEvent = TypedEvent<\n  [string, string, string, BigNumber],\n  TokenClaimedEventObject\n>;\n\nexport type TokenClaimedEventFilter = TypedEventFilter<TokenClaimedEvent>;\n\nexport interface TokenLockedEventObject {\n  id: string;\n  sender: string;\n  src: string;\n  account: string;\n  timestamp: BigNumber;\n  amount: BigNumber;\n}\nexport type TokenLockedEvent = TypedEvent<\n  [string, string, string, string, BigNumber, BigNumber],\n  TokenLockedEventObject\n>;\n\nexport type TokenLockedEventFilter = TypedEventFilter<TokenLockedEvent>;\n\nexport interface TokenUnlockedEventObject {\n  id: string;\n  sender: string;\n  account: string;\n  dest: string;\n  amount: BigNumber;\n  reason: string;\n}\nexport type TokenUnlockedEvent = TypedEvent<\n  [string, string, string, string, BigNumber, string],\n  TokenUnlockedEventObject\n>;\n\nexport type TokenUnlockedEventFilter = TypedEventFilter<TokenUnlockedEvent>;\n\nexport interface TransferEventObject {\n  from: string;\n  to: string;\n  value: BigNumber;\n}\nexport type TransferEvent = TypedEvent<\n  [string, string, BigNumber],\n  TransferEventObject\n>;\n\nexport type TransferEventFilter = TypedEventFilter<TransferEvent>;\n\nexport interface TransferFromEventObject {\n  sender: string;\n  from: string;\n  to: string;\n  amount: BigNumber;\n}\nexport type TransferFromEvent = TypedEvent<\n  [string, string, string, BigNumber],\n  TransferFromEventObject\n>;\n\nexport type TransferFromEventFilter = TypedEventFilter<TransferFromEvent>;\n\nexport interface UnpausedEventObject {\n  sender: string;\n  account: string;\n}\nexport type UnpausedEvent = TypedEvent<[string, string], UnpausedEventObject>;\n\nexport type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;\n\nexport interface UnpausedAllEventObject {\n  sender: string;\n}\nexport type UnpausedAllEvent = TypedEvent<[string], UnpausedAllEventObject>;\n\nexport type UnpausedAllEventFilter = TypedEventFilter<UnpausedAllEvent>;\n\nexport interface UpgradeStatusChangedEventObject {\n  sender: string;\n  proxy: string;\n  realm: string;\n  status: boolean;\n}\nexport type UpgradeStatusChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  UpgradeStatusChangedEventObject\n>;\n\nexport type UpgradeStatusChangedEventFilter =\n  TypedEventFilter<UpgradeStatusChangedEvent>;\n\nexport interface UpgradedEventObject {\n  sender: string;\n  proxy: string;\n  newImplementation: string;\n}\nexport type UpgradedEvent = TypedEvent<\n  [string, string, string],\n  UpgradedEventObject\n>;\n\nexport type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;\n\nexport interface LivelyToken extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: LivelyTokenInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    accessControlManager(overrides?: CallOverrides): Promise<[string]>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    allowance(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"allowance(address,address)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    approve(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"approve(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    balanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"balanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    batchUpdateTaxWhitelist(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"batchUpdateTaxWhitelist((address,bool)[])\"(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    burn(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"burn(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    contractContext(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractName(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractRealm(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[string]>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    decimals(overrides?: CallOverrides): Promise<[number]>;\n\n    \"decimals()\"(overrides?: CallOverrides): Promise<[number]>;\n\n    decreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"decreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<[string]>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    getLibrary(overrides?: CallOverrides): Promise<[string]>;\n\n    \"getLibrary()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    increaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"increaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    initVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<[number]>;\n\n    initialize(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"initialize((string,string,string,bytes,uint256,address))\"(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    localAdmin(overrides?: CallOverrides): Promise<[string]>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    mint(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"mint(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    name(overrides?: CallOverrides): Promise<[string]>;\n\n    \"name()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    nonce(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"nonce(address)\"(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    pauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"pauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<[string[]]>;\n\n    \"pausedAccounts()\"(overrides?: CallOverrides): Promise<[string[]]>;\n\n    permit(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"permit(address,address,uint256,uint256,bytes)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<[string]>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<[string]>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    symbol(overrides?: CallOverrides): Promise<[string]>;\n\n    \"symbol()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    taxRate(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    \"taxRate()\"(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    taxTreasury(overrides?: CallOverrides): Promise<[string]>;\n\n    \"taxTreasury()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    taxWhitelist(overrides?: CallOverrides): Promise<[string[]]>;\n\n    \"taxWhitelist()\"(overrides?: CallOverrides): Promise<[string[]]>;\n\n    tokensDistribution(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokensDistribution(address,address[7])\"(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    \"totalSupply()\"(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    transfer(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"transfer(address,uint256)\"(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    transferFrom(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"transferFrom(address,address,uint256)\"(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    unpauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"unpauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    updateTaxRate(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"updateTaxRate(uint256)\"(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    updateTaxWhitelist(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"updateTaxWhitelist(address,bool)\"(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  accessControlManager(overrides?: CallOverrides): Promise<string>;\n\n  \"accessControlManager()\"(overrides?: CallOverrides): Promise<string>;\n\n  allowance(\n    owner: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"allowance(address,address)\"(\n    owner: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  approve(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"approve(address,uint256)\"(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  balanceOf(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"balanceOf(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  batchClaimToken(\n    lockIds: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchClaimToken(bytes32[])\"(\n    lockIds: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchLockToken(\n    lockRequest: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchLockToken((address,address,uint256,uint256)[])\"(\n    lockRequest: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchTransfer(\n    request: IERC20Extra.BatchTransferRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchTransfer((address,uint256)[])\"(\n    request: IERC20Extra.BatchTransferRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchTransferFrom(\n    request: IERC20Extra.BatchTransferFromRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchTransferFrom((address,address,uint256)[])\"(\n    request: IERC20Extra.BatchTransferFromRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchUnlockToken(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchUnlockToken((bytes32,address,string)[])\"(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  batchUpdateTaxWhitelist(\n    request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"batchUpdateTaxWhitelist((address,bool)[])\"(\n    request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  burn(\n    account: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"burn(address,uint256)\"(\n    account: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  claimToken(\n    lockId: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"claimToken(bytes32)\"(\n    lockId: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  contractContext(overrides?: CallOverrides): Promise<string>;\n\n  \"contractContext()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractName(overrides?: CallOverrides): Promise<string>;\n\n  \"contractName()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractRealm(overrides?: CallOverrides): Promise<string>;\n\n  \"contractRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<string>;\n\n  \"contractVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n  decimals(overrides?: CallOverrides): Promise<number>;\n\n  \"decimals()\"(overrides?: CallOverrides): Promise<number>;\n\n  decreaseAllowance(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"decreaseAllowance(address,uint256)\"(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n  \"domainSeparator()\"(overrides?: CallOverrides): Promise<string>;\n\n  getLibrary(overrides?: CallOverrides): Promise<string>;\n\n  \"getLibrary()\"(overrides?: CallOverrides): Promise<string>;\n\n  increaseAllowance(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"increaseAllowance(address,uint256)\"(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  initVersion(overrides?: CallOverrides): Promise<number>;\n\n  \"initVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n  initialize(\n    request: LivelyToken.InitRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"initialize((string,string,string,bytes,uint256,address))\"(\n    request: LivelyToken.InitRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  isPaused(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isPaused(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isPausedAll(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isPausedAll()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  isSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  isUpgradable(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isUpgradable()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  localAdmin(overrides?: CallOverrides): Promise<string>;\n\n  \"localAdmin()\"(overrides?: CallOverrides): Promise<string>;\n\n  lockBalanceOf(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"lockBalanceOf(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  lockInfo(\n    lockId: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n  \"lockInfo(bytes32,address)\"(\n    lockId: PromiseOrValue<BytesLike>,\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n  lockToken(\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"lockToken((address,address,uint256,uint256))\"(\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  mint(\n    account: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"mint(address,uint256)\"(\n    account: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  name(overrides?: CallOverrides): Promise<string>;\n\n  \"name()\"(overrides?: CallOverrides): Promise<string>;\n\n  nonce(\n    owner: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"nonce(address)\"(\n    owner: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  pause(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"pause(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  pauseAll(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"pauseAll()\"(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  pausedAccounts(overrides?: CallOverrides): Promise<string[]>;\n\n  \"pausedAccounts()\"(overrides?: CallOverrides): Promise<string[]>;\n\n  permit(\n    owner: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    deadline: PromiseOrValue<BigNumberish>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"permit(address,address,uint256,uint256,bytes)\"(\n    owner: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    deadline: PromiseOrValue<BigNumberish>,\n    signature: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n  \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n  setLocalAdmin(\n    newLocalAdmin: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setLocalAdmin(address)\"(\n    newLocalAdmin: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setSafeMode(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setSafeMode(bool)\"(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setUpgradeStatus(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setUpgradeStatus(bool)\"(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  subjectAddress(overrides?: CallOverrides): Promise<string>;\n\n  \"subjectAddress()\"(overrides?: CallOverrides): Promise<string>;\n\n  supportsInterface(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"supportsInterface(bytes4)\"(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  symbol(overrides?: CallOverrides): Promise<string>;\n\n  \"symbol()\"(overrides?: CallOverrides): Promise<string>;\n\n  taxRate(overrides?: CallOverrides): Promise<BigNumber>;\n\n  \"taxRate()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n  taxTreasury(overrides?: CallOverrides): Promise<string>;\n\n  \"taxTreasury()\"(overrides?: CallOverrides): Promise<string>;\n\n  taxWhitelist(overrides?: CallOverrides): Promise<string[]>;\n\n  \"taxWhitelist()\"(overrides?: CallOverrides): Promise<string[]>;\n\n  tokensDistribution(\n    assetManager: PromiseOrValue<string>,\n    assets: PromiseOrValue<string>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokensDistribution(address,address[7])\"(\n    assetManager: PromiseOrValue<string>,\n    assets: PromiseOrValue<string>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  totalBalanceOf(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"totalBalanceOf(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n  \"totalSupply()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n  transfer(\n    recipient: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"transfer(address,uint256)\"(\n    recipient: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  transferFrom(\n    source: PromiseOrValue<string>,\n    recipient: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"transferFrom(address,address,uint256)\"(\n    source: PromiseOrValue<string>,\n    recipient: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  unlockToken(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"unlockToken((bytes32,address,string))\"(\n    unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  unpause(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"unpause(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  unpauseAll(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"unpauseAll()\"(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  updateTaxRate(\n    rate: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"updateTaxRate(uint256)\"(\n    rate: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  updateTaxWhitelist(\n    account: PromiseOrValue<string>,\n    isDeleted: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"updateTaxWhitelist(address,bool)\"(\n    account: PromiseOrValue<string>,\n    isDeleted: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  upgradeTo(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    forceCall: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"upgradeTo(address,bytes,bool)\"(\n    newImplementation: PromiseOrValue<string>,\n    data: PromiseOrValue<BytesLike>,\n    forceCall: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  withdrawBalance(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"withdrawBalance(address)\"(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    accessControlManager(overrides?: CallOverrides): Promise<string>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<string>;\n\n    allowance(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"allowance(address,address)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    approve(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"approve(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    balanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"balanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    batchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"batchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    batchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"batchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    batchUpdateTaxWhitelist(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"batchUpdateTaxWhitelist((address,bool)[])\"(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    burn(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"burn(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    contractContext(overrides?: CallOverrides): Promise<string>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractName(overrides?: CallOverrides): Promise<string>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractRealm(overrides?: CallOverrides): Promise<string>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<string>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n    decimals(overrides?: CallOverrides): Promise<number>;\n\n    \"decimals()\"(overrides?: CallOverrides): Promise<number>;\n\n    decreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"decreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<string>;\n\n    getLibrary(overrides?: CallOverrides): Promise<string>;\n\n    \"getLibrary()\"(overrides?: CallOverrides): Promise<string>;\n\n    increaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"increaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    initVersion(overrides?: CallOverrides): Promise<number>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n    initialize(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"initialize((string,string,string,bytes,uint256,address))\"(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    localAdmin(overrides?: CallOverrides): Promise<string>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<string>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, string, number]>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    mint(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"mint(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<string>;\n\n    \"name()\"(overrides?: CallOverrides): Promise<string>;\n\n    nonce(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"nonce(address)\"(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    pauseAll(overrides?: CallOverrides): Promise<void>;\n\n    \"pauseAll()\"(overrides?: CallOverrides): Promise<void>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<string[]>;\n\n    \"pausedAccounts()\"(overrides?: CallOverrides): Promise<string[]>;\n\n    permit(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"permit(address,address,uint256,uint256,bytes)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<string>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<string>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<string>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<string>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    symbol(overrides?: CallOverrides): Promise<string>;\n\n    \"symbol()\"(overrides?: CallOverrides): Promise<string>;\n\n    taxRate(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"taxRate()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    taxTreasury(overrides?: CallOverrides): Promise<string>;\n\n    \"taxTreasury()\"(overrides?: CallOverrides): Promise<string>;\n\n    taxWhitelist(overrides?: CallOverrides): Promise<string[]>;\n\n    \"taxWhitelist()\"(overrides?: CallOverrides): Promise<string[]>;\n\n    tokensDistribution(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokensDistribution(address,address[7])\"(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"totalSupply()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"transfer(address,uint256)\"(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    transferFrom(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"transferFrom(address,address,uint256)\"(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    unpauseAll(overrides?: CallOverrides): Promise<void>;\n\n    \"unpauseAll()\"(overrides?: CallOverrides): Promise<void>;\n\n    updateTaxRate(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"updateTaxRate(uint256)\"(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    updateTaxWhitelist(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"updateTaxWhitelist(address,bool)\"(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"Approval(address,address,uint256)\"(\n      owner?: PromiseOrValue<string> | null,\n      spender?: PromiseOrValue<string> | null,\n      value?: null\n    ): ApprovalEventFilter;\n    Approval(\n      owner?: PromiseOrValue<string> | null,\n      spender?: PromiseOrValue<string> | null,\n      value?: null\n    ): ApprovalEventFilter;\n\n    \"ApprovalDecreased(address,address,uint256)\"(\n      owner?: PromiseOrValue<string> | null,\n      spender?: PromiseOrValue<string> | null,\n      amount?: null\n    ): ApprovalDecreasedEventFilter;\n    ApprovalDecreased(\n      owner?: PromiseOrValue<string> | null,\n      spender?: PromiseOrValue<string> | null,\n      amount?: null\n    ): ApprovalDecreasedEventFilter;\n\n    \"ApprovalIncreased(address,address,uint256)\"(\n      owner?: PromiseOrValue<string> | null,\n      spender?: PromiseOrValue<string> | null,\n      amount?: null\n    ): ApprovalIncreasedEventFilter;\n    ApprovalIncreased(\n      owner?: PromiseOrValue<string> | null,\n      spender?: PromiseOrValue<string> | null,\n      amount?: null\n    ): ApprovalIncreasedEventFilter;\n\n    \"BatchTokenClaimed(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenClaimedEventFilter;\n    BatchTokenClaimed(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenClaimedEventFilter;\n\n    \"BatchTokenLocked(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenLockedEventFilter;\n    BatchTokenLocked(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenLockedEventFilter;\n\n    \"BatchTokenUnlocked(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenUnlockedEventFilter;\n    BatchTokenUnlocked(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTokenUnlockedEventFilter;\n\n    \"BatchTransfer(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTransferEventFilter;\n    BatchTransfer(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTransferEventFilter;\n\n    \"BatchTransferFrom(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTransferFromEventFilter;\n    BatchTransferFrom(\n      sender?: PromiseOrValue<string> | null,\n      totalAmount?: null\n    ): BatchTransferFromEventFilter;\n\n    \"Burn(address,address,uint256,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      amount?: null,\n      totalSupply?: null\n    ): BurnEventFilter;\n    Burn(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      amount?: null,\n      totalSupply?: null\n    ): BurnEventFilter;\n\n    \"Initialized(address,address,address,string,string,bytes32,uint16)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      subject?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null,\n      initCount?: null\n    ): InitializedEventFilter;\n    Initialized(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      subject?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null,\n      initCount?: null\n    ): InitializedEventFilter;\n\n    \"LocalAdminChanged(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newAdmin?: null\n    ): LocalAdminChangedEventFilter;\n    LocalAdminChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newAdmin?: null\n    ): LocalAdminChangedEventFilter;\n\n    \"Mint(address,address,uint256,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      amount?: null,\n      totalSupply?: null\n    ): MintEventFilter;\n    Mint(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      amount?: null,\n      totalSupply?: null\n    ): MintEventFilter;\n\n    \"Paused(address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): PausedEventFilter;\n    Paused(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): PausedEventFilter;\n\n    \"PausedAll(address)\"(\n      sender?: PromiseOrValue<string> | null\n    ): PausedAllEventFilter;\n    PausedAll(sender?: PromiseOrValue<string> | null): PausedAllEventFilter;\n\n    \"SafeModeChanged(address,address,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): SafeModeChangedEventFilter;\n    SafeModeChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): SafeModeChangedEventFilter;\n\n    \"TaxRateUpdated(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      rate?: null\n    ): TaxRateUpdatedEventFilter;\n    TaxRateUpdated(\n      sender?: PromiseOrValue<string> | null,\n      rate?: null\n    ): TaxRateUpdatedEventFilter;\n\n    \"TaxWhitelistUpdated(address,address,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      isDeleted?: null\n    ): TaxWhitelistUpdatedEventFilter;\n    TaxWhitelistUpdated(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      isDeleted?: null\n    ): TaxWhitelistUpdatedEventFilter;\n\n    \"TokenClaimed(bytes32,address,address,uint256)\"(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      amount?: null\n    ): TokenClaimedEventFilter;\n    TokenClaimed(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      amount?: null\n    ): TokenClaimedEventFilter;\n\n    \"TokenLocked(bytes32,address,address,address,uint256,uint256)\"(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      account?: null,\n      timestamp?: null,\n      amount?: null\n    ): TokenLockedEventFilter;\n    TokenLocked(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      src?: PromiseOrValue<string> | null,\n      account?: null,\n      timestamp?: null,\n      amount?: null\n    ): TokenLockedEventFilter;\n\n    \"TokenUnlocked(bytes32,address,address,address,uint256,string)\"(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      dest?: null,\n      amount?: null,\n      reason?: null\n    ): TokenUnlockedEventFilter;\n    TokenUnlocked(\n      id?: PromiseOrValue<BytesLike> | null,\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null,\n      dest?: null,\n      amount?: null,\n      reason?: null\n    ): TokenUnlockedEventFilter;\n\n    \"Transfer(address,address,uint256)\"(\n      from?: PromiseOrValue<string> | null,\n      to?: PromiseOrValue<string> | null,\n      value?: null\n    ): TransferEventFilter;\n    Transfer(\n      from?: PromiseOrValue<string> | null,\n      to?: PromiseOrValue<string> | null,\n      value?: null\n    ): TransferEventFilter;\n\n    \"TransferFrom(address,address,address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      from?: PromiseOrValue<string> | null,\n      to?: PromiseOrValue<string> | null,\n      amount?: null\n    ): TransferFromEventFilter;\n    TransferFrom(\n      sender?: PromiseOrValue<string> | null,\n      from?: PromiseOrValue<string> | null,\n      to?: PromiseOrValue<string> | null,\n      amount?: null\n    ): TransferFromEventFilter;\n\n    \"Unpaused(address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): UnpausedEventFilter;\n    Unpaused(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): UnpausedEventFilter;\n\n    \"UnpausedAll(address)\"(\n      sender?: PromiseOrValue<string> | null\n    ): UnpausedAllEventFilter;\n    UnpausedAll(sender?: PromiseOrValue<string> | null): UnpausedAllEventFilter;\n\n    \"UpgradeStatusChanged(address,address,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): UpgradeStatusChangedEventFilter;\n    UpgradeStatusChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): UpgradeStatusChangedEventFilter;\n\n    \"Upgraded(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n    Upgraded(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): UpgradedEventFilter;\n  };\n\n  estimateGas: {\n    accessControlManager(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"accessControlManager()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    allowance(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"allowance(address,address)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    approve(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"approve(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    balanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"balanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    batchUpdateTaxWhitelist(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"batchUpdateTaxWhitelist((address,bool)[])\"(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    burn(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"burn(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    contractContext(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractContext()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractName(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractRealm(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"contractVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    decimals(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"decimals()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    decreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"decreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"domainSeparator()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getLibrary(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"getLibrary()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    increaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"increaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    initVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    initialize(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"initialize((string,string,string,bytes,uint256,address))\"(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    localAdmin(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    mint(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"mint(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"name()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nonce(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"nonce(address)\"(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    pauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"pauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"pausedAccounts()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    permit(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"permit(address,address,uint256,uint256,bytes)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"subjectAddress()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    symbol(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"symbol()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    taxRate(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"taxRate()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    taxTreasury(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"taxTreasury()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    taxWhitelist(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"taxWhitelist()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    tokensDistribution(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokensDistribution(address,address[7])\"(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"totalSupply()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"transfer(address,uint256)\"(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    transferFrom(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"transferFrom(address,address,uint256)\"(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    unpauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"unpauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    updateTaxRate(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"updateTaxRate(uint256)\"(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    updateTaxWhitelist(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"updateTaxWhitelist(address,bool)\"(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    accessControlManager(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"accessControlManager()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    allowance(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"allowance(address,address)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    approve(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"approve(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"balanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    batchClaimToken(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchClaimToken(bytes32[])\"(\n      lockIds: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchLockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchLockToken((address,address,uint256,uint256)[])\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchUnlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchUnlockToken((bytes32,address,string)[])\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    batchUpdateTaxWhitelist(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"batchUpdateTaxWhitelist((address,bool)[])\"(\n      request: IERC20Extra.BatchUpdateTaxWhitelistRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    burn(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"burn(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    claimToken(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"claimToken(bytes32)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    contractContext(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractContext()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    contractName(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractName()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractRealm(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractRealm()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"contractVersion()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"decimals()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    decreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"decreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"domainSeparator()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getLibrary(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"getLibrary()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    increaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"increaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    initVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"initVersion()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    initialize(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"initialize((string,string,string,bytes,uint256,address))\"(\n      request: LivelyToken.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    isSafeMode(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isSafeMode()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    isUpgradable(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isUpgradable()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    localAdmin(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"localAdmin()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    lockBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"lockBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    lockInfo(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"lockInfo(bytes32,address)\"(\n      lockId: PromiseOrValue<BytesLike>,\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    lockToken(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"lockToken((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    mint(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"mint(address,uint256)\"(\n      account: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"name()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nonce(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"nonce(address)\"(\n      owner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    pauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"pauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"pausedAccounts()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    permit(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"permit(address,address,uint256,uint256,bytes)\"(\n      owner: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      deadline: PromiseOrValue<BigNumberish>,\n      signature: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    proxiableUUID(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"proxiableUUID()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    setLocalAdmin(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setLocalAdmin(address)\"(\n      newLocalAdmin: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setSafeMode(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setSafeMode(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setUpgradeStatus(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setUpgradeStatus(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    subjectAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"subjectAddress()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"symbol()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    taxRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"taxRate()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    taxTreasury(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"taxTreasury()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    taxWhitelist(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"taxWhitelist()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    tokensDistribution(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokensDistribution(address,address[7])\"(\n      assetManager: PromiseOrValue<string>,\n      assets: PromiseOrValue<string>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    totalBalanceOf(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"totalBalanceOf(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"totalSupply()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    transfer(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"transfer(address,uint256)\"(\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    transferFrom(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"transferFrom(address,address,uint256)\"(\n      source: PromiseOrValue<string>,\n      recipient: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    unlockToken(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"unlockToken((bytes32,address,string))\"(\n      unlockRequest: IERC20Lock.UnLockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    unpauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"unpauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    updateTaxRate(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"updateTaxRate(uint256)\"(\n      rate: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    updateTaxWhitelist(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"updateTaxWhitelist(address,bool)\"(\n      account: PromiseOrValue<string>,\n      isDeleted: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    upgradeTo(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"upgradeTo(address,bytes,bool)\"(\n      newImplementation: PromiseOrValue<string>,\n      data: PromiseOrValue<BytesLike>,\n      forceCall: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}