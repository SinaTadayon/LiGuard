{"version":3,"file":"IERC20Pause.js","sourceRoot":"","sources":["../../../../../typechain/types/token/lively/IERC20Pause.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport interface IERC20PauseInterface extends utils.Interface {\n  functions: {\n    \"isPaused(address)\": FunctionFragment;\n    \"isPausedAll()\": FunctionFragment;\n    \"pause(address)\": FunctionFragment;\n    \"pauseAll()\": FunctionFragment;\n    \"pausedAccounts()\": FunctionFragment;\n    \"unpause(address)\": FunctionFragment;\n    \"unpauseAll()\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"isPaused\"\n      | \"isPaused(address)\"\n      | \"isPausedAll\"\n      | \"isPausedAll()\"\n      | \"pause\"\n      | \"pause(address)\"\n      | \"pauseAll\"\n      | \"pauseAll()\"\n      | \"pausedAccounts\"\n      | \"pausedAccounts()\"\n      | \"unpause\"\n      | \"unpause(address)\"\n      | \"unpauseAll\"\n      | \"unpauseAll()\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"isPaused\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isPaused(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isPausedAll\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isPausedAll()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pause\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pause(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(functionFragment: \"pauseAll\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"pauseAll()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pausedAccounts\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"pausedAccounts()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpause\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpause(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpauseAll\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unpauseAll()\",\n    values?: undefined\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"isPaused\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isPaused(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isPausedAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isPausedAll()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"pause\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"pause(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"pauseAll\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"pauseAll()\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"pausedAccounts\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"pausedAccounts()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"unpause\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"unpause(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"unpauseAll\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"unpauseAll()\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"Paused(address,address)\": EventFragment;\n    \"PausedAll(address)\": EventFragment;\n    \"Unpaused(address,address)\": EventFragment;\n    \"UnpausedAll(address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"Paused\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Paused(address,address)\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PausedAll\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PausedAll(address)\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Unpaused\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Unpaused(address,address)\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"UnpausedAll\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"UnpausedAll(address)\"): EventFragment;\n}\n\nexport interface PausedEventObject {\n  sender: string;\n  account: string;\n}\nexport type PausedEvent = TypedEvent<[string, string], PausedEventObject>;\n\nexport type PausedEventFilter = TypedEventFilter<PausedEvent>;\n\nexport interface PausedAllEventObject {\n  sender: string;\n}\nexport type PausedAllEvent = TypedEvent<[string], PausedAllEventObject>;\n\nexport type PausedAllEventFilter = TypedEventFilter<PausedAllEvent>;\n\nexport interface UnpausedEventObject {\n  sender: string;\n  account: string;\n}\nexport type UnpausedEvent = TypedEvent<[string, string], UnpausedEventObject>;\n\nexport type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;\n\nexport interface UnpausedAllEventObject {\n  sender: string;\n}\nexport type UnpausedAllEvent = TypedEvent<[string], UnpausedAllEventObject>;\n\nexport type UnpausedAllEventFilter = TypedEventFilter<UnpausedAllEvent>;\n\nexport interface IERC20Pause extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IERC20PauseInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    pauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"pauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<[string[]]>;\n\n    \"pausedAccounts()\"(overrides?: CallOverrides): Promise<[string[]]>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    unpauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"unpauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  isPaused(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isPaused(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isPausedAll(overrides?: CallOverrides): Promise<boolean>;\n\n  \"isPausedAll()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  pause(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"pause(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  pauseAll(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"pauseAll()\"(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  pausedAccounts(overrides?: CallOverrides): Promise<string[]>;\n\n  \"pausedAccounts()\"(overrides?: CallOverrides): Promise<string[]>;\n\n  unpause(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"unpause(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  unpauseAll(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"unpauseAll()\"(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<boolean>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    pauseAll(overrides?: CallOverrides): Promise<void>;\n\n    \"pauseAll()\"(overrides?: CallOverrides): Promise<void>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<string[]>;\n\n    \"pausedAccounts()\"(overrides?: CallOverrides): Promise<string[]>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    unpauseAll(overrides?: CallOverrides): Promise<void>;\n\n    \"unpauseAll()\"(overrides?: CallOverrides): Promise<void>;\n  };\n\n  filters: {\n    \"Paused(address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): PausedEventFilter;\n    Paused(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): PausedEventFilter;\n\n    \"PausedAll(address)\"(\n      sender?: PromiseOrValue<string> | null\n    ): PausedAllEventFilter;\n    PausedAll(sender?: PromiseOrValue<string> | null): PausedAllEventFilter;\n\n    \"Unpaused(address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): UnpausedEventFilter;\n    Unpaused(\n      sender?: PromiseOrValue<string> | null,\n      account?: PromiseOrValue<string> | null\n    ): UnpausedEventFilter;\n\n    \"UnpausedAll(address)\"(\n      sender?: PromiseOrValue<string> | null\n    ): UnpausedAllEventFilter;\n    UnpausedAll(sender?: PromiseOrValue<string> | null): UnpausedAllEventFilter;\n  };\n\n  estimateGas: {\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    pauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"pauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"pausedAccounts()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    unpauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"unpauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    isPaused(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isPaused(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isPausedAll(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"isPausedAll()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    pause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"pause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    pauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"pauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    pausedAccounts(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"pausedAccounts()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    unpause(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"unpause(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    unpauseAll(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"unpauseAll()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}