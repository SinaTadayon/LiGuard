{"version":3,"file":"IShortTermDeposite.js","sourceRoot":"","sources":["../../../../../typechain/types/token/lively/IShortTermDeposite.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport interface IShortTermDepositeInterface extends utils.Interface {\n  functions: {\n    \"claimStd()\": FunctionFragment;\n    \"depositeStd(uint256)\": FunctionFragment;\n    \"getStdInfo(address)\": FunctionFragment;\n    \"withdrawStd(uint256)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"claimStd\"\n      | \"claimStd()\"\n      | \"depositeStd\"\n      | \"depositeStd(uint256)\"\n      | \"getStdInfo\"\n      | \"getStdInfo(address)\"\n      | \"withdrawStd\"\n      | \"withdrawStd(uint256)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(functionFragment: \"claimStd\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"claimStd()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"depositeStd\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"depositeStd(uint256)\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getStdInfo\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getStdInfo(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawStd\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawStd(uint256)\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"claimStd\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"claimStd()\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"depositeStd\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"depositeStd(uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getStdInfo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getStdInfo(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawStd\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawStd(uint256)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"STDClaimed(address,uint256,uint256,uint128,uint64)\": EventFragment;\n    \"STDDeposited(address,uint256,uint256,uint256,uint128,uint64)\": EventFragment;\n    \"STDWithdrawn(address,uint256,uint256,uint256,uint128,uint64)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"STDClaimed\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"STDClaimed(address,uint256,uint256,uint128,uint64)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"STDDeposited\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"STDDeposited(address,uint256,uint256,uint256,uint128,uint64)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"STDWithdrawn\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"STDWithdrawn(address,uint256,uint256,uint256,uint128,uint64)\"\n  ): EventFragment;\n}\n\nexport interface STDClaimedEventObject {\n  sender: string;\n  balance: BigNumber;\n  interest: BigNumber;\n  timestamp: BigNumber;\n  aprId: BigNumber;\n}\nexport type STDClaimedEvent = TypedEvent<\n  [string, BigNumber, BigNumber, BigNumber, BigNumber],\n  STDClaimedEventObject\n>;\n\nexport type STDClaimedEventFilter = TypedEventFilter<STDClaimedEvent>;\n\nexport interface STDDepositedEventObject {\n  sender: string;\n  amount: BigNumber;\n  balance: BigNumber;\n  interest: BigNumber;\n  timestamp: BigNumber;\n  aprId: BigNumber;\n}\nexport type STDDepositedEvent = TypedEvent<\n  [string, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],\n  STDDepositedEventObject\n>;\n\nexport type STDDepositedEventFilter = TypedEventFilter<STDDepositedEvent>;\n\nexport interface STDWithdrawnEventObject {\n  sender: string;\n  amount: BigNumber;\n  balance: BigNumber;\n  interest: BigNumber;\n  timestamp: BigNumber;\n  aprId: BigNumber;\n}\nexport type STDWithdrawnEvent = TypedEvent<\n  [string, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],\n  STDWithdrawnEventObject\n>;\n\nexport type STDWithdrawnEventFilter = TypedEventFilter<STDWithdrawnEvent>;\n\nexport interface IShortTermDeposite extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IShortTermDepositeInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    claimStd(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"claimStd()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    depositeStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"depositeStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    getStdInfo(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;\n\n    \"getStdInfo(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;\n\n    withdrawStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"withdrawStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  claimStd(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"claimStd()\"(\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  depositeStd(\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"depositeStd(uint256)\"(\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  getStdInfo(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;\n\n  \"getStdInfo(address)\"(\n    account: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;\n\n  withdrawStd(\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"withdrawStd(uint256)\"(\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    claimStd(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"claimStd()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    depositeStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"depositeStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getStdInfo(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;\n\n    \"getStdInfo(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;\n\n    withdrawStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"withdrawStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n  };\n\n  filters: {\n    \"STDClaimed(address,uint256,uint256,uint128,uint64)\"(\n      sender?: PromiseOrValue<string> | null,\n      balance?: null,\n      interest?: null,\n      timestamp?: null,\n      aprId?: null\n    ): STDClaimedEventFilter;\n    STDClaimed(\n      sender?: PromiseOrValue<string> | null,\n      balance?: null,\n      interest?: null,\n      timestamp?: null,\n      aprId?: null\n    ): STDClaimedEventFilter;\n\n    \"STDDeposited(address,uint256,uint256,uint256,uint128,uint64)\"(\n      sender?: PromiseOrValue<string> | null,\n      amount?: null,\n      balance?: null,\n      interest?: null,\n      timestamp?: null,\n      aprId?: null\n    ): STDDepositedEventFilter;\n    STDDeposited(\n      sender?: PromiseOrValue<string> | null,\n      amount?: null,\n      balance?: null,\n      interest?: null,\n      timestamp?: null,\n      aprId?: null\n    ): STDDepositedEventFilter;\n\n    \"STDWithdrawn(address,uint256,uint256,uint256,uint128,uint64)\"(\n      sender?: PromiseOrValue<string> | null,\n      amount?: null,\n      balance?: null,\n      interest?: null,\n      timestamp?: null,\n      aprId?: null\n    ): STDWithdrawnEventFilter;\n    STDWithdrawn(\n      sender?: PromiseOrValue<string> | null,\n      amount?: null,\n      balance?: null,\n      interest?: null,\n      timestamp?: null,\n      aprId?: null\n    ): STDWithdrawnEventFilter;\n  };\n\n  estimateGas: {\n    claimStd(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"claimStd()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    depositeStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"depositeStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    getStdInfo(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getStdInfo(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    withdrawStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"withdrawStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    claimStd(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"claimStd()\"(\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    depositeStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"depositeStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    getStdInfo(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getStdInfo(address)\"(\n      account: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    withdrawStd(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"withdrawStd(uint256)\"(\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}