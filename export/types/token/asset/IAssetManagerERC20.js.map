{"version":3,"file":"IAssetManagerERC20.js","sourceRoot":"","sources":["../../../../../typechain/types/token/asset/IAssetManagerERC20.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../common\";\n\nexport declare namespace IAssetManagerERC20 {\n  export type CreateAssetRequestStruct = {\n    role: PromiseOrValue<BytesLike>;\n    salt: PromiseOrValue<BytesLike>;\n    tokenId: PromiseOrValue<string>;\n    assetName: PromiseOrValue<string>;\n    assetVersion: PromiseOrValue<string>;\n  };\n\n  export type CreateAssetRequestStructOutput = [\n    string,\n    string,\n    string,\n    string,\n    string\n  ] & {\n    role: string;\n    salt: string;\n    tokenId: string;\n    assetName: string;\n    assetVersion: string;\n  };\n}\n\nexport declare namespace IERC20Lock {\n  export type LockTokenRequestStruct = {\n    source: PromiseOrValue<string>;\n    dest: PromiseOrValue<string>;\n    timestamp: PromiseOrValue<BigNumberish>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type LockTokenRequestStructOutput = [\n    string,\n    string,\n    BigNumber,\n    BigNumber\n  ] & { source: string; dest: string; timestamp: BigNumber; amount: BigNumber };\n}\n\nexport declare namespace IERC20Extra {\n  export type BatchTransferRequestStruct = {\n    to: PromiseOrValue<string>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type BatchTransferRequestStructOutput = [string, BigNumber] & {\n    to: string;\n    amount: BigNumber;\n  };\n\n  export type BatchTransferFromRequestStruct = {\n    from: PromiseOrValue<string>;\n    to: PromiseOrValue<string>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type BatchTransferFromRequestStructOutput = [\n    string,\n    string,\n    BigNumber\n  ] & { from: string; to: string; amount: BigNumber };\n}\n\nexport interface IAssetManagerERC20Interface extends utils.Interface {\n  functions: {\n    \"createAsset((bytes32,bytes32,address,string,string))\": FunctionFragment;\n    \"getAllTokens()\": FunctionFragment;\n    \"getTokenInfo(address)\": FunctionFragment;\n    \"isAssetExists(address)\": FunctionFragment;\n    \"isTokenExists(address)\": FunctionFragment;\n    \"predictAddress(address,bytes32)\": FunctionFragment;\n    \"registerToken(address)\": FunctionFragment;\n    \"removeAsset(address)\": FunctionFragment;\n    \"setSafeModeToken(address,bool)\": FunctionFragment;\n    \"tokenApprove(address,address,uint256)\": FunctionFragment;\n    \"tokenBatchLock(address,(address,address,uint256,uint256)[])\": FunctionFragment;\n    \"tokenBatchTransfer(address,(address,uint256)[])\": FunctionFragment;\n    \"tokenBatchTransferFrom(address,(address,address,uint256)[])\": FunctionFragment;\n    \"tokenDecreaseAllowance(address,address,uint256)\": FunctionFragment;\n    \"tokenIncreaseAllowance(address,address,uint256)\": FunctionFragment;\n    \"tokenLock(address,(address,address,uint256,uint256))\": FunctionFragment;\n    \"tokenTransfer(address,address,uint256)\": FunctionFragment;\n    \"tokenTransferFrom(address,address,address,uint256)\": FunctionFragment;\n    \"updateAssetImpl(address)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"createAsset\"\n      | \"createAsset((bytes32,bytes32,address,string,string))\"\n      | \"getAllTokens\"\n      | \"getAllTokens()\"\n      | \"getTokenInfo\"\n      | \"getTokenInfo(address)\"\n      | \"isAssetExists\"\n      | \"isAssetExists(address)\"\n      | \"isTokenExists\"\n      | \"isTokenExists(address)\"\n      | \"predictAddress\"\n      | \"predictAddress(address,bytes32)\"\n      | \"registerToken\"\n      | \"registerToken(address)\"\n      | \"removeAsset\"\n      | \"removeAsset(address)\"\n      | \"setSafeModeToken\"\n      | \"setSafeModeToken(address,bool)\"\n      | \"tokenApprove\"\n      | \"tokenApprove(address,address,uint256)\"\n      | \"tokenBatchLock\"\n      | \"tokenBatchLock(address,(address,address,uint256,uint256)[])\"\n      | \"tokenBatchTransfer\"\n      | \"tokenBatchTransfer(address,(address,uint256)[])\"\n      | \"tokenBatchTransferFrom\"\n      | \"tokenBatchTransferFrom(address,(address,address,uint256)[])\"\n      | \"tokenDecreaseAllowance\"\n      | \"tokenDecreaseAllowance(address,address,uint256)\"\n      | \"tokenIncreaseAllowance\"\n      | \"tokenIncreaseAllowance(address,address,uint256)\"\n      | \"tokenLock\"\n      | \"tokenLock(address,(address,address,uint256,uint256))\"\n      | \"tokenTransfer\"\n      | \"tokenTransfer(address,address,uint256)\"\n      | \"tokenTransferFrom\"\n      | \"tokenTransferFrom(address,address,address,uint256)\"\n      | \"updateAssetImpl\"\n      | \"updateAssetImpl(address)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"createAsset\",\n    values: [IAssetManagerERC20.CreateAssetRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"createAsset((bytes32,bytes32,address,string,string))\",\n    values: [IAssetManagerERC20.CreateAssetRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getAllTokens\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getAllTokens()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getTokenInfo\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getTokenInfo(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isAssetExists\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isAssetExists(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isTokenExists\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isTokenExists(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"predictAddress\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"predictAddress(address,bytes32)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerToken\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registerToken(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"removeAsset\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"removeAsset(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeModeToken\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setSafeModeToken(address,bool)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenApprove\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenApprove(address,address,uint256)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchLock\",\n    values: [PromiseOrValue<string>, IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchLock(address,(address,address,uint256,uint256)[])\",\n    values: [PromiseOrValue<string>, IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransfer\",\n    values: [PromiseOrValue<string>, IERC20Extra.BatchTransferRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransfer(address,(address,uint256)[])\",\n    values: [PromiseOrValue<string>, IERC20Extra.BatchTransferRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransferFrom\",\n    values: [\n      PromiseOrValue<string>,\n      IERC20Extra.BatchTransferFromRequestStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransferFrom(address,(address,address,uint256)[])\",\n    values: [\n      PromiseOrValue<string>,\n      IERC20Extra.BatchTransferFromRequestStruct[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenDecreaseAllowance\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenDecreaseAllowance(address,address,uint256)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenIncreaseAllowance\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenIncreaseAllowance(address,address,uint256)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenLock\",\n    values: [PromiseOrValue<string>, IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenLock(address,(address,address,uint256,uint256))\",\n    values: [PromiseOrValue<string>, IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransfer\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransfer(address,address,uint256)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransferFrom\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransferFrom(address,address,address,uint256)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateAssetImpl\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateAssetImpl(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"createAsset\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"createAsset((bytes32,bytes32,address,string,string))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getAllTokens\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getAllTokens()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getTokenInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getTokenInfo(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isAssetExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isAssetExists(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isTokenExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isTokenExists(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"predictAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"predictAddress(address,bytes32)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registerToken(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"removeAsset\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"removeAsset(address)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeModeToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setSafeModeToken(address,bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenApprove\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenApprove(address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchLock\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchLock(address,(address,address,uint256,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransfer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransfer(address,(address,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransferFrom(address,(address,address,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenDecreaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenDecreaseAllowance(address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenIncreaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenIncreaseAllowance(address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"tokenLock\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenLock(address,(address,address,uint256,uint256))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransfer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransfer(address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransferFrom(address,address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateAssetImpl\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateAssetImpl(address)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"AssetCreated(address,address,address,address)\": EventFragment;\n    \"AssetImplUpdated(address,address)\": EventFragment;\n    \"AssetRemoved(address,address,address)\": EventFragment;\n    \"TokenRegistered(address,address,string,string)\": EventFragment;\n    \"TokenSafeModeChanged(address,address,bool)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"AssetCreated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AssetCreated(address,address,address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"AssetImplUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AssetImplUpdated(address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"AssetRemoved\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AssetRemoved(address,address,address)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenRegistered\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenRegistered(address,address,string,string)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokenSafeModeChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"TokenSafeModeChanged(address,address,bool)\"\n  ): EventFragment;\n}\n\nexport interface AssetCreatedEventObject {\n  sender: string;\n  assetId: string;\n  tokenId: string;\n  assetImpl: string;\n}\nexport type AssetCreatedEvent = TypedEvent<\n  [string, string, string, string],\n  AssetCreatedEventObject\n>;\n\nexport type AssetCreatedEventFilter = TypedEventFilter<AssetCreatedEvent>;\n\nexport interface AssetImplUpdatedEventObject {\n  sender: string;\n  assetImpl: string;\n}\nexport type AssetImplUpdatedEvent = TypedEvent<\n  [string, string],\n  AssetImplUpdatedEventObject\n>;\n\nexport type AssetImplUpdatedEventFilter =\n  TypedEventFilter<AssetImplUpdatedEvent>;\n\nexport interface AssetRemovedEventObject {\n  sender: string;\n  assetId: string;\n  tokenId: string;\n}\nexport type AssetRemovedEvent = TypedEvent<\n  [string, string, string],\n  AssetRemovedEventObject\n>;\n\nexport type AssetRemovedEventFilter = TypedEventFilter<AssetRemovedEvent>;\n\nexport interface TokenRegisteredEventObject {\n  sender: string;\n  tokenId: string;\n  tokenName: string;\n  tokenSymbol: string;\n}\nexport type TokenRegisteredEvent = TypedEvent<\n  [string, string, string, string],\n  TokenRegisteredEventObject\n>;\n\nexport type TokenRegisteredEventFilter = TypedEventFilter<TokenRegisteredEvent>;\n\nexport interface TokenSafeModeChangedEventObject {\n  sender: string;\n  tokenId: string;\n  isEnabled: boolean;\n}\nexport type TokenSafeModeChangedEvent = TypedEvent<\n  [string, string, boolean],\n  TokenSafeModeChangedEventObject\n>;\n\nexport type TokenSafeModeChangedEventFilter =\n  TypedEventFilter<TokenSafeModeChangedEvent>;\n\nexport interface IAssetManagerERC20 extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IAssetManagerERC20Interface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    createAsset(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"createAsset((bytes32,bytes32,address,string,string))\"(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    getAllTokens(overrides?: CallOverrides): Promise<[string[]]>;\n\n    \"getAllTokens()\"(overrides?: CallOverrides): Promise<[string[]]>;\n\n    getTokenInfo(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[number, string[]]>;\n\n    \"getTokenInfo(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[number, string[]]>;\n\n    isAssetExists(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isAssetExists(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isTokenExists(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"isTokenExists(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    predictAddress(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    \"predictAddress(address,bytes32)\"(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    registerToken(\n      tokenId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"registerToken(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    removeAsset(\n      assetId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"removeAsset(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setSafeModeToken(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"setSafeModeToken(address,bool)\"(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenApprove(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenApprove(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenBatchLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenBatchLock(address,(address,address,uint256,uint256)[])\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenBatchTransfer(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenBatchTransfer(address,(address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenBatchTransferFrom(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenBatchTransferFrom(address,(address,address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenDecreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenDecreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenIncreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenIncreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenLock(address,(address,address,uint256,uint256))\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenTransfer(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenTransfer(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenTransferFrom(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenTransferFrom(address,address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    updateAssetImpl(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"updateAssetImpl(address)\"(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  createAsset(\n    request: IAssetManagerERC20.CreateAssetRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"createAsset((bytes32,bytes32,address,string,string))\"(\n    request: IAssetManagerERC20.CreateAssetRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  getAllTokens(overrides?: CallOverrides): Promise<string[]>;\n\n  \"getAllTokens()\"(overrides?: CallOverrides): Promise<string[]>;\n\n  getTokenInfo(\n    tokenId: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[number, string[]]>;\n\n  \"getTokenInfo(address)\"(\n    tokenId: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<[number, string[]]>;\n\n  isAssetExists(\n    assetId: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isAssetExists(address)\"(\n    assetId: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isTokenExists(\n    tokenId: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"isTokenExists(address)\"(\n    tokenId: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  predictAddress(\n    base: PromiseOrValue<string>,\n    salt: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  \"predictAddress(address,bytes32)\"(\n    base: PromiseOrValue<string>,\n    salt: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  registerToken(\n    tokenId: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"registerToken(address)\"(\n    tokenId: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  removeAsset(\n    assetId: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"removeAsset(address)\"(\n    assetId: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setSafeModeToken(\n    tokenId: PromiseOrValue<string>,\n    isEnabled: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"setSafeModeToken(address,bool)\"(\n    tokenId: PromiseOrValue<string>,\n    isEnabled: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenApprove(\n    assetId: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenApprove(address,address,uint256)\"(\n    assetId: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenBatchLock(\n    tokenId: PromiseOrValue<string>,\n    lockRequests: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenBatchLock(address,(address,address,uint256,uint256)[])\"(\n    tokenId: PromiseOrValue<string>,\n    lockRequests: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenBatchTransfer(\n    assetId: PromiseOrValue<string>,\n    request: IERC20Extra.BatchTransferRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenBatchTransfer(address,(address,uint256)[])\"(\n    assetId: PromiseOrValue<string>,\n    request: IERC20Extra.BatchTransferRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenBatchTransferFrom(\n    assetId: PromiseOrValue<string>,\n    request: IERC20Extra.BatchTransferFromRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenBatchTransferFrom(address,(address,address,uint256)[])\"(\n    assetId: PromiseOrValue<string>,\n    request: IERC20Extra.BatchTransferFromRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenDecreaseAllowance(\n    assetId: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenDecreaseAllowance(address,address,uint256)\"(\n    assetId: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenIncreaseAllowance(\n    assetId: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenIncreaseAllowance(address,address,uint256)\"(\n    assetId: PromiseOrValue<string>,\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenLock(\n    tokenId: PromiseOrValue<string>,\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenLock(address,(address,address,uint256,uint256))\"(\n    tokenId: PromiseOrValue<string>,\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenTransfer(\n    assetId: PromiseOrValue<string>,\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenTransfer(address,address,uint256)\"(\n    assetId: PromiseOrValue<string>,\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenTransferFrom(\n    assetId: PromiseOrValue<string>,\n    from: PromiseOrValue<string>,\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenTransferFrom(address,address,address,uint256)\"(\n    assetId: PromiseOrValue<string>,\n    from: PromiseOrValue<string>,\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  updateAssetImpl(\n    assetImpl: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"updateAssetImpl(address)\"(\n    assetImpl: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    createAsset(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"createAsset((bytes32,bytes32,address,string,string))\"(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    getAllTokens(overrides?: CallOverrides): Promise<string[]>;\n\n    \"getAllTokens()\"(overrides?: CallOverrides): Promise<string[]>;\n\n    getTokenInfo(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[number, string[]]>;\n\n    \"getTokenInfo(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[number, string[]]>;\n\n    isAssetExists(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isAssetExists(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isTokenExists(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"isTokenExists(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    predictAddress(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"predictAddress(address,bytes32)\"(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    registerToken(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"registerToken(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    removeAsset(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"removeAsset(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    setSafeModeToken(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"setSafeModeToken(address,bool)\"(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenApprove(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenApprove(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenBatchLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"tokenBatchLock(address,(address,address,uint256,uint256)[])\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    tokenBatchTransfer(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenBatchTransfer(address,(address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenBatchTransferFrom(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenBatchTransferFrom(address,(address,address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenDecreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"tokenDecreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    tokenIncreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"tokenIncreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    tokenLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"tokenLock(address,(address,address,uint256,uint256))\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    tokenTransfer(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenTransfer(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenTransferFrom(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenTransferFrom(address,address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    updateAssetImpl(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"updateAssetImpl(address)\"(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n  };\n\n  filters: {\n    \"AssetCreated(address,address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      assetId?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null,\n      assetImpl?: null\n    ): AssetCreatedEventFilter;\n    AssetCreated(\n      sender?: PromiseOrValue<string> | null,\n      assetId?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null,\n      assetImpl?: null\n    ): AssetCreatedEventFilter;\n\n    \"AssetImplUpdated(address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      assetImpl?: PromiseOrValue<string> | null\n    ): AssetImplUpdatedEventFilter;\n    AssetImplUpdated(\n      sender?: PromiseOrValue<string> | null,\n      assetImpl?: PromiseOrValue<string> | null\n    ): AssetImplUpdatedEventFilter;\n\n    \"AssetRemoved(address,address,address)\"(\n      sender?: PromiseOrValue<string> | null,\n      assetId?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null\n    ): AssetRemovedEventFilter;\n    AssetRemoved(\n      sender?: PromiseOrValue<string> | null,\n      assetId?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null\n    ): AssetRemovedEventFilter;\n\n    \"TokenRegistered(address,address,string,string)\"(\n      sender?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null,\n      tokenName?: null,\n      tokenSymbol?: null\n    ): TokenRegisteredEventFilter;\n    TokenRegistered(\n      sender?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null,\n      tokenName?: null,\n      tokenSymbol?: null\n    ): TokenRegisteredEventFilter;\n\n    \"TokenSafeModeChanged(address,address,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null,\n      isEnabled?: null\n    ): TokenSafeModeChangedEventFilter;\n    TokenSafeModeChanged(\n      sender?: PromiseOrValue<string> | null,\n      tokenId?: PromiseOrValue<string> | null,\n      isEnabled?: null\n    ): TokenSafeModeChangedEventFilter;\n  };\n\n  estimateGas: {\n    createAsset(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"createAsset((bytes32,bytes32,address,string,string))\"(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    getAllTokens(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"getAllTokens()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getTokenInfo(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"getTokenInfo(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isAssetExists(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isAssetExists(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isTokenExists(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"isTokenExists(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    predictAddress(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"predictAddress(address,bytes32)\"(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    registerToken(\n      tokenId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"registerToken(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    removeAsset(\n      assetId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"removeAsset(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setSafeModeToken(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"setSafeModeToken(address,bool)\"(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenApprove(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenApprove(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenBatchLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenBatchLock(address,(address,address,uint256,uint256)[])\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenBatchTransfer(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenBatchTransfer(address,(address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenBatchTransferFrom(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenBatchTransferFrom(address,(address,address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenDecreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenDecreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenIncreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenIncreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenLock(address,(address,address,uint256,uint256))\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenTransfer(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenTransfer(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenTransferFrom(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenTransferFrom(address,address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    updateAssetImpl(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"updateAssetImpl(address)\"(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    createAsset(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"createAsset((bytes32,bytes32,address,string,string))\"(\n      request: IAssetManagerERC20.CreateAssetRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    getAllTokens(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"getAllTokens()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getTokenInfo(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"getTokenInfo(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isAssetExists(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isAssetExists(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isTokenExists(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"isTokenExists(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    predictAddress(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"predictAddress(address,bytes32)\"(\n      base: PromiseOrValue<string>,\n      salt: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    registerToken(\n      tokenId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"registerToken(address)\"(\n      tokenId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    removeAsset(\n      assetId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"removeAsset(address)\"(\n      assetId: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setSafeModeToken(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"setSafeModeToken(address,bool)\"(\n      tokenId: PromiseOrValue<string>,\n      isEnabled: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenApprove(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenApprove(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenBatchLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenBatchLock(address,(address,address,uint256,uint256)[])\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenBatchTransfer(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenBatchTransfer(address,(address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenBatchTransferFrom(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenBatchTransferFrom(address,(address,address,uint256)[])\"(\n      assetId: PromiseOrValue<string>,\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenDecreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenDecreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenIncreaseAllowance(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenIncreaseAllowance(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenLock(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenLock(address,(address,address,uint256,uint256))\"(\n      tokenId: PromiseOrValue<string>,\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenTransfer(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenTransfer(address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenTransferFrom(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenTransferFrom(address,address,address,uint256)\"(\n      assetId: PromiseOrValue<string>,\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    updateAssetImpl(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"updateAssetImpl(address)\"(\n      assetImpl: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}