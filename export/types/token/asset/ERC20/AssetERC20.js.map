{"version":3,"file":"AssetERC20.js","sourceRoot":"","sources":["../../../../../../typechain/types/token/asset/ERC20/AssetERC20.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../../../common\";\n\nexport declare namespace AssetERC20 {\n  export type InitRequestStruct = {\n    domainName: PromiseOrValue<string>;\n    domainVersion: PromiseOrValue<string>;\n    domainRealm: PromiseOrValue<BytesLike>;\n    erc20Token: PromiseOrValue<string>;\n    accessControl: PromiseOrValue<string>;\n    assetManager: PromiseOrValue<string>;\n    assetRole: PromiseOrValue<BytesLike>;\n    salt: PromiseOrValue<BytesLike>;\n    bytesHash: PromiseOrValue<BytesLike>;\n    signature: PromiseOrValue<BytesLike>;\n  };\n\n  export type InitRequestStructOutput = [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string\n  ] & {\n    domainName: string;\n    domainVersion: string;\n    domainRealm: string;\n    erc20Token: string;\n    accessControl: string;\n    assetManager: string;\n    assetRole: string;\n    salt: string;\n    bytesHash: string;\n    signature: string;\n  };\n}\n\nexport declare namespace IERC20Lock {\n  export type LockTokenRequestStruct = {\n    source: PromiseOrValue<string>;\n    dest: PromiseOrValue<string>;\n    timestamp: PromiseOrValue<BigNumberish>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type LockTokenRequestStructOutput = [\n    string,\n    string,\n    BigNumber,\n    BigNumber\n  ] & { source: string; dest: string; timestamp: BigNumber; amount: BigNumber };\n}\n\nexport declare namespace IERC20Extra {\n  export type BatchTransferRequestStruct = {\n    to: PromiseOrValue<string>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type BatchTransferRequestStructOutput = [string, BigNumber] & {\n    to: string;\n    amount: BigNumber;\n  };\n\n  export type BatchTransferFromRequestStruct = {\n    from: PromiseOrValue<string>;\n    to: PromiseOrValue<string>;\n    amount: PromiseOrValue<BigNumberish>;\n  };\n\n  export type BatchTransferFromRequestStructOutput = [\n    string,\n    string,\n    BigNumber\n  ] & { from: string; to: string; amount: BigNumber };\n}\n\nexport interface AssetERC20Interface extends utils.Interface {\n  functions: {\n    \"assetBalance()\": FunctionFragment;\n    \"assetInitVersion()\": FunctionFragment;\n    \"assetName()\": FunctionFragment;\n    \"assetRealm()\": FunctionFragment;\n    \"assetRole()\": FunctionFragment;\n    \"assetSafeMode()\": FunctionFragment;\n    \"assetSafeModeSet(bool)\": FunctionFragment;\n    \"assetToken()\": FunctionFragment;\n    \"assetType()\": FunctionFragment;\n    \"assetVersion()\": FunctionFragment;\n    \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"tokenApprove(address,uint256)\": FunctionFragment;\n    \"tokenBalance()\": FunctionFragment;\n    \"tokenBatchLock((address,address,uint256,uint256)[])\": FunctionFragment;\n    \"tokenBatchTransfer((address,uint256)[])\": FunctionFragment;\n    \"tokenBatchTransferFrom((address,address,uint256)[])\": FunctionFragment;\n    \"tokenDecreaseAllowance(address,uint256)\": FunctionFragment;\n    \"tokenIncreaseAllowance(address,uint256)\": FunctionFragment;\n    \"tokenLock((address,address,uint256,uint256))\": FunctionFragment;\n    \"tokenTransfer(address,uint256)\": FunctionFragment;\n    \"tokenTransferFrom(address,address,uint256)\": FunctionFragment;\n    \"withdrawBalance(address)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"assetBalance\"\n      | \"assetBalance()\"\n      | \"assetInitVersion\"\n      | \"assetInitVersion()\"\n      | \"assetName\"\n      | \"assetName()\"\n      | \"assetRealm\"\n      | \"assetRealm()\"\n      | \"assetRole\"\n      | \"assetRole()\"\n      | \"assetSafeMode\"\n      | \"assetSafeMode()\"\n      | \"assetSafeModeSet\"\n      | \"assetSafeModeSet(bool)\"\n      | \"assetToken\"\n      | \"assetToken()\"\n      | \"assetType\"\n      | \"assetType()\"\n      | \"assetVersion\"\n      | \"assetVersion()\"\n      | \"initialize\"\n      | \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\"\n      | \"supportsInterface\"\n      | \"supportsInterface(bytes4)\"\n      | \"tokenApprove\"\n      | \"tokenApprove(address,uint256)\"\n      | \"tokenBalance\"\n      | \"tokenBalance()\"\n      | \"tokenBatchLock\"\n      | \"tokenBatchLock((address,address,uint256,uint256)[])\"\n      | \"tokenBatchTransfer\"\n      | \"tokenBatchTransfer((address,uint256)[])\"\n      | \"tokenBatchTransferFrom\"\n      | \"tokenBatchTransferFrom((address,address,uint256)[])\"\n      | \"tokenDecreaseAllowance\"\n      | \"tokenDecreaseAllowance(address,uint256)\"\n      | \"tokenIncreaseAllowance\"\n      | \"tokenIncreaseAllowance(address,uint256)\"\n      | \"tokenLock\"\n      | \"tokenLock((address,address,uint256,uint256))\"\n      | \"tokenTransfer\"\n      | \"tokenTransfer(address,uint256)\"\n      | \"tokenTransferFrom\"\n      | \"tokenTransferFrom(address,address,uint256)\"\n      | \"withdrawBalance\"\n      | \"withdrawBalance(address)\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"assetBalance\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetBalance()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetInitVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetInitVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"assetName\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"assetName()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetRealm\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetRealm()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"assetRole\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"assetRole()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetSafeMode\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetSafeMode()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetSafeModeSet\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetSafeModeSet(bool)\",\n    values: [PromiseOrValue<boolean>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetToken\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetToken()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"assetType\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"assetType()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"assetVersion()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [AssetERC20.InitRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\",\n    values: [AssetERC20.InitRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface(bytes4)\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenApprove\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenApprove(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBalance\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBalance()\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchLock\",\n    values: [IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchLock((address,address,uint256,uint256)[])\",\n    values: [IERC20Lock.LockTokenRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransfer\",\n    values: [IERC20Extra.BatchTransferRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransfer((address,uint256)[])\",\n    values: [IERC20Extra.BatchTransferRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransferFrom\",\n    values: [IERC20Extra.BatchTransferFromRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenBatchTransferFrom((address,address,uint256)[])\",\n    values: [IERC20Extra.BatchTransferFromRequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenDecreaseAllowance\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenDecreaseAllowance(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenIncreaseAllowance\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenIncreaseAllowance(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenLock\",\n    values: [IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenLock((address,address,uint256,uint256))\",\n    values: [IERC20Lock.LockTokenRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransfer\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransfer(address,uint256)\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransferFrom\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"tokenTransferFrom(address,address,uint256)\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawBalance(address)\",\n    values: [PromiseOrValue<string>]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"assetBalance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetBalance()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetInitVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetInitVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"assetName\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetName()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"assetRealm\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetRealm()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"assetRole\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetRole()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetSafeMode\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetSafeMode()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetSafeModeSet\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetSafeModeSet(bool)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"assetToken\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetToken()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"assetType\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetType()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"assetVersion()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface(bytes4)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenApprove\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenApprove(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBalance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBalance()\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchLock\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchLock((address,address,uint256,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransfer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransfer((address,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenBatchTransferFrom((address,address,uint256)[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenDecreaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenDecreaseAllowance(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenIncreaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenIncreaseAllowance(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"tokenLock\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenLock((address,address,uint256,uint256))\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransfer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransfer(address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"tokenTransferFrom(address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawBalance(address)\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"AssetERC20Called(address,address,bytes4)\": EventFragment;\n    \"AssetInitialized(address,address,string,string,bytes32)\": EventFragment;\n    \"AssetSafeModeChanged(address,address,bytes32,bool)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"AssetERC20Called\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AssetERC20Called(address,address,bytes4)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"AssetInitialized\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AssetInitialized(address,address,string,string,bytes32)\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"AssetSafeModeChanged\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"AssetSafeModeChanged(address,address,bytes32,bool)\"\n  ): EventFragment;\n}\n\nexport interface AssetERC20CalledEventObject {\n  sender: string;\n  contractId: string;\n  functionSelector: string;\n}\nexport type AssetERC20CalledEvent = TypedEvent<\n  [string, string, string],\n  AssetERC20CalledEventObject\n>;\n\nexport type AssetERC20CalledEventFilter =\n  TypedEventFilter<AssetERC20CalledEvent>;\n\nexport interface AssetInitializedEventObject {\n  sender: string;\n  assetId: string;\n  name: string;\n  version: string;\n  realm: string;\n}\nexport type AssetInitializedEvent = TypedEvent<\n  [string, string, string, string, string],\n  AssetInitializedEventObject\n>;\n\nexport type AssetInitializedEventFilter =\n  TypedEventFilter<AssetInitializedEvent>;\n\nexport interface AssetSafeModeChangedEventObject {\n  sender: string;\n  proxy: string;\n  realm: string;\n  status: boolean;\n}\nexport type AssetSafeModeChangedEvent = TypedEvent<\n  [string, string, string, boolean],\n  AssetSafeModeChangedEventObject\n>;\n\nexport type AssetSafeModeChangedEventFilter =\n  TypedEventFilter<AssetSafeModeChangedEvent>;\n\nexport interface AssetERC20 extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: AssetERC20Interface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    assetBalance(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    \"assetBalance()\"(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    assetInitVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    \"assetInitVersion()\"(overrides?: CallOverrides): Promise<[number]>;\n\n    assetName(overrides?: CallOverrides): Promise<[string]>;\n\n    \"assetName()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    assetRealm(overrides?: CallOverrides): Promise<[string]>;\n\n    \"assetRealm()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    assetRole(overrides?: CallOverrides): Promise<[string]>;\n\n    \"assetRole()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    assetSafeMode(overrides?: CallOverrides): Promise<[boolean]>;\n\n    \"assetSafeMode()\"(overrides?: CallOverrides): Promise<[boolean]>;\n\n    assetSafeModeSet(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"assetSafeModeSet(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    assetToken(overrides?: CallOverrides): Promise<[string]>;\n\n    \"assetToken()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    assetType(overrides?: CallOverrides): Promise<[number]>;\n\n    \"assetType()\"(overrides?: CallOverrides): Promise<[number]>;\n\n    assetVersion(overrides?: CallOverrides): Promise<[string]>;\n\n    \"assetVersion()\"(overrides?: CallOverrides): Promise<[string]>;\n\n    initialize(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\"(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    tokenApprove(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenApprove(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenBalance(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    \"tokenBalance()\"(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    tokenBatchLock(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenBatchLock((address,address,uint256,uint256)[])\"(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenBatchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenBatchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenBatchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenBatchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenDecreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenDecreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenIncreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenIncreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenLock(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenLock((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenTransfer(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenTransfer(address,uint256)\"(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    tokenTransferFrom(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"tokenTransferFrom(address,address,uint256)\"(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  assetBalance(overrides?: CallOverrides): Promise<BigNumber>;\n\n  \"assetBalance()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n  assetInitVersion(overrides?: CallOverrides): Promise<number>;\n\n  \"assetInitVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n  assetName(overrides?: CallOverrides): Promise<string>;\n\n  \"assetName()\"(overrides?: CallOverrides): Promise<string>;\n\n  assetRealm(overrides?: CallOverrides): Promise<string>;\n\n  \"assetRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n  assetRole(overrides?: CallOverrides): Promise<string>;\n\n  \"assetRole()\"(overrides?: CallOverrides): Promise<string>;\n\n  assetSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n  \"assetSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n  assetSafeModeSet(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"assetSafeModeSet(bool)\"(\n    status: PromiseOrValue<boolean>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  assetToken(overrides?: CallOverrides): Promise<string>;\n\n  \"assetToken()\"(overrides?: CallOverrides): Promise<string>;\n\n  assetType(overrides?: CallOverrides): Promise<number>;\n\n  \"assetType()\"(overrides?: CallOverrides): Promise<number>;\n\n  assetVersion(overrides?: CallOverrides): Promise<string>;\n\n  \"assetVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n  initialize(\n    request: AssetERC20.InitRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\"(\n    request: AssetERC20.InitRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  supportsInterface(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  \"supportsInterface(bytes4)\"(\n    interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  tokenApprove(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenApprove(address,uint256)\"(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenBalance(overrides?: CallOverrides): Promise<BigNumber>;\n\n  \"tokenBalance()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n  tokenBatchLock(\n    lockRequests: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenBatchLock((address,address,uint256,uint256)[])\"(\n    lockRequests: IERC20Lock.LockTokenRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenBatchTransfer(\n    request: IERC20Extra.BatchTransferRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenBatchTransfer((address,uint256)[])\"(\n    request: IERC20Extra.BatchTransferRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenBatchTransferFrom(\n    request: IERC20Extra.BatchTransferFromRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenBatchTransferFrom((address,address,uint256)[])\"(\n    request: IERC20Extra.BatchTransferFromRequestStruct[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenDecreaseAllowance(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenDecreaseAllowance(address,uint256)\"(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenIncreaseAllowance(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenIncreaseAllowance(address,uint256)\"(\n    spender: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenLock(\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenLock((address,address,uint256,uint256))\"(\n    lockRequest: IERC20Lock.LockTokenRequestStruct,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenTransfer(\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenTransfer(address,uint256)\"(\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  tokenTransferFrom(\n    from: PromiseOrValue<string>,\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"tokenTransferFrom(address,address,uint256)\"(\n    from: PromiseOrValue<string>,\n    to: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  withdrawBalance(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  \"withdrawBalance(address)\"(\n    recepient: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    assetBalance(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetBalance()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetInitVersion(overrides?: CallOverrides): Promise<number>;\n\n    \"assetInitVersion()\"(overrides?: CallOverrides): Promise<number>;\n\n    assetName(overrides?: CallOverrides): Promise<string>;\n\n    \"assetName()\"(overrides?: CallOverrides): Promise<string>;\n\n    assetRealm(overrides?: CallOverrides): Promise<string>;\n\n    \"assetRealm()\"(overrides?: CallOverrides): Promise<string>;\n\n    assetRole(overrides?: CallOverrides): Promise<string>;\n\n    \"assetRole()\"(overrides?: CallOverrides): Promise<string>;\n\n    assetSafeMode(overrides?: CallOverrides): Promise<boolean>;\n\n    \"assetSafeMode()\"(overrides?: CallOverrides): Promise<boolean>;\n\n    assetSafeModeSet(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"assetSafeModeSet(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    assetToken(overrides?: CallOverrides): Promise<string>;\n\n    \"assetToken()\"(overrides?: CallOverrides): Promise<string>;\n\n    assetType(overrides?: CallOverrides): Promise<number>;\n\n    \"assetType()\"(overrides?: CallOverrides): Promise<number>;\n\n    assetVersion(overrides?: CallOverrides): Promise<string>;\n\n    \"assetVersion()\"(overrides?: CallOverrides): Promise<string>;\n\n    initialize(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\"(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenApprove(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenApprove(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenBalance(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"tokenBalance()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    tokenBatchLock(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    \"tokenBatchLock((address,address,uint256,uint256)[])\"(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<string[]>;\n\n    tokenBatchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenBatchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenBatchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenBatchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenDecreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"tokenDecreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    tokenIncreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"tokenIncreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    tokenLock(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    \"tokenLock((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    tokenTransfer(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenTransfer(address,uint256)\"(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    tokenTransferFrom(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    \"tokenTransferFrom(address,address,uint256)\"(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"AssetERC20Called(address,address,bytes4)\"(\n      sender?: PromiseOrValue<string> | null,\n      contractId?: PromiseOrValue<string> | null,\n      functionSelector?: PromiseOrValue<BytesLike> | null\n    ): AssetERC20CalledEventFilter;\n    AssetERC20Called(\n      sender?: PromiseOrValue<string> | null,\n      contractId?: PromiseOrValue<string> | null,\n      functionSelector?: PromiseOrValue<BytesLike> | null\n    ): AssetERC20CalledEventFilter;\n\n    \"AssetInitialized(address,address,string,string,bytes32)\"(\n      sender?: PromiseOrValue<string> | null,\n      assetId?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null\n    ): AssetInitializedEventFilter;\n    AssetInitialized(\n      sender?: PromiseOrValue<string> | null,\n      assetId?: PromiseOrValue<string> | null,\n      name?: null,\n      version?: null,\n      realm?: null\n    ): AssetInitializedEventFilter;\n\n    \"AssetSafeModeChanged(address,address,bytes32,bool)\"(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): AssetSafeModeChangedEventFilter;\n    AssetSafeModeChanged(\n      sender?: PromiseOrValue<string> | null,\n      proxy?: PromiseOrValue<string> | null,\n      realm?: PromiseOrValue<BytesLike> | null,\n      status?: null\n    ): AssetSafeModeChangedEventFilter;\n  };\n\n  estimateGas: {\n    assetBalance(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetBalance()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetInitVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetInitVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetName(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetName()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetRealm(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetRealm()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetRole(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetRole()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetSafeMode(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetSafeMode()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetSafeModeSet(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"assetSafeModeSet(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    assetToken(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetToken()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetType(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetType()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    assetVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"assetVersion()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    initialize(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\"(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    tokenApprove(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenApprove(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenBalance(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"tokenBalance()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    tokenBatchLock(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenBatchLock((address,address,uint256,uint256)[])\"(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenBatchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenBatchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenBatchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenBatchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenDecreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenDecreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenIncreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenIncreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenLock(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenLock((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenTransfer(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenTransfer(address,uint256)\"(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    tokenTransferFrom(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"tokenTransferFrom(address,address,uint256)\"(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    assetBalance(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetBalance()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    assetInitVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetInitVersion()\"(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    assetName(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetName()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    assetRealm(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetRealm()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    assetRole(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetRole()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    assetSafeMode(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetSafeMode()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    assetSafeModeSet(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"assetSafeModeSet(bool)\"(\n      status: PromiseOrValue<boolean>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    assetToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetToken()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    assetType(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetType()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    assetVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"assetVersion()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    initialize(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"initialize((string,string,bytes32,address,address,address,bytes32,bytes32,bytes32,bytes))\"(\n      request: AssetERC20.InitRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"supportsInterface(bytes4)\"(\n      interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    tokenApprove(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenApprove(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenBalance(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"tokenBalance()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    tokenBatchLock(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenBatchLock((address,address,uint256,uint256)[])\"(\n      lockRequests: IERC20Lock.LockTokenRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenBatchTransfer(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenBatchTransfer((address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenBatchTransferFrom(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenBatchTransferFrom((address,address,uint256)[])\"(\n      request: IERC20Extra.BatchTransferFromRequestStruct[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenDecreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenDecreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenIncreaseAllowance(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenIncreaseAllowance(address,uint256)\"(\n      spender: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenLock(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenLock((address,address,uint256,uint256))\"(\n      lockRequest: IERC20Lock.LockTokenRequestStruct,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenTransfer(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenTransfer(address,uint256)\"(\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    tokenTransferFrom(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"tokenTransferFrom(address,address,uint256)\"(\n      from: PromiseOrValue<string>,\n      to: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    withdrawBalance(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"withdrawBalance(address)\"(\n      recepient: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}