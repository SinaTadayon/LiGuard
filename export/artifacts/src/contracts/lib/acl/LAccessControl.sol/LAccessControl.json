{
  "contractName": "LAccessControl",
  "sourceName": "src/contracts/lib/acl/LAccessControl.sol",
  "abi": [
    {
      "inputs": [],
      "name": "LIB_NAME",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIB_VERSION",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ANONYMOUS_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ASSET_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ASSET_GROUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ASSET_MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ASSET_REALM",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_COMMUNITY_DAO_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_DAO_GROUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_GENERAL_GROUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_GENERAL_REALM",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_SYSTEM_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createRequestContext",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "bytes4[]",
              "name": "funcSelectors",
              "type": "bytes4[]"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            }
          ],
          "internalType": "struct IContextManagement.RequestRegisterContext[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061025d5760003560e01c806387d8e2b011610150578063c0a8ca0c116100cd578063d98ef62211610091578063d98ef622146104b1578063dd15702c146104c4578063e99b513a146104d7578063e9cfb672146104ea578063efec2d5e146104fd578063f0984ee61461051057600080fd5b8063c0a8ca0c1461045d578063cb4a1bb714610470578063cc6c326814610483578063ce34a66d14610496578063d8b31999146104a957600080fd5b8063a619675711610114578063a61967571461041f578063afb9270614610427578063b019d53a1461043a578063b899699c1461044d578063bec947511461045557600080fd5b806387d8e2b0146103a057806389b5a834146103cf5780639bb20d51146103e25780639fa79bf8146103ea578063a5f1e2fe1461040c57600080fd5b80634df89d6f116101de5780635f6cef3c116101a25780635f6cef3c1461035557806362f3c2d41461035d5780636787ad51146103725780636ac58ac11461038557806385de33361461038d57600080fd5b80634df89d6f14610301578063513d425a146103145780635632ffd8146103275780635a96334b1461032f5780635b8ba8981461034257600080fd5b80633167d0c4116102255780633167d0c4146102b8578063337cd188146102cb57806336206f04146102de57806337f4c930146102e65780634c95d60d146102f957600080fd5b8063108f5bdc1461026257806316b714ad1461027d57806320dd27af146102a05780632466209b146102a85780632d8bc9cb146102b0575b600080fd5b61026a610523565b6040519081526020015b60405180910390f35b61029061028b36600461290e565b61054b565b6040519015158152602001610274565b61026a6105d1565b61026a6105e0565b61026a6105f9565b6102906102c636600461290e565b610608565b6102906102d936600461294c565b610658565b61026a6106c4565b6102906102f436600461290e565b6106d3565b61026a6106fc565b61029061030f36600461290e565b61070b565b610290610322366004612990565b61072c565b61026a61091a565b61029061033d36600461290e565b610929565b61029061035036600461294c565b61096e565b61026a610998565b6103656109be565b60405161027491906129d6565b61029061038036600461290e565b611456565b61026a611471565b61029061039b36600461294c565b611480565b6102906103ae36600461290e565b600090815260019182016020526040902001546001600160a01b0316151590565b6102906103dd36600461290e565b6114aa565b61026a6114ef565b8180156103f657600080fd5b5061040a610405366004612a8d565b611518565b005b61029061041a36600461290e565b612546565b61026a61258c565b61029061043536600461294c565b61259b565b61029061044836600461290e565b6125c5565b61026a612613565b61026a612622565b61029061046b36600461290e565b612644565b61029061047e36600461290e565b61269d565b61029061049136600461290e565b6126e2565b6102906104a436600461290e565b612700565b61026a612734565b6102906104bf36600461290e565b612743565b6102906104d2366004612aa6565b61275e565b6102906104e5366004612aa6565b6127cf565b6102906104f836600461294c565b61281b565b61029061050b36600461294c565b612845565b61029061051e36600461290e565b61286f565b60405160200161053290612adb565b6040516020818303038152906040528051906020012081565b600081815260018084016020908152604080842090920154825163be22465d60e01b815292516001600160a01b039091169263be22465d9260048083019391928290030181865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190612b00565b90505b92915050565b60405160200161053290612b29565b604051640312e302e360dc1b6020820152602501610532565b60405160200161053290612b49565b60006105c88284600301600060405160200161062390612b29565b60405160208183030381529060405280519060200120815260200190815260200160002060020161288a90919063ffffffff16565b6001600160a01b038116600090815260208381526040808320905160019284916106829101612b7b565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1660028111156106bc576106bc612b65565b149392505050565b60405160200161053290612b9f565b6000818152600383016020526040812080548291906106f190612bc2565b905011905092915050565b60405160200161053290612bfc565b6000818152600283016020526040812060010180548291906106f190612bc2565b600083815260018501602090815260408083206001600160e01b0319851684526002018252808320549051909161077f9101744c4956454c595f414e4f4e594d4f55535f524f4c4560581b815260150190565b60405160208183030381529060405280519060200120810361080d576000858152600187810160205260409091200154600160a01b900460ff1680156108055750600160008681526001808901602090815260408084206001600160e01b0319891685526002908101909252909220015460ff169081111561080357610803612b65565b145b915050610912565b6000858152600187810160205260409091200154600160a01b900460ff1680156108775750600160008681526001808901602090815260408084206001600160e01b0319891685526002908101909252909220015460ff169081111561087557610875612b65565b145b80156108a55750600085815260018088016020908152604080842054845260038a01909152909120015460ff165b80156108d35750600081815260028701602090815260408083205483526004890190915290206001015460ff165b8015610805575060016001600160a01b03851660009081526020888152604080832085845290915290205460ff16600281111561080357610803612b65565b949350505050565b60405160200161053290612b7b565b60008181526004830160205260408120805482919061094790612bc2565b90501180156105c85750506000908152600491909101602052604090206001015460ff1690565b6001600160a01b038116600090815260208381526040808320905160019284916106829101612c1a565b604051714c4956454c595f41535345545f5245414c4d60701b6020820152603201610532565b604080516002808252606082810190935260009190816020015b604080516060808201835260008083526020830191909152918101919091528152602001906001900390816109d8579050509050604051602001610a1b90612c64565b6040516020818303038152906040528051906020012081600081518110610a4457610a44612c81565b60200260200101516000018181525050600181600081518110610a6957610a69612c81565b602090810291909101810151911515604092830152815160178082526103008201909352919082016102e0803683370190505081600081518110610aaf57610aaf612c81565b6020026020010151602001819052506348e6be1c60e01b81600081518110610ad957610ad9612c81565b602002602001015160200151600081518110610af757610af7612c81565b6001600160e01b031990921660209283029190910190910152805163225bf2f960e11b908290600090610b2c57610b2c612c81565b602002602001015160200151600181518110610b4a57610b4a612c81565b6001600160e01b031990921660209283029190910190910152805163031c049360e01b908290600090610b7f57610b7f612c81565b602002602001015160200151600281518110610b9d57610b9d612c81565b6001600160e01b0319909216602092830291909101909101528051635ac4b36f60e11b908290600090610bd257610bd2612c81565b602002602001015160200151600381518110610bf057610bf0612c81565b6001600160e01b031990921660209283029190910190910152805163771bcf4560e01b908290600090610c2557610c25612c81565b602002602001015160200151600481518110610c4357610c43612c81565b6001600160e01b0319909216602092830291909101909101528051634346a04b60e01b908290600090610c7857610c78612c81565b602002602001015160200151600581518110610c9657610c96612c81565b6001600160e01b031990921660209283029190910190910152805163d338640160e01b908290600090610ccb57610ccb612c81565b602002602001015160200151600681518110610ce957610ce9612c81565b6001600160e01b03199092166020928302919091019091015280516370420ee360e01b908290600090610d1e57610d1e612c81565b602002602001015160200151600781518110610d3c57610d3c612c81565b6001600160e01b0319909216602092830291909101909101528051633cbe67e960e21b908290600090610d7157610d71612c81565b602002602001015160200151600881518110610d8f57610d8f612c81565b6001600160e01b031990921660209283029190910190910152805163b2dc26e560e01b908290600090610dc457610dc4612c81565b602002602001015160200151600981518110610de257610de2612c81565b6001600160e01b0319909216602092830291909101909101528051634f1d167560e11b908290600090610e1757610e17612c81565b602002602001015160200151600a81518110610e3557610e35612c81565b6001600160e01b03199092166020928302919091019091015280516308f09e0f60e41b908290600090610e6a57610e6a612c81565b602002602001015160200151600b81518110610e8857610e88612c81565b6001600160e01b03199092166020928302919091019091015280516393ba313160e01b908290600090610ebd57610ebd612c81565b602002602001015160200151600c81518110610edb57610edb612c81565b6001600160e01b031990921660209283029190910190910152805163df01de4560e01b908290600090610f1057610f10612c81565b602002602001015160200151600d81518110610f2e57610f2e612c81565b6001600160e01b03199092166020928302919091019091015280516362ab810560e11b908290600090610f6357610f63612c81565b602002602001015160200151600e81518110610f8157610f81612c81565b6001600160e01b031990921660209283029190910190910152805163738f112760e11b908290600090610fb657610fb6612c81565b602002602001015160200151600f81518110610fd457610fd4612c81565b6001600160e01b0319909216602092830291909101909101528051630dbf304b60e41b90829060009061100957611009612c81565b60200260200101516020015160108151811061102757611027612c81565b6001600160e01b03199092166020928302919091019091015280516307e9933760e31b90829060009061105c5761105c612c81565b60200260200101516020015160118151811061107a5761107a612c81565b6001600160e01b031990921660209283029190910190910152805163b6c03f0360e01b9082906000906110af576110af612c81565b6020026020010151602001516012815181106110cd576110cd612c81565b6001600160e01b03199092166020928302919091019091015280516312ec6fa360e21b90829060009061110257611102612c81565b60200260200101516020015160138151811061112057611120612c81565b6001600160e01b03199092166020928302919091019091015280516322df6f5b60e21b90829060009061115557611155612c81565b60200260200101516020015160148151811061117357611173612c81565b6001600160e01b031990921660209283029190910190910152805163f2c673bd60e01b9082906000906111a8576111a8612c81565b6020026020010151602001516015815181106111c6576111c6612c81565b60200260200101906001600160e01b03191690816001600160e01b031916815250507f756af45f4ce05d832bee0c171992c529ad6d3ca8e13303d78feace2f8fd7faf28160008151811061121c5761121c612c81565b60200260200101516020015160168151811061123a5761123a612c81565b6001600160e01b031990921660209283029190910182015260405161125f9101612b7b565b604051602081830303815290604052805190602001208160018151811061128857611288612c81565b602002602001015160000181815250506001816001815181106112ad576112ad612c81565b6020908102919091018101519115156040928301528151600480825260a082019093529190820160808036833701905050816001815181106112f1576112f1612c81565b60200260200101516020018190525063d9dc1f1960e01b8160018151811061131b5761131b612c81565b60200260200101516020015160008151811061133957611339612c81565b6001600160e01b0319909216602092830291909101909101528051637147855d60e01b908290600190811061137057611370612c81565b60200260200101516020015160018151811061138e5761138e612c81565b6001600160e01b03199092166020928302919091019091015280516378efa4ed60e11b90829060019081106113c5576113c5612c81565b6020026020010151602001516002815181106113e3576113e3612c81565b6001600160e01b03199092166020928302919091019091015280516371d569d960e01b908290600190811061141a5761141a612c81565b60200260200101516020015160038151811061143857611438612c81565b6001600160e01b031990921660209283029190910190910152919050565b60006105c88284600401600060405160200161062390612bfc565b60405160200161053290612c97565b6001600160a01b038116600090815260208381526040808320905160019284916106829101612adb565b6000818152600383016020526040812080548291906114c890612bc2565b90501180156105c85750506000908152600391909101602052604090206001015460ff1690565b604051744c4956454c595f414e4f4e594d4f55535f524f4c4560581b6020820152603501610532565b33600090815260208281526040808320905160019391926115399101612c64565b60408051601f19818403018152918152815160209283012083529082019290925201600020805460ff1916600183600281111561157857611578612b65565b0217905550336000908152602082815260408083209051600193919261159e9101612b7b565b60408051601f19818403018152918152815160209283012083529082019290925201600020805460ff191660018360028111156115dd576115dd612b65565b0217905550604051806040016040528060118152602001704c4956454c595f41444d494e5f524f4c4560781b81525081600201600060405160200161162190612c64565b60405160208183030381529060405280519060200120815260200190815260200160002060010190816116549190612d06565b50600181600201600060405160200161166c90612c64565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506040516020016116b990612c97565b604051602081830303815290604052805190602001208160020160006040516020016116e490612c64565b6040516020818303038152906040528051906020012081526020019081526020016000206000018190555061175d3382600201600060405160200161172890612c64565b6040516020818303038152906040528051906020012081526020019081526020016000206003016128a290919063ffffffff16565b50604051806040016040528060188152602001774c4956454c595f53595354454d5f41444d494e5f524f4c4560401b8152508160020160006040516020016117a490612b7b565b60405160208183030381529060405280519060200120815260200190815260200160002060010190816117d79190612d06565b5060018160020160006040516020016117ef90612b7b565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060405160200161183c90612c97565b6040516020818303038152906040528051906020012081600201600060405160200161186790612b7b565b604051602081830303815290604052805190602001208152602001908152602001600020600001819055506118ab3382600201600060405160200161172890612b7b565b50604051806040016040528060198152602001784c4956454c595f41535345545f4d414e414745525f524f4c4560381b8152508160020160006040516020016118f390612dc6565b60405160208183030381529060405280519060200120815260200190815260200160002060010190816119269190612d06565b50600181600201600060405160200161193e90612dc6565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060405160200161198b90612bfc565b604051602081830303815290604052805190602001208160020160006040516020016119b690612dc6565b60405160208183030381529060405280519060200120815260200190815260200160002060000181905550604051806040016040528060178152602001764c4956454c595f41535345545f41444d494e5f524f4c4560481b815250816002016000604051602001611a2690612b9f565b6040516020818303038152906040528051906020012081526020019081526020016000206001019081611a599190612d06565b506001816002016000604051602001611a7190612b9f565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff021916908315150217905550604051602001611abe90612bfc565b60405160208183030381529060405280519060200120816002016000604051602001611ae990612b9f565b60405160208183030381529060405280519060200120815260200190815260200160002060000181905550604051806040016040528060198152602001784c4956454c595f434f4d4d554e4954595f44414f5f524f4c4560381b815250816002016000604051602001611b5b90612adb565b6040516020818303038152906040528051906020012081526020019081526020016000206001019081611b8e9190612d06565b506001816002016000604051602001611ba690612adb565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff021916908315150217905550604051602001611bf390612b49565b60405160208183030381529060405280519060200120816002016000604051602001611c1e90612adb565b60405160208183030381529060405280519060200120815260200190815260200160002060000181905550604051806060016040528060228152602001612dec60229139816002016000604051602001611c7790612c1a565b6040516020818303038152906040528051906020012081526020019081526020016000206001019081611caa9190612d06565b506001816002016000604051602001611cc290612c1a565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff021916908315150217905550604051602001611d0f90612b49565b60405160208183030381529060405280519060200120816002016000604051602001611d3a90612c1a565b60405160208183030381529060405280519060200120815260200190815260200160002060000181905550604051806040016040528060158152602001744c4956454c595f414e4f4e594d4f55535f524f4c4560581b815250816002016000604051602001611dc490744c4956454c595f414e4f4e594d4f55535f524f4c4560581b815260150190565b6040516020818303038152906040528051906020012081526020019081526020016000206001019081611df79190612d06565b506001816002016000604051602001611e2b90744c4956454c595f414e4f4e594d4f55535f524f4c4560581b815260150190565b60405160208183030381529060405280519060200120815260200190815260200160002060020160006101000a81548160ff021916908315150217905550604051602001611e7890612c97565b60405160208183030381529060405280519060200120816002016000604051602001611ebf90744c4956454c595f414e4f4e594d4f55535f524f4c4560581b815260150190565b604051602081830303815290604052805190602001208152602001908152602001600020600001819055506040518060400160405280601481526020017304c4956454c595f47454e4552414c5f47524f55560641b815250816004016000604051602001611f2c90612c97565b6040516020818303038152906040528051906020012081526020019081526020016000206000019081611f5f9190612d06565b506001816004016000604051602001611f7790612c97565b60405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff021916908315150217905550612027604051602001611fc790612c64565b60405160208183030381529060405280519060200120826004016000604051602001611ff290612c97565b6040516020818303038152906040528051906020012081526020019081526020016000206002016128b790919063ffffffff16565b5061203a604051602001611fc790612b7b565b506040518060400160405280601081526020016f04c4956454c595f44414f5f47524f55560841b81525081600401600060405160200161207990612b49565b60405160208183030381529060405280519060200120815260200190815260200160002060000190816120ac9190612d06565b5060018160040160006040516020016120c490612b49565b60405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555061213f60405160200161211490612adb565b60405160208183030381529060405280519060200120826004016000604051602001611ff290612b49565b5061215260405160200161211490612c1a565b506040518060400160405280601281526020017104c4956454c595f41535345545f47524f55560741b81525081600401600060405160200161219390612bfc565b60405160208183030381529060405280519060200120815260200190815260200160002060000190816121c69190612d06565b5060018160040160006040516020016121de90612bfc565b60405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555061225960405160200161222e90612dc6565b60405160208183030381529060405280519060200120826004016000604051602001611ff290612bfc565b5061226c60405160200161222e90612b9f565b50604051806040016040528060148152602001734c4956454c595f47454e4552414c5f5245414c4d60601b8152508160030160006040516020016122af90612b29565b60405160208183030381529060405280519060200120815260200190815260200160002060000190816122e29190612d06565b5060018160030160006040516020016122fa90612b29565b60405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600181600301600060405160200161234f90612b29565b60408051601f19818403018152918152815160209283012083528282019390935290820160002060010180549315156101000261ff00199094169390931790925580513060601b6bffffffffffffffffffffffff19168184015281516014818303018152603490910190915280519101206123d990826003016000604051602001611ff290612b29565b50604051806040016040528060128152602001714c4956454c595f41535345545f5245414c4d60701b81525081600301600060405160200161243390714c4956454c595f41535345545f5245414c4d60701b815260120190565b60405160208183030381529060405280519060200120815260200190815260200160002060000190816124669190612d06565b50600181600301600060405160200161249790714c4956454c595f41535345545f5245414c4d60701b815260120190565b60405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600181600301600060405160200161250590714c4956454c595f41535345545f5245414c4d60701b815260120190565b60405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555050565b600081815260018084016020526040822001546001600160a01b0316158015906105c857505060009081526001918201602052604090200154600160a01b900460ff1690565b60405160200161053290612dc6565b6001600160a01b038116600090815260208381526040808320905160019284916106829101612dc6565b6000818152600383016020526040812080546125e090612bc2565b90506000036125f1575060006105cb565b5060009081526003919091016020526040902060010154610100900460ff1690565b60405160200161053290612c1a565b6040516d131058d8d95cdcd0dbdb9d1c9bdb60921b6020820152602e01610532565b6000818152600180840160209081526040808420909201548251630151e76560e61b815292516001600160a01b0390911692635479d9409260048083019391928290030181865afa1580156105a4573d6000803e3d6000fd5b6000818152600283016020526040812060010180548291906126be90612bc2565b90501180156105c85750506000908152600291820160205260409020015460ff1690565b6000818152600483016020526040812080548291906106f190612bc2565b60006105c88284600301600060405160200161062390714c4956454c595f41535345545f5245414c4d60701b815260120190565b60405160200161053290612c64565b60006105c88284600401600060405160200161062390612b49565b600082815260018085016020526040822001546001600160a01b0316158015906109125750600160008481526001808701602090815260408084206001600160e01b0319881685526002908101909252909220015460ff16908111156127c6576127c6612b65565b14949350505050565b600082815260018085016020526040822001546001600160a01b031615801590610912575060008381526001850160205260409020610912906003016001600160e01b0319841661288a565b6001600160a01b038116600090815260208381526040808320905160019284916106829101612b9f565b6001600160a01b038116600090815260208381526040808320905160019284916106829101612c64565b60006105c88284600401600060405160200161062390612c97565b600081815260018301602052604081205415156105c8565b60006105c8836001600160a01b0384166128bf565b60006105c883835b6000818152600183016020526040812054612906575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105cb565b5060006105cb565b6000806040838503121561292157600080fd5b50508035926020909101359150565b80356001600160a01b038116811461294757600080fd5b919050565b6000806040838503121561295f57600080fd5b8235915061296f60208401612930565b90509250929050565b80356001600160e01b03198116811461294757600080fd5b600080600080608085870312156129a657600080fd5b84359350602085013592506129bd60408601612930565b91506129cb60608601612978565b905092959194509250565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015612a7e57898403603f190186528251805185528881015160608a8701819052815190870181905260808701918b019085905b80821015612a5e5782516001600160e01b0319168452928c0192918c019160019190910190612a34565b5050509088015115159488019490945294870194918701916001016129fe565b50919998505050505050505050565b600060208284031215612a9f57600080fd5b5035919050565b600080600060608486031215612abb57600080fd5b8335925060208401359150612ad260408501612978565b90509250925092565b784c4956454c595f434f4d4d554e4954595f44414f5f524f4c4560381b815260190190565b600060208284031215612b1257600080fd5b81518015158114612b2257600080fd5b9392505050565b734c4956454c595f47454e4552414c5f5245414c4d60601b815260140190565b6f04c4956454c595f44414f5f47524f55560841b815260100190565b634e487b7160e01b600052602160045260246000fd5b774c4956454c595f53595354454d5f41444d494e5f524f4c4560401b815260180190565b764c4956454c595f41535345545f41444d494e5f524f4c4560481b815260170190565b600181811c90821680612bd657607f821691505b602082108103612bf657634e487b7160e01b600052602260045260246000fd5b50919050565b7104c4956454c595f41535345545f47524f55560741b815260120190565b7f4c4956454c595f434f4d4d554e4954595f44414f5f4558454355544f525f524f8152614c4560f01b602082015260220190565b634e487b7160e01b600052604160045260246000fd5b704c4956454c595f41444d494e5f524f4c4560781b815260110190565b634e487b7160e01b600052603260045260246000fd5b7304c4956454c595f47454e4552414c5f47524f55560641b815260140190565b601f821115612d0157600081815260208120601f850160051c81016020861015612cde5750805b601f850160051c820191505b81811015612cfd57828155600101612cea565b5050505b505050565b815167ffffffffffffffff811115612d2057612d20612c4e565b612d3481612d2e8454612bc2565b84612cb7565b602080601f831160018114612d695760008415612d515750858301515b600019600386901b1c1916600185901b178555612cfd565b600085815260208120601f198616915b82811015612d9857888601518255948401946001909101908401612d79565b5085821015612db65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b784c4956454c595f41535345545f4d414e414745525f524f4c4560381b81526019019056fe4c4956454c595f434f4d4d554e4954595f44414f5f4558454355544f525f524f4c45a264697066735822122030d11ac0852baea22fca3314e898c59b2f01385e4d73694fb676a75405173a5764736f6c63430008110033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "author": "Sina Tadayon, https://github.com/SinaTadayon",
    "kind": "dev",
    "methods": {},
    "title": "Access Control Library",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0x2E43 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87D8E2B0 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xC0A8CA0C GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xD98EF622 GT PUSH2 0x91 JUMPI DUP1 PUSH4 0xD98EF622 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xDD15702C EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xE99B513A EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xE9CFB672 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xEFEC2D5E EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF0984EE6 EQ PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0A8CA0C EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCB4A1BB7 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xCC6C3268 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xCE34A66D EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xD8B31999 EQ PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6196757 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xA6196757 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xAFB92706 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB019D53A EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xB899699C EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xBEC94751 EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87D8E2B0 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x89B5A834 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x9BB20D51 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x9FA79BF8 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA5F1E2FE EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF89D6F GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0x5F6CEF3C GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x5F6CEF3C EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x62F3C2D4 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x6787AD51 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x6AC58AC1 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x85DE3336 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF89D6F EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x513D425A EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x5632FFD8 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x5A96334B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x5B8BA898 EQ PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3167D0C4 GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x3167D0C4 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x337CD188 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x36206F04 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x37F4C930 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x4C95D60D EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x108F5BDC EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x16B714AD EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x20DD27AF EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x2466209B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x2D8BC9CB EQ PUSH2 0x2B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26A PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x290 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x290 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH2 0x26A PUSH2 0x91A JUMP JUMPDEST PUSH2 0x290 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x26A PUSH2 0x998 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x14AA JUMP JUMPDEST PUSH2 0x26A PUSH2 0x14EF JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x1518 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2546 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x258C JUMP JUMPDEST PUSH2 0x290 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x259B JUMP JUMPDEST PUSH2 0x290 PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2613 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2622 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x269D JUMP JUMPDEST PUSH2 0x290 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x26E2 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2700 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2734 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x275E JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x281B JUMP JUMPDEST PUSH2 0x290 PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x2845 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x51E CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0xBE22465D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBE22465D SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x6BC JUMPI PUSH2 0x6BC PUSH2 0x2B65 JUMP JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x6F1 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x6F1 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP2 PUSH2 0x77F SWAP2 ADD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0x80D JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x805 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x803 PUSH2 0x2B65 JUMP JUMPDEST EQ JUMPDEST SWAP2 POP POP PUSH2 0x912 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x877 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x2B65 JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x8A5 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x8D3 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x4 DUP10 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x805 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x803 PUSH2 0x2B65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x947 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x32 ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9D8 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA1B SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA44 JUMPI PUSH2 0xA44 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x17 DUP1 DUP3 MSTORE PUSH2 0x300 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH2 0x2E0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAAF JUMPI PUSH2 0xAAF PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0x48E6BE1C PUSH1 0xE0 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD9 JUMPI PUSH2 0xAD9 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAF7 JUMPI PUSH2 0xAF7 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x225BF2F9 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xB2C JUMPI PUSH2 0xB2C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB4A JUMPI PUSH2 0xB4A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x31C0493 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xB7F JUMPI PUSH2 0xB7F PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9D PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x5AC4B36F PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xBD2 JUMPI PUSH2 0xBD2 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xBF0 JUMPI PUSH2 0xBF0 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x771BCF45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC25 JUMPI PUSH2 0xC25 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0xC43 JUMPI PUSH2 0xC43 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x4346A04B PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC78 JUMPI PUSH2 0xC78 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0xC96 JUMPI PUSH2 0xC96 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xD3386401 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xCCB JUMPI PUSH2 0xCCB PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH2 0xCE9 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x70420EE3 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD1E JUMPI PUSH2 0xD1E PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0xD3C JUMPI PUSH2 0xD3C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x3CBE67E9 PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD71 JUMPI PUSH2 0xD71 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0xD8F JUMPI PUSH2 0xD8F PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB2DC26E5 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xDC4 JUMPI PUSH2 0xDC4 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 DUP2 MLOAD DUP2 LT PUSH2 0xDE2 JUMPI PUSH2 0xDE2 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x4F1D1675 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE17 JUMPI PUSH2 0xE17 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xA DUP2 MLOAD DUP2 LT PUSH2 0xE35 JUMPI PUSH2 0xE35 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x8F09E0F PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE6A JUMPI PUSH2 0xE6A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xB DUP2 MLOAD DUP2 LT PUSH2 0xE88 JUMPI PUSH2 0xE88 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x93BA3131 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xEBD JUMPI PUSH2 0xEBD PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xC DUP2 MLOAD DUP2 LT PUSH2 0xEDB JUMPI PUSH2 0xEDB PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDF01DE45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF10 JUMPI PUSH2 0xF10 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xD DUP2 MLOAD DUP2 LT PUSH2 0xF2E JUMPI PUSH2 0xF2E PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x62AB8105 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF63 JUMPI PUSH2 0xF63 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xE DUP2 MLOAD DUP2 LT PUSH2 0xF81 JUMPI PUSH2 0xF81 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x738F1127 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xF DUP2 MLOAD DUP2 LT PUSH2 0xFD4 JUMPI PUSH2 0xFD4 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDBF304B PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1009 JUMPI PUSH2 0x1009 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x10 DUP2 MLOAD DUP2 LT PUSH2 0x1027 JUMPI PUSH2 0x1027 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7E99337 PUSH1 0xE3 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x105C JUMPI PUSH2 0x105C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x11 DUP2 MLOAD DUP2 LT PUSH2 0x107A JUMPI PUSH2 0x107A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB6C03F03 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x12 DUP2 MLOAD DUP2 LT PUSH2 0x10CD JUMPI PUSH2 0x10CD PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x12EC6FA3 PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x13 DUP2 MLOAD DUP2 LT PUSH2 0x1120 JUMPI PUSH2 0x1120 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x22DF6F5B PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x14 DUP2 MLOAD DUP2 LT PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xF2C673BD PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11A8 JUMPI PUSH2 0x11A8 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x15 DUP2 MLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH2 0x11C6 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE POP POP PUSH32 0x756AF45F4CE05D832BEE0C171992C529AD6D3CA8E13303D78FEACE2F8FD7FAF2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x16 DUP2 MLOAD DUP2 LT PUSH2 0x123A JUMPI PUSH2 0x123A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x125F SWAP2 ADD PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1288 JUMPI PUSH2 0x1288 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12AD JUMPI PUSH2 0x12AD PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12F1 JUMPI PUSH2 0x12F1 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0xD9DC1F19 PUSH1 0xE0 SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x131B JUMPI PUSH2 0x131B PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1339 JUMPI PUSH2 0x1339 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7147855D PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1370 JUMPI PUSH2 0x1370 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x138E JUMPI PUSH2 0x138E PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x78EFA4ED PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x71D569D9 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x141A JUMPI PUSH2 0x141A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1438 JUMPI PUSH2 0x1438 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x14C8 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x35 ADD PUSH2 0x532 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x1539 SWAP2 ADD PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1578 JUMPI PUSH2 0x1578 PUSH2 0x2B65 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x159E SWAP2 ADD PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DD PUSH2 0x2B65 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1621 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x166C SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16B9 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16E4 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x175D CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1728 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH2 0x28A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17A4 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x17D7 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17EF SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x183C SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1867 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x18AB CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1728 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH25 0x4C4956454C595F41535345545F4D414E414745525F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F3 SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1926 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x193E SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x198B SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19B6 SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH23 0x4C4956454C595F41535345545F41444D494E5F524F4C45 PUSH1 0x48 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A26 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A59 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A71 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ABE SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AE9 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH25 0x4C4956454C595F434F4D4D554E4954595F44414F5F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B5B SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BA6 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BF3 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C1E SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DEC PUSH1 0x22 SWAP2 CODECOPY DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C77 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CC2 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D0F SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D3A SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DC4 SWAP1 PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1DF7 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E2B SWAP1 PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E78 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EBF SWAP1 PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F2C SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1F5F SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F77 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2027 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FC7 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x28B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x203A PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FC7 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x4C4956454C595F44414F5F47524F555 PUSH1 0x84 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2079 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20C4 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x213F PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2114 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST POP PUSH2 0x2152 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2114 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x4C4956454C595F41535345545F47524F555 PUSH1 0x74 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2193 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x21C6 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21DE SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2259 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x222E SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST POP PUSH2 0x226C PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x222E SWAP1 PUSH2 0x2B9F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22AF SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x22E2 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22FA SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x234F SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP3 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP1 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x14 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x34 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x23D9 SWAP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2433 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2466 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2497 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2505 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x25E0 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x25F1 JUMPI POP PUSH1 0x0 PUSH2 0x5CB JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH14 0x131058D8D95CDCD0DBDB9D1C9BDB PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0x151E765 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x5479D940 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x26BE SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x6F1 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x27C6 JUMPI PUSH2 0x27C6 PUSH2 0x2B65 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x912 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x912 SWAP1 PUSH1 0x3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH2 0x288A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP4 DUP4 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2906 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x5CB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x295F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x296F PUSH1 0x20 DUP5 ADD PUSH2 0x2930 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x29BD PUSH1 0x40 DUP7 ADD PUSH2 0x2930 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB PUSH1 0x60 DUP7 ADD PUSH2 0x2978 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2A7E JUMPI DUP10 DUP5 SUB PUSH1 0x3F NOT ADD DUP7 MSTORE DUP3 MLOAD DUP1 MLOAD DUP6 MSTORE DUP9 DUP2 ADD MLOAD PUSH1 0x60 DUP11 DUP8 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 DUP12 ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2A5E JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP5 MSTORE SWAP3 DUP13 ADD SWAP3 SWAP2 DUP13 ADD SWAP2 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2A34 JUMP JUMPDEST POP POP POP SWAP1 DUP9 ADD MLOAD ISZERO ISZERO SWAP5 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29FE JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2AD2 PUSH1 0x40 DUP6 ADD PUSH2 0x2978 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH25 0x4C4956454C595F434F4D4D554E4954595F44414F5F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE PUSH1 0x19 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH16 0x4C4956454C595F44414F5F47524F555 PUSH1 0x84 SHL DUP2 MSTORE PUSH1 0x10 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE PUSH1 0x18 ADD SWAP1 JUMP JUMPDEST PUSH23 0x4C4956454C595F41535345545F41444D494E5F524F4C45 PUSH1 0x48 SHL DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2BD6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BF6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH18 0x4C4956454C595F41535345545F47524F555 PUSH1 0x74 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4C4956454C595F434F4D4D554E4954595F44414F5F4558454355544F525F524F DUP2 MSTORE PUSH2 0x4C45 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D01 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2CDE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CFD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CEA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D20 JUMPI PUSH2 0x2D20 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0x2D34 DUP2 PUSH2 0x2D2E DUP5 SLOAD PUSH2 0x2BC2 JUMP JUMPDEST DUP5 PUSH2 0x2CB7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2D69 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2D51 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2CFD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D98 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2D79 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2DB6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH25 0x4C4956454C595F41535345545F4D414E414745525F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE PUSH1 0x19 ADD SWAP1 JUMP INVALID 0x4C 0x49 JUMP GASLIMIT 0x4C MSIZE 0x5F NUMBER 0x4F 0x4D 0x4D SSTORE 0x4E 0x49 SLOAD MSIZE 0x5F DIFFICULTY COINBASE 0x4F 0x5F GASLIMIT PC GASLIMIT NUMBER SSTORE SLOAD 0x4F MSTORE 0x5F MSTORE 0x4F 0x4C GASLIMIT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xD1 BYTE 0xC0 DUP6 0x2B 0xAE LOG2 0x2F 0xCA CALLER EQ 0xE8 SWAP9 0xC5 SWAP12 0x2F ADD CODESIZE 0x5E 0x4D PUSH20 0x694FB676A75405173A5764736F6C634300081100 CALLER ",
      "sourceMap": "527:13689:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;527:13689:17;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@LIB_NAME_4048": {
          "entryPoint": 9762,
          "id": 4048,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIB_VERSION_4056": {
          "entryPoint": 1504,
          "id": 4056,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ADMIN_ROLE_4104": {
          "entryPoint": 10036,
          "id": 4104,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ANONYMOUS_ROLE_4152": {
          "entryPoint": 5359,
          "id": 4152,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ASSET_ADMIN_ROLE_4128": {
          "entryPoint": 1732,
          "id": 4128,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ASSET_GROUP_4096": {
          "entryPoint": 1788,
          "id": 4096,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ASSET_MANAGER_ROLE_4120": {
          "entryPoint": 9612,
          "id": 4120,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ASSET_REALM_4072": {
          "entryPoint": 2456,
          "id": 4072,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE_4144": {
          "entryPoint": 9747,
          "id": 4144,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_COMMUNITY_DAO_ROLE_4136": {
          "entryPoint": 1315,
          "id": 4136,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_DAO_GROUP_4088": {
          "entryPoint": 1529,
          "id": 4088,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_GENERAL_GROUP_4080": {
          "entryPoint": 5233,
          "id": 4080,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_GENERAL_REALM_4064": {
          "entryPoint": 1489,
          "id": 4064,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_SYSTEM_ADMIN_ROLE_4112": {
          "entryPoint": 2330,
          "id": 4112,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_add_15506": {
          "entryPoint": 10431,
          "id": 15506,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@_contains_15609": {
          "entryPoint": null,
          "id": 15609,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@add_15676": {
          "entryPoint": 10423,
          "id": 15676,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@add_15792": {
          "entryPoint": 10402,
          "id": 15792,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@contains_15712": {
          "entryPoint": 10378,
          "id": 15712,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@createRequestContext_4953": {
          "entryPoint": 2494,
          "id": 4953,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@generateCtx_3336": {
          "entryPoint": null,
          "id": 3336,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@hasAccess_5054": {
          "entryPoint": 1836,
          "id": 5054,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@initializeContext_4580": {
          "entryPoint": 5400,
          "id": 4580,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@isContextEnabled_5531": {
          "entryPoint": 9542,
          "id": 5531,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isContextExists_5433": {
          "entryPoint": null,
          "id": 5433,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isContextFunctionEnabled_5503": {
          "entryPoint": 10078,
          "id": 5503,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@isContextFunctionExists_5466": {
          "entryPoint": 10191,
          "id": 5466,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@isContextSafeMode_5307": {
          "entryPoint": 1355,
          "id": 5307,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isContextUpgradable_5328": {
          "entryPoint": 9796,
          "id": 5328,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isGroupEnabled_5411": {
          "entryPoint": 2345,
          "id": 5411,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isGroupExists_5382": {
          "entryPoint": 9954,
          "id": 5382,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyAdminRole_5098": {
          "entryPoint": 10309,
          "id": 5098,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyAssetAdminRole_5142": {
          "entryPoint": 10267,
          "id": 5142,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyAssetGroup_5226": {
          "entryPoint": 5206,
          "id": 5226,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyAssetManagerRole_5120": {
          "entryPoint": 9627,
          "id": 5120,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyAssetRealm_5286": {
          "entryPoint": 9984,
          "id": 5286,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyCommunityDaoExecutorRole_5186": {
          "entryPoint": 2414,
          "id": 5186,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyCommunityDaoRole_5164": {
          "entryPoint": 5248,
          "id": 5164,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyDaoGroup_5246": {
          "entryPoint": 10051,
          "id": 5246,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyGeneralGroup_5206": {
          "entryPoint": 10351,
          "id": 5206,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyGeneralRealm_5266": {
          "entryPoint": 1544,
          "id": 5266,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelySystemAdminRole_5076": {
          "entryPoint": 1624,
          "id": 5076,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRealmEnabled_5635": {
          "entryPoint": 5290,
          "id": 5635,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRealmExists_5606": {
          "entryPoint": 1747,
          "id": 5606,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRealmUpgradable_5359": {
          "entryPoint": 9669,
          "id": 5359,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRoleEnabled_5583": {
          "entryPoint": 9885,
          "id": 5583,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRoleExists_5554": {
          "entryPoint": 1803,
          "id": 5554,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_address": {
          "entryPoint": 10544,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_bytes4": {
          "entryPoint": 10616,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 11008,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptr": {
          "entryPoint": 10893,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_address": {
          "entryPoint": 10572,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32": {
          "entryPoint": 10510,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32t_addresst_bytes4": {
          "entryPoint": 10640,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32t_bytes4": {
          "entryPoint": 10918,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_2160c8859b7f75319605166f9c961365bb32901fea3d3bb3bffbf72d4f28e925__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11290,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_30915b12763c80516ad64fda7b17424d1281553fab5e63a20e8494dd8b84e411__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11364,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_3956e7d0a095019dc92e8054f8e587695ab09abeb61332f17cc8480322afa18f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11049,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11415,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_489cac4c6e4e83c94905ba18bbf6bf1d1f9380743f360b6728ed1a1f41a60bef__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11131,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_5e1f4b5408c4e898d13dbe5b20c0b51567a994aeecfa3e7cdd5bca1103414e4f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 10971,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_6646a90fef40ac8889babbb18332880f250531a7257cdcea7111176882ec2efb__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11260,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_70afef11f0a97d8a13c21b549c71fd3c76dfa85c3edf6fab2aaeab37461c45b6__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11718,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_74b03194e5dbebc32540310b32ba65da80bee8d1d1822648cc9f42e2bef989b1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_7bf07a8780e5686544a29d30c1dae7013a2dd47ff2f26486755fbb37897a78c2__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_85e4914e182faf75e560b28ee52d78418278f4a5d877d5e783eef31d6b242544__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11167,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_b4956bfcdbf5f3dfba96ef5144393d49fc4f0b89970662cabbbe2260dd067b57__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 11081,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_ef504d6711f15f7266dbd8ca4cf4bb6b90c89b43a1cfe3ef5e399e96661e9580__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_struct$_RequestRegisterContext_$1912_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RequestRegisterContext_$1912_memory_ptr_$dyn_memory_ptr__fromStack_library_reversed": {
          "entryPoint": 10710,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "array_dataslot_string_storage": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "clean_up_bytearray_end_slots_string_storage": {
          "entryPoint": 11447,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
          "entryPoint": 11526,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "extract_byte_array_length": {
          "entryPoint": 11202,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "extract_used_part_and_set_length_of_short_byte_array": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x21": {
          "entryPoint": 11109,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x32": {
          "entryPoint": 11393,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 11342,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:11420:76",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:76",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "123:76:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "133:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "145:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "156:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "141:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "141:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "133:4:76"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "175:9:76"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "186:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "168:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:25:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "168:25:76"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "92:9:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "103:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "114:4:76",
                    "type": ""
                  }
                ],
                "src": "14:185:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "325:161:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "371:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "380:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "383:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "373:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "373:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "373:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "346:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "355:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "342:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "342:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "367:2:76",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "338:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "338:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "335:52:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "396:33:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "419:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "406:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "406:23:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "396:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "438:42:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "465:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "476:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "461:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "461:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "448:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "448:32:76"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "438:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "283:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "294:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "306:6:76",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "314:6:76",
                    "type": ""
                  }
                ],
                "src": "204:282:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "594:92:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "604:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "616:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "627:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "612:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "612:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "604:4:76"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "646:9:76"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "671:6:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "664:6:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "664:14:76"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "657:6:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "657:22:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "639:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "639:41:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "639:41:76"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "563:9:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "574:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "585:4:76",
                    "type": ""
                  }
                ],
                "src": "491:195:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "740:124:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "750:29:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "772:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "759:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "759:20:76"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "750:5:76"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "842:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "851:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "854:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "844:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "844:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "844:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "801:5:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "812:5:76"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "827:3:76",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "832:1:76",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "823:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "823:11:76"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "836:1:76",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "819:19:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "808:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "808:31:76"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "798:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "798:42:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "791:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:50:76"
                      },
                      "nodeType": "YulIf",
                      "src": "788:70:76"
                    }
                  ]
                },
                "name": "abi_decode_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "719:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "730:5:76",
                    "type": ""
                  }
                ],
                "src": "691:173:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "990:167:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1036:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1045:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1048:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1038:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1038:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1038:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1011:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1020:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1007:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1007:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1032:2:76",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1003:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1003:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "1000:52:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1061:33:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1084:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1071:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1071:23:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1061:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1103:48:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1136:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1147:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1132:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1132:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1113:18:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1113:38:76"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1103:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "948:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "959:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "971:6:76",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "979:6:76",
                    "type": ""
                  }
                ],
                "src": "869:288:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1210:125:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1220:29:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1242:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1229:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1229:20:76"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "1220:5:76"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1313:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1322:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1325:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1315:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1315:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1315:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1271:5:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1282:5:76"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1293:3:76",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1298:10:76",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1289:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1289:20:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1278:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1278:32:76"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1268:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1268:43:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1261:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1261:51:76"
                      },
                      "nodeType": "YulIf",
                      "src": "1258:71:76"
                    }
                  ]
                },
                "name": "abi_decode_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "1189:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "1200:5:76",
                    "type": ""
                  }
                ],
                "src": "1162:173:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1494:275:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1541:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1550:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1553:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1543:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1543:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1543:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1515:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1524:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1511:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1511:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1536:3:76",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1507:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1507:33:76"
                      },
                      "nodeType": "YulIf",
                      "src": "1504:53:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1566:33:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1589:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1576:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1576:23:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1566:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1608:42:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1635:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1646:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1631:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1631:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1618:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1618:32:76"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1608:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1659:48:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1692:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1703:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1688:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1688:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1669:18:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:38:76"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1659:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1716:47:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1748:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1759:2:76",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1744:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1744:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "1726:17:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:37:76"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1716:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32t_addresst_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1436:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1447:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1459:6:76",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1467:6:76",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1475:6:76",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1483:6:76",
                    "type": ""
                  }
                ],
                "src": "1340:429:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2013:1430:76",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2023:12:76",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2033:2:76",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2027:2:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2044:32:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2062:9:76"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2073:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2058:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2058:18:76"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "2048:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2092:9:76"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2103:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2085:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2085:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2085:21:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2115:17:76",
                      "value": {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2126:6:76"
                      },
                      "variables": [
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "2119:3:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2141:27:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2161:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2155:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2155:13:76"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "2145:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "2184:6:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2192:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2177:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:22:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2177:22:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2208:12:76",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:2:76",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "2212:2:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2229:25:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2240:9:76"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2251:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2236:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2236:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "2229:3:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2263:53:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2285:9:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2300:1:76",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2303:6:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2296:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2296:14:76"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2281:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2281:30:76"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2313:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2277:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2277:39:76"
                      },
                      "variables": [
                        {
                          "name": "tail_2",
                          "nodeType": "YulTypedName",
                          "src": "2267:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2325:29:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2343:6:76"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2351:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2339:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2339:15:76"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "2329:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2363:10:76",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2372:1:76",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "2367:1:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2382:12:76",
                      "value": {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2393:1:76"
                      },
                      "variables": [
                        {
                          "name": "i_1",
                          "nodeType": "YulTypedName",
                          "src": "2386:3:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2458:956:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2479:3:76"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2492:6:76"
                                        },
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "2500:9:76"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "2488:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2488:22:76"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2516:2:76",
                                          "type": "",
                                          "value": "63"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "2512:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2512:7:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2484:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2484:36:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2472:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2472:49:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2472:49:76"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2534:23:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2550:6:76"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2544:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2544:13:76"
                            },
                            "variables": [
                              {
                                "name": "_3",
                                "nodeType": "YulTypedName",
                                "src": "2538:2:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2570:14:76",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2580:4:76",
                              "type": "",
                              "value": "0x60"
                            },
                            "variables": [
                              {
                                "name": "_4",
                                "nodeType": "YulTypedName",
                                "src": "2574:2:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2597:29:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2615:6:76"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2623:2:76"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2611:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2611:15:76"
                            },
                            "variables": [
                              {
                                "name": "tail_3",
                                "nodeType": "YulTypedName",
                                "src": "2601:6:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2646:6:76"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2660:2:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2654:5:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2654:9:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2639:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2639:25:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2639:25:76"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2677:38:76",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2707:2:76"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2711:2:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2703:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2703:11:76"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2697:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2697:18:76"
                            },
                            "variables": [
                              {
                                "name": "memberValue0",
                                "nodeType": "YulTypedName",
                                "src": "2681:12:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2739:6:76"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2747:2:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2735:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2735:15:76"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2752:2:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2728:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2728:27:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2728:27:76"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2768:19:76",
                            "value": {
                              "name": "tail_3",
                              "nodeType": "YulIdentifier",
                              "src": "2781:6:76"
                            },
                            "variables": [
                              {
                                "name": "pos_1",
                                "nodeType": "YulTypedName",
                                "src": "2772:5:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2800:35:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2822:12:76"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2816:5:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2816:19:76"
                            },
                            "variables": [
                              {
                                "name": "length_1",
                                "nodeType": "YulTypedName",
                                "src": "2804:8:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "tail_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2855:6:76"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2863:8:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2848:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2848:24:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2848:24:76"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2885:25:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2898:6:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2906:3:76",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2894:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2894:16:76"
                            },
                            "variableNames": [
                              {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "2885:5:76"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2923:37:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2943:12:76"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2957:2:76"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2939:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2939:21:76"
                            },
                            "variables": [
                              {
                                "name": "srcPtr_1",
                                "nodeType": "YulTypedName",
                                "src": "2927:8:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2973:12:76",
                            "value": {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2984:1:76"
                            },
                            "variables": [
                              {
                                "name": "i_2",
                                "nodeType": "YulTypedName",
                                "src": "2977:3:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3059:175:76",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3084:5:76"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "srcPtr_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "3101:8:76"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "3095:5:76"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3095:15:76"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3116:3:76",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3121:10:76",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3112:3:76"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3112:20:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3091:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3091:42:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "3077:6:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3077:57:76"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3077:57:76"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3151:23:76",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3164:5:76"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3171:2:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3160:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3160:14:76"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "pos_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3151:5:76"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3191:29:76",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3207:8:76"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3217:2:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3203:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3203:17:76"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcPtr_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3191:8:76"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3009:3:76"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3014:8:76"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3006:2:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3006:17:76"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "3024:22:76",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3026:18:76",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3037:3:76"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3042:1:76",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3033:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3033:11:76"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3026:3:76"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "3002:3:76",
                              "statements": []
                            },
                            "src": "2998:236:76"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3258:6:76"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3266:2:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3254:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3254:15:76"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_3",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3295:2:76"
                                                },
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3299:2:76"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3291:3:76"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3291:11:76"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3285:5:76"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3285:18:76"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "3278:6:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3278:26:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "3271:6:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3271:34:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3247:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3247:59:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3247:59:76"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3319:15:76",
                            "value": {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "3329:5:76"
                            },
                            "variableNames": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "3319:6:76"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3347:25:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3361:6:76"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:2:76"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3357:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3357:15:76"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3347:6:76"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3385:19:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3396:3:76"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3401:2:76"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3392:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3392:12:76"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3385:3:76"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i_1",
                            "nodeType": "YulIdentifier",
                            "src": "2414:3:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2419:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2411:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2411:15:76"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "2427:22:76",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2429:18:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2440:3:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2445:1:76",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2436:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2436:11:76"
                            },
                            "variableNames": [
                              {
                                "name": "i_1",
                                "nodeType": "YulIdentifier",
                                "src": "2429:3:76"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "2407:3:76",
                        "statements": []
                      },
                      "src": "2403:1011:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3423:14:76",
                      "value": {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "3431:6:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3423:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_struct$_RequestRegisterContext_$1912_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RequestRegisterContext_$1912_memory_ptr_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1982:9:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1993:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2004:4:76",
                    "type": ""
                  }
                ],
                "src": "1774:1669:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3552:110:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3598:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3607:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3610:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3600:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3600:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3600:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3573:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3582:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3569:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3569:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3594:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3565:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "3562:52:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3623:33:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3646:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3633:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3633:23:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3623:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3518:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3529:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3541:6:76",
                    "type": ""
                  }
                ],
                "src": "3448:214:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3804:217:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3850:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3859:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3862:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3852:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3852:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3852:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3825:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3834:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3821:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3821:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3846:2:76",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3817:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3817:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "3814:52:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3875:33:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3898:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3885:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3885:23:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3875:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3917:42:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3944:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3955:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3940:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3940:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3927:12:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3927:32:76"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3917:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3968:47:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4000:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4011:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3996:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3996:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "3978:17:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3978:37:76"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3968:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32t_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3754:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3765:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3777:6:76",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3785:6:76",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "3793:6:76",
                    "type": ""
                  }
                ],
                "src": "3667:354:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4218:84:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4235:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f434f4d4d554e4954595f44414f5f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4240:27:76",
                            "type": "",
                            "value": "LIVELY_COMMUNITY_DAO_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4228:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4228:40:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4228:40:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4277:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4288:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4293:2:76",
                            "type": "",
                            "value": "25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4284:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4284:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4277:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_5e1f4b5408c4e898d13dbe5b20c0b51567a994aeecfa3e7cdd5bca1103414e4f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4202:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4210:3:76",
                    "type": ""
                  }
                ],
                "src": "4026:276:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4385:199:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4431:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4440:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4443:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4433:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4433:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4433:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4406:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4415:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4402:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4402:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4427:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4398:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4398:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "4395:52:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4456:29:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4475:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4469:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4469:16:76"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "4460:5:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4538:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4547:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4550:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4540:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4540:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4540:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4507:5:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4528:5:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4521:6:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4521:13:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4514:6:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4514:21:76"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "4504:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4504:32:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4497:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4497:40:76"
                      },
                      "nodeType": "YulIf",
                      "src": "4494:60:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4563:15:76",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4573:5:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4563:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4351:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4362:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4374:6:76",
                    "type": ""
                  }
                ],
                "src": "4307:277:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4781:79:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4798:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f47454e4552414c5f5245414c4d",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4803:22:76",
                            "type": "",
                            "value": "LIVELY_GENERAL_REALM"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4791:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4791:35:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4791:35:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4835:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4846:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4851:2:76",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4842:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4842:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4835:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_3956e7d0a095019dc92e8054f8e587695ab09abeb61332f17cc8480322afa18f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4765:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4773:3:76",
                    "type": ""
                  }
                ],
                "src": "4589:271:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5057:63:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5074:3:76"
                          },
                          {
                            "hexValue": "312e302e30",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5079:7:76",
                            "type": "",
                            "value": "1.0.0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5067:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5067:20:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5067:20:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5096:18:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5107:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5112:1:76",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5103:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5103:11:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5096:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5041:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5049:3:76",
                    "type": ""
                  }
                ],
                "src": "4865:255:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5317:75:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5334:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f44414f5f47524f5550",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5339:18:76",
                            "type": "",
                            "value": "LIVELY_DAO_GROUP"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5327:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5327:31:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5327:31:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5367:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5378:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5383:2:76",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5374:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5374:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5367:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_b4956bfcdbf5f3dfba96ef5144393d49fc4f0b89970662cabbbe2260dd067b57__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5301:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5309:3:76",
                    "type": ""
                  }
                ],
                "src": "5125:267:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5429:95:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5446:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5453:3:76",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5458:10:76",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5449:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5449:20:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5439:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5439:31:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5439:31:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5486:1:76",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5489:4:76",
                            "type": "",
                            "value": "0x21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5479:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5479:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5479:15:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5510:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5513:4:76",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5503:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5503:15:76"
                    }
                  ]
                },
                "name": "panic_error_0x21",
                "nodeType": "YulFunctionDefinition",
                "src": "5397:127:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5721:83:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5738:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f53595354454d5f41444d494e5f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5743:26:76",
                            "type": "",
                            "value": "LIVELY_SYSTEM_ADMIN_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5731:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5731:39:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5731:39:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5779:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5790:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5795:2:76",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5786:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5786:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5779:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_489cac4c6e4e83c94905ba18bbf6bf1d1f9380743f360b6728ed1a1f41a60bef__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5705:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5713:3:76",
                    "type": ""
                  }
                ],
                "src": "5529:275:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6001:82:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6018:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f41535345545f41444d494e5f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6023:25:76",
                            "type": "",
                            "value": "LIVELY_ASSET_ADMIN_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6011:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6011:38:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6011:38:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6058:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6069:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6074:2:76",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6065:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6065:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "6058:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_85e4914e182faf75e560b28ee52d78418278f4a5d877d5e783eef31d6b242544__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5985:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5993:3:76",
                    "type": ""
                  }
                ],
                "src": "5809:274:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6143:325:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6153:22:76",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6167:1:76",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "6170:4:76"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "6163:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6163:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "6153:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6184:38:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "6214:4:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6220:1:76",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6210:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6210:12:76"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "6188:18:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6261:31:76",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6263:27:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6277:6:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6285:4:76",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6273:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6273:17:76"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6263:6:76"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "6241:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6234:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6234:26:76"
                      },
                      "nodeType": "YulIf",
                      "src": "6231:61:76"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6351:111:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6372:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6379:3:76",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6384:10:76",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "6375:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6375:20:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6365:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6365:31:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6365:31:76"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6416:1:76",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6419:4:76",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6409:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6409:15:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6409:15:76"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6444:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6447:4:76",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6437:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6437:15:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6437:15:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "6307:18:76"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6330:6:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6338:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6327:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6327:14:76"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6304:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6304:38:76"
                      },
                      "nodeType": "YulIf",
                      "src": "6301:161:76"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "6123:4:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "6132:6:76",
                    "type": ""
                  }
                ],
                "src": "6088:380:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6665:77:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6682:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f41535345545f47524f5550",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6687:20:76",
                            "type": "",
                            "value": "LIVELY_ASSET_GROUP"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6675:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6675:33:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6675:33:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6717:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6728:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6733:2:76",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6724:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6724:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "6717:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_6646a90fef40ac8889babbb18332880f250531a7257cdcea7111176882ec2efb__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "6649:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "6657:3:76",
                    "type": ""
                  }
                ],
                "src": "6473:269:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6939:80:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6956:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f414e4f4e594d4f55535f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6961:23:76",
                            "type": "",
                            "value": "LIVELY_ANONYMOUS_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6949:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6949:36:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6949:36:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6994:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7005:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7010:2:76",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7001:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7001:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "6994:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_74b03194e5dbebc32540310b32ba65da80bee8d1d1822648cc9f42e2bef989b1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "6923:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "6931:3:76",
                    "type": ""
                  }
                ],
                "src": "6747:272:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7216:126:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7233:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f434f4d4d554e4954595f44414f5f4558454355544f525f524f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7238:34:76",
                            "type": "",
                            "value": "LIVELY_COMMUNITY_DAO_EXECUTOR_RO"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7226:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7226:47:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7226:47:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7293:3:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7298:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7289:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7289:12:76"
                          },
                          {
                            "hexValue": "4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7303:4:76",
                            "type": "",
                            "value": "LE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7282:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7282:26:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7282:26:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7317:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7328:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7333:2:76",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7324:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7324:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "7317:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_2160c8859b7f75319605166f9c961365bb32901fea3d3bb3bffbf72d4f28e925__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "7200:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "7208:3:76",
                    "type": ""
                  }
                ],
                "src": "7024:318:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7539:77:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7556:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f41535345545f5245414c4d",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7561:20:76",
                            "type": "",
                            "value": "LIVELY_ASSET_REALM"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7549:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7549:33:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7549:33:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7591:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7602:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7607:2:76",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7598:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7598:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "7591:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_7bf07a8780e5686544a29d30c1dae7013a2dd47ff2f26486755fbb37897a78c2__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "7523:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "7531:3:76",
                    "type": ""
                  }
                ],
                "src": "7347:269:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7653:95:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7670:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7677:3:76",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7682:10:76",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "7673:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7673:20:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7663:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7663:31:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7663:31:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7710:1:76",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7713:4:76",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7703:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7703:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7703:15:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7734:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7737:4:76",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "7727:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7727:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7727:15:76"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "7621:127:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7945:76:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7962:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f41444d494e5f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7967:19:76",
                            "type": "",
                            "value": "LIVELY_ADMIN_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7955:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7955:32:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7955:32:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7996:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8007:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8012:2:76",
                            "type": "",
                            "value": "17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8003:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8003:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "7996:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_30915b12763c80516ad64fda7b17424d1281553fab5e63a20e8494dd8b84e411__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "7929:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "7937:3:76",
                    "type": ""
                  }
                ],
                "src": "7753:268:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8058:95:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8075:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8082:3:76",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8087:10:76",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8078:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8078:20:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8068:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8068:31:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8068:31:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8115:1:76",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8118:4:76",
                            "type": "",
                            "value": "0x32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8108:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8108:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8108:15:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8139:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8142:4:76",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "8132:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8132:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8132:15:76"
                    }
                  ]
                },
                "name": "panic_error_0x32",
                "nodeType": "YulFunctionDefinition",
                "src": "8026:127:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8350:79:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8367:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f47454e4552414c5f47524f5550",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8372:22:76",
                            "type": "",
                            "value": "LIVELY_GENERAL_GROUP"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8360:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8360:35:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8360:35:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8404:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8415:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8420:2:76",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8411:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8411:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "8404:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "8334:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "8342:3:76",
                    "type": ""
                  }
                ],
                "src": "8158:271:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8490:65:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8507:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "8510:3:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8500:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8500:14:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8500:14:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8523:26:76",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8541:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8544:4:76",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "keccak256",
                          "nodeType": "YulIdentifier",
                          "src": "8531:9:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8531:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "8523:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "array_dataslot_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "ptr",
                    "nodeType": "YulTypedName",
                    "src": "8473:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "8481:4:76",
                    "type": ""
                  }
                ],
                "src": "8434:121:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8641:464:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8674:425:76",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8688:11:76",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8698:1:76",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "8692:2:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8719:2:76"
                                },
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "8723:5:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8712:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8712:17:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8712:17:76"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8742:31:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8764:2:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8768:4:76",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "keccak256",
                                "nodeType": "YulIdentifier",
                                "src": "8754:9:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8754:19:76"
                            },
                            "variables": [
                              {
                                "name": "data",
                                "nodeType": "YulTypedName",
                                "src": "8746:4:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8786:57:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8809:4:76"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8819:1:76",
                                      "type": "",
                                      "value": "5"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "8826:10:76"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8838:2:76",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8822:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8822:19:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8815:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8815:27:76"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8805:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8805:38:76"
                            },
                            "variables": [
                              {
                                "name": "deleteStart",
                                "nodeType": "YulTypedName",
                                "src": "8790:11:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "8880:23:76",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8882:19:76",
                                  "value": {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "8897:4:76"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8882:11:76"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "startIndex",
                                  "nodeType": "YulIdentifier",
                                  "src": "8862:10:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8874:4:76",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "8859:2:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8859:20:76"
                            },
                            "nodeType": "YulIf",
                            "src": "8856:47:76"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8916:41:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8930:4:76"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8940:1:76",
                                      "type": "",
                                      "value": "5"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "len",
                                          "nodeType": "YulIdentifier",
                                          "src": "8947:3:76"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8952:2:76",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8943:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8943:12:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8936:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8936:20:76"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8926:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8926:31:76"
                            },
                            "variables": [
                              {
                                "name": "_2",
                                "nodeType": "YulTypedName",
                                "src": "8920:2:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8970:24:76",
                            "value": {
                              "name": "deleteStart",
                              "nodeType": "YulIdentifier",
                              "src": "8983:11:76"
                            },
                            "variables": [
                              {
                                "name": "start",
                                "nodeType": "YulTypedName",
                                "src": "8974:5:76",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9068:21:76",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "9077:5:76"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9084:2:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "9070:6:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9070:17:76"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9070:17:76"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "9018:5:76"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "9025:2:76"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "9015:2:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9015:13:76"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "9029:26:76",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9031:22:76",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "9044:5:76"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9051:1:76",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9040:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9040:13:76"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "9031:5:76"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "9011:3:76",
                              "statements": []
                            },
                            "src": "9007:82:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "8657:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8662:2:76",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8654:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8654:11:76"
                      },
                      "nodeType": "YulIf",
                      "src": "8651:448:76"
                    }
                  ]
                },
                "name": "clean_up_bytearray_end_slots_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "8613:5:76",
                    "type": ""
                  },
                  {
                    "name": "len",
                    "nodeType": "YulTypedName",
                    "src": "8620:3:76",
                    "type": ""
                  },
                  {
                    "name": "startIndex",
                    "nodeType": "YulTypedName",
                    "src": "8625:10:76",
                    "type": ""
                  }
                ],
                "src": "8560:545:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9195:81:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "9205:65:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "9220:4:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9238:1:76",
                                            "type": "",
                                            "value": "3"
                                          },
                                          {
                                            "name": "len",
                                            "nodeType": "YulIdentifier",
                                            "src": "9241:3:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "9234:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9234:11:76"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9251:1:76",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "9247:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9247:6:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9230:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9230:24:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9226:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9226:29:76"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9216:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9216:40:76"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9262:1:76",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "len",
                                "nodeType": "YulIdentifier",
                                "src": "9265:3:76"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9258:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9258:11:76"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "9213:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9213:57:76"
                      },
                      "variableNames": [
                        {
                          "name": "used",
                          "nodeType": "YulIdentifier",
                          "src": "9205:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "extract_used_part_and_set_length_of_short_byte_array",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "9172:4:76",
                    "type": ""
                  },
                  {
                    "name": "len",
                    "nodeType": "YulTypedName",
                    "src": "9178:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "used",
                    "nodeType": "YulTypedName",
                    "src": "9186:4:76",
                    "type": ""
                  }
                ],
                "src": "9110:166:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9377:1256:76",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9387:24:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "9407:3:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9401:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9401:10:76"
                      },
                      "variables": [
                        {
                          "name": "newLen",
                          "nodeType": "YulTypedName",
                          "src": "9391:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9454:22:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "9456:16:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9456:18:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9456:18:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "newLen",
                            "nodeType": "YulIdentifier",
                            "src": "9426:6:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9434:18:76",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9423:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9423:30:76"
                      },
                      "nodeType": "YulIf",
                      "src": "9420:56:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "slot",
                            "nodeType": "YulIdentifier",
                            "src": "9529:4:76"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "9567:4:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9561:5:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9561:11:76"
                              }
                            ],
                            "functionName": {
                              "name": "extract_byte_array_length",
                              "nodeType": "YulIdentifier",
                              "src": "9535:25:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9535:38:76"
                          },
                          {
                            "name": "newLen",
                            "nodeType": "YulIdentifier",
                            "src": "9575:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "clean_up_bytearray_end_slots_string_storage",
                          "nodeType": "YulIdentifier",
                          "src": "9485:43:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9485:97:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9485:97:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9591:18:76",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9608:1:76",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "srcOffset",
                          "nodeType": "YulTypedName",
                          "src": "9595:9:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9618:23:76",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9637:4:76",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "srcOffset_1",
                          "nodeType": "YulTypedName",
                          "src": "9622:11:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9650:24:76",
                      "value": {
                        "name": "srcOffset_1",
                        "nodeType": "YulIdentifier",
                        "src": "9663:11:76"
                      },
                      "variableNames": [
                        {
                          "name": "srcOffset",
                          "nodeType": "YulIdentifier",
                          "src": "9650:9:76"
                        }
                      ]
                    },
                    {
                      "cases": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9720:656:76",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "9734:35:76",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "9753:6:76"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9765:2:76",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "9761:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9761:7:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "9749:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9749:20:76"
                                },
                                "variables": [
                                  {
                                    "name": "loopEnd",
                                    "nodeType": "YulTypedName",
                                    "src": "9738:7:76",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "9782:49:76",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "9826:4:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_string_storage",
                                    "nodeType": "YulIdentifier",
                                    "src": "9796:29:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9796:35:76"
                                },
                                "variables": [
                                  {
                                    "name": "dstPtr",
                                    "nodeType": "YulTypedName",
                                    "src": "9786:6:76",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "9844:10:76",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9853:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulTypedName",
                                    "src": "9848:1:76",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "9931:172:76",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "9956:6:76"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9974:3:76"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9979:9:76"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9970:3:76"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9970:19:76"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "9964:5:76"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9964:26:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "9949:6:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9949:42:76"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "9949:42:76"
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "10008:24:76",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "10022:6:76"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10030:1:76",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10018:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10018:14:76"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "dstPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "10008:6:76"
                                        }
                                      ]
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "10049:40:76",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10066:9:76"
                                          },
                                          {
                                            "name": "srcOffset_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "10077:11:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10062:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10062:27:76"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "srcOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "10049:9:76"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9878:1:76"
                                    },
                                    {
                                      "name": "loopEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "9881:7:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "9875:2:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9875:14:76"
                                },
                                "nodeType": "YulForLoop",
                                "post": {
                                  "nodeType": "YulBlock",
                                  "src": "9890:28:76",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "9892:24:76",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "9901:1:76"
                                          },
                                          {
                                            "name": "srcOffset_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "9904:11:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9897:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9897:19:76"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "9892:1:76"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "pre": {
                                  "nodeType": "YulBlock",
                                  "src": "9871:3:76",
                                  "statements": []
                                },
                                "src": "9867:236:76"
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "10151:166:76",
                                  "statements": [
                                    {
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "10169:43:76",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "10196:3:76"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "10201:9:76"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "10192:3:76"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10192:19:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "10186:5:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10186:26:76"
                                      },
                                      "variables": [
                                        {
                                          "name": "lastValue",
                                          "nodeType": "YulTypedName",
                                          "src": "10173:9:76",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "10236:6:76"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "lastValue",
                                                "nodeType": "YulIdentifier",
                                                "src": "10248:9:76"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "kind": "number",
                                                                "nodeType": "YulLiteral",
                                                                "src": "10275:1:76",
                                                                "type": "",
                                                                "value": "3"
                                                              },
                                                              {
                                                                "name": "newLen",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "10278:6:76"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shl",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "10271:3:76"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "10271:14:76"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "10287:3:76",
                                                            "type": "",
                                                            "value": "248"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "and",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "10267:3:76"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "10267:24:76"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "10297:1:76",
                                                            "type": "",
                                                            "value": "0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "10293:3:76"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "10293:6:76"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "shr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10263:3:76"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10263:37:76"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10259:3:76"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10259:42:76"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "10244:3:76"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10244:58:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "10229:6:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10229:74:76"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "10229:74:76"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "loopEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "10122:7:76"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "10131:6:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "10119:2:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10119:19:76"
                                },
                                "nodeType": "YulIf",
                                "src": "10116:201:76"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "10337:4:76"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10351:1:76",
                                              "type": "",
                                              "value": "1"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "10354:6:76"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "10347:3:76"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10347:14:76"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10363:1:76",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10343:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10343:22:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10330:6:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10330:36:76"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10330:36:76"
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "9713:663:76",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9718:1:76",
                            "type": "",
                            "value": "1"
                          }
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10393:234:76",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "10407:14:76",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10420:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulTypedName",
                                    "src": "10411:5:76",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "10456:67:76",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "10474:35:76",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "10493:3:76"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "10498:9:76"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "10489:3:76"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10489:19:76"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "10483:5:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10483:26:76"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "10474:5:76"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "10437:6:76"
                                },
                                "nodeType": "YulIf",
                                "src": "10434:89:76"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "10543:4:76"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "10602:5:76"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "10609:6:76"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                                        "nodeType": "YulIdentifier",
                                        "src": "10549:52:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10549:67:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10536:6:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10536:81:76"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10536:81:76"
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "10385:242:76",
                          "value": "default"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "name": "newLen",
                            "nodeType": "YulIdentifier",
                            "src": "9693:6:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9701:2:76",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9690:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9690:14:76"
                      },
                      "nodeType": "YulSwitch",
                      "src": "9683:944:76"
                    }
                  ]
                },
                "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "slot",
                    "nodeType": "YulTypedName",
                    "src": "9362:4:76",
                    "type": ""
                  },
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "9368:3:76",
                    "type": ""
                  }
                ],
                "src": "9281:1352:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10830:84:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10847:3:76"
                          },
                          {
                            "hexValue": "4c4956454c595f41535345545f4d414e414745525f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10852:27:76",
                            "type": "",
                            "value": "LIVELY_ASSET_MANAGER_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10840:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10840:40:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10840:40:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10889:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10900:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10905:2:76",
                            "type": "",
                            "value": "25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10896:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10896:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "10889:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_70afef11f0a97d8a13c21b549c71fd3c76dfa85c3edf6fab2aaeab37461c45b6__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "10814:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "10822:3:76",
                    "type": ""
                  }
                ],
                "src": "10638:276:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11111:73:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11128:3:76"
                          },
                          {
                            "hexValue": "4c416363657373436f6e74726f6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11133:16:76",
                            "type": "",
                            "value": "LAccessControl"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11121:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11121:29:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11121:29:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11159:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11170:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11175:2:76",
                            "type": "",
                            "value": "14"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11166:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11166:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "11159:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_ef504d6711f15f7266dbd8ca4cf4bb6b90c89b43a1cfe3ef5e399e96661e9580__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "11095:3:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "11103:3:76",
                    "type": ""
                  }
                ],
                "src": "10919:265:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11308:110:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11325:3:76"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11338:2:76",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11342:6:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11334:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11334:15:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11355:26:76",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11351:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11351:31:76"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11330:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11330:53:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11318:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11318:66:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11318:66:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11393:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11404:3:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11409:2:76",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11400:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11400:12:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "11393:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "11284:3:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "11289:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "11300:3:76",
                    "type": ""
                  }
                ],
                "src": "11189:229:76"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32t_addresst_bytes4(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_bytes4(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_RequestRegisterContext_$1912_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RequestRegisterContext_$1912_memory_ptr_$dyn_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x60\n            let tail_3 := add(tail_2, _4)\n            mstore(tail_2, mload(_3))\n            let memberValue0 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), _4)\n            let pos_1 := tail_3\n            let length_1 := mload(memberValue0)\n            mstore(tail_3, length_1)\n            pos_1 := add(tail_2, 128)\n            let srcPtr_1 := add(memberValue0, _1)\n            let i_2 := i\n            for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n            {\n                mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                pos_1 := add(pos_1, _1)\n                srcPtr_1 := add(srcPtr_1, _1)\n            }\n            mstore(add(tail_2, _2), iszero(iszero(mload(add(_3, _2)))))\n            tail_2 := pos_1\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_struct$_DataCollections_$1679_storage_ptrt_bytes32t_bytes4(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_bytes4(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_5e1f4b5408c4e898d13dbe5b20c0b51567a994aeecfa3e7cdd5bca1103414e4f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_COMMUNITY_DAO_ROLE\")\n        end := add(pos, 25)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_3956e7d0a095019dc92e8054f8e587695ab09abeb61332f17cc8480322afa18f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_GENERAL_REALM\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"1.0.0\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_b4956bfcdbf5f3dfba96ef5144393d49fc4f0b89970662cabbbe2260dd067b57__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_DAO_GROUP\")\n        end := add(pos, 16)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_489cac4c6e4e83c94905ba18bbf6bf1d1f9380743f360b6728ed1a1f41a60bef__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_SYSTEM_ADMIN_ROLE\")\n        end := add(pos, 24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_85e4914e182faf75e560b28ee52d78418278f4a5d877d5e783eef31d6b242544__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ASSET_ADMIN_ROLE\")\n        end := add(pos, 23)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_6646a90fef40ac8889babbb18332880f250531a7257cdcea7111176882ec2efb__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ASSET_GROUP\")\n        end := add(pos, 18)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_74b03194e5dbebc32540310b32ba65da80bee8d1d1822648cc9f42e2bef989b1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ANONYMOUS_ROLE\")\n        end := add(pos, 21)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_2160c8859b7f75319605166f9c961365bb32901fea3d3bb3bffbf72d4f28e925__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_COMMUNITY_DAO_EXECUTOR_RO\")\n        mstore(add(pos, 32), \"LE\")\n        end := add(pos, 34)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_7bf07a8780e5686544a29d30c1dae7013a2dd47ff2f26486755fbb37897a78c2__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ASSET_REALM\")\n        end := add(pos, 18)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_30915b12763c80516ad64fda7b17424d1281553fab5e63a20e8494dd8b84e411__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ADMIN_ROLE\")\n        end := add(pos, 17)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_GENERAL_GROUP\")\n        end := add(pos, 20)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_70afef11f0a97d8a13c21b549c71fd3c76dfa85c3edf6fab2aaeab37461c45b6__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ASSET_MANAGER_ROLE\")\n        end := add(pos, 25)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_ef504d6711f15f7266dbd8ca4cf4bb6b90c89b43a1cfe3ef5e399e96661e9580__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LAccessControl\")\n        end := add(pos, 14)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n}",
          "id": 76,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87D8E2B0 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0xC0A8CA0C GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xD98EF622 GT PUSH2 0x91 JUMPI DUP1 PUSH4 0xD98EF622 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xDD15702C EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xE99B513A EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xE9CFB672 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xEFEC2D5E EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF0984EE6 EQ PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0A8CA0C EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCB4A1BB7 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xCC6C3268 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xCE34A66D EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xD8B31999 EQ PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6196757 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xA6196757 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xAFB92706 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB019D53A EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xB899699C EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xBEC94751 EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87D8E2B0 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x89B5A834 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x9BB20D51 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x9FA79BF8 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA5F1E2FE EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF89D6F GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0x5F6CEF3C GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x5F6CEF3C EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x62F3C2D4 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x6787AD51 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x6AC58AC1 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x85DE3336 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4DF89D6F EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x513D425A EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x5632FFD8 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x5A96334B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x5B8BA898 EQ PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3167D0C4 GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x3167D0C4 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x337CD188 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x36206F04 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x37F4C930 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x4C95D60D EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x108F5BDC EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x16B714AD EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x20DD27AF EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x2466209B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x2D8BC9CB EQ PUSH2 0x2B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26A PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x290 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x290 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH2 0x26A PUSH2 0x91A JUMP JUMPDEST PUSH2 0x290 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x26A PUSH2 0x998 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x14AA JUMP JUMPDEST PUSH2 0x26A PUSH2 0x14EF JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x1518 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2546 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x258C JUMP JUMPDEST PUSH2 0x290 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x259B JUMP JUMPDEST PUSH2 0x290 PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2613 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2622 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x269D JUMP JUMPDEST PUSH2 0x290 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x26E2 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2700 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2734 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x275E JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x290 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x281B JUMP JUMPDEST PUSH2 0x290 PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x2845 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x51E CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0xBE22465D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBE22465D SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x6BC JUMPI PUSH2 0x6BC PUSH2 0x2B65 JUMP JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x6F1 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x6F1 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP2 PUSH2 0x77F SWAP2 ADD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0x80D JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x805 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x803 PUSH2 0x2B65 JUMP JUMPDEST EQ JUMPDEST SWAP2 POP POP PUSH2 0x912 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x877 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x2B65 JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x8A5 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x8D3 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x4 DUP10 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x805 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x803 PUSH2 0x2B65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x947 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x32 ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9D8 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA1B SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA44 JUMPI PUSH2 0xA44 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x17 DUP1 DUP3 MSTORE PUSH2 0x300 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH2 0x2E0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAAF JUMPI PUSH2 0xAAF PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0x48E6BE1C PUSH1 0xE0 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD9 JUMPI PUSH2 0xAD9 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAF7 JUMPI PUSH2 0xAF7 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x225BF2F9 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xB2C JUMPI PUSH2 0xB2C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB4A JUMPI PUSH2 0xB4A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x31C0493 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xB7F JUMPI PUSH2 0xB7F PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9D PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x5AC4B36F PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xBD2 JUMPI PUSH2 0xBD2 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xBF0 JUMPI PUSH2 0xBF0 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x771BCF45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC25 JUMPI PUSH2 0xC25 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0xC43 JUMPI PUSH2 0xC43 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x4346A04B PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC78 JUMPI PUSH2 0xC78 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0xC96 JUMPI PUSH2 0xC96 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xD3386401 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xCCB JUMPI PUSH2 0xCCB PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH2 0xCE9 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x70420EE3 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD1E JUMPI PUSH2 0xD1E PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0xD3C JUMPI PUSH2 0xD3C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x3CBE67E9 PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD71 JUMPI PUSH2 0xD71 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0xD8F JUMPI PUSH2 0xD8F PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB2DC26E5 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xDC4 JUMPI PUSH2 0xDC4 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 DUP2 MLOAD DUP2 LT PUSH2 0xDE2 JUMPI PUSH2 0xDE2 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x4F1D1675 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE17 JUMPI PUSH2 0xE17 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xA DUP2 MLOAD DUP2 LT PUSH2 0xE35 JUMPI PUSH2 0xE35 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x8F09E0F PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xE6A JUMPI PUSH2 0xE6A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xB DUP2 MLOAD DUP2 LT PUSH2 0xE88 JUMPI PUSH2 0xE88 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x93BA3131 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xEBD JUMPI PUSH2 0xEBD PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xC DUP2 MLOAD DUP2 LT PUSH2 0xEDB JUMPI PUSH2 0xEDB PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDF01DE45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF10 JUMPI PUSH2 0xF10 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xD DUP2 MLOAD DUP2 LT PUSH2 0xF2E JUMPI PUSH2 0xF2E PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x62AB8105 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF63 JUMPI PUSH2 0xF63 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xE DUP2 MLOAD DUP2 LT PUSH2 0xF81 JUMPI PUSH2 0xF81 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x738F1127 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xF DUP2 MLOAD DUP2 LT PUSH2 0xFD4 JUMPI PUSH2 0xFD4 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDBF304B PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1009 JUMPI PUSH2 0x1009 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x10 DUP2 MLOAD DUP2 LT PUSH2 0x1027 JUMPI PUSH2 0x1027 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7E99337 PUSH1 0xE3 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x105C JUMPI PUSH2 0x105C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x11 DUP2 MLOAD DUP2 LT PUSH2 0x107A JUMPI PUSH2 0x107A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB6C03F03 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x12 DUP2 MLOAD DUP2 LT PUSH2 0x10CD JUMPI PUSH2 0x10CD PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x12EC6FA3 PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1102 JUMPI PUSH2 0x1102 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x13 DUP2 MLOAD DUP2 LT PUSH2 0x1120 JUMPI PUSH2 0x1120 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x22DF6F5B PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x14 DUP2 MLOAD DUP2 LT PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xF2C673BD PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11A8 JUMPI PUSH2 0x11A8 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x15 DUP2 MLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH2 0x11C6 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE POP POP PUSH32 0x756AF45F4CE05D832BEE0C171992C529AD6D3CA8E13303D78FEACE2F8FD7FAF2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x16 DUP2 MLOAD DUP2 LT PUSH2 0x123A JUMPI PUSH2 0x123A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x125F SWAP2 ADD PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1288 JUMPI PUSH2 0x1288 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12AD JUMPI PUSH2 0x12AD PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x12F1 JUMPI PUSH2 0x12F1 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0xD9DC1F19 PUSH1 0xE0 SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x131B JUMPI PUSH2 0x131B PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1339 JUMPI PUSH2 0x1339 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7147855D PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1370 JUMPI PUSH2 0x1370 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x138E JUMPI PUSH2 0x138E PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x78EFA4ED PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x71D569D9 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x141A JUMPI PUSH2 0x141A PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1438 JUMPI PUSH2 0x1438 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x14C8 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x35 ADD PUSH2 0x532 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x1539 SWAP2 ADD PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1578 JUMPI PUSH2 0x1578 PUSH2 0x2B65 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x159E SWAP2 ADD PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DD PUSH2 0x2B65 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1621 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x166C SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16B9 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16E4 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x175D CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1728 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH2 0x28A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17A4 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x17D7 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17EF SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x183C SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1867 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x18AB CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1728 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH25 0x4C4956454C595F41535345545F4D414E414745525F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F3 SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1926 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x193E SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x198B SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19B6 SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH23 0x4C4956454C595F41535345545F41444D494E5F524F4C45 PUSH1 0x48 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A26 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A59 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A71 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ABE SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AE9 SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH25 0x4C4956454C595F434F4D4D554E4954595F44414F5F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B5B SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BA6 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BF3 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C1E SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DEC PUSH1 0x22 SWAP2 CODECOPY DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C77 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CC2 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D0F SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D3A SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DC4 SWAP1 PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1DF7 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E2B SWAP1 PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E78 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EBF SWAP1 PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F2C SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1F5F SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F77 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2027 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FC7 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x28B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x203A PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FC7 SWAP1 PUSH2 0x2B7B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x4C4956454C595F44414F5F47524F555 PUSH1 0x84 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2079 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20C4 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x213F PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2114 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST POP PUSH2 0x2152 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2114 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x4C4956454C595F41535345545F47524F555 PUSH1 0x74 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2193 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x21C6 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21DE SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2259 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x222E SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST POP PUSH2 0x226C PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x222E SWAP1 PUSH2 0x2B9F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22AF SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x22E2 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22FA SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x234F SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP3 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP1 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x14 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x34 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x23D9 SWAP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF2 SWAP1 PUSH2 0x2B29 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2433 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2466 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2497 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2505 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x25E0 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x25F1 JUMPI POP PUSH1 0x0 PUSH2 0x5CB JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2C1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH14 0x131058D8D95CDCD0DBDB9D1C9BDB PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH2 0x532 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0x151E765 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x5479D940 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x26BE SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x5C8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x6F1 SWAP1 PUSH2 0x2BC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH18 0x4C4956454C595F41535345545F5245414C4D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x532 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x27C6 JUMPI PUSH2 0x27C6 PUSH2 0x2B65 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x912 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x912 SWAP1 PUSH1 0x3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH2 0x288A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2B9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0x682 SWAP2 ADD PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x623 SWAP1 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP4 DUP4 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2906 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x5CB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x295F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x296F PUSH1 0x20 DUP5 ADD PUSH2 0x2930 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x29BD PUSH1 0x40 DUP7 ADD PUSH2 0x2930 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB PUSH1 0x60 DUP7 ADD PUSH2 0x2978 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2A7E JUMPI DUP10 DUP5 SUB PUSH1 0x3F NOT ADD DUP7 MSTORE DUP3 MLOAD DUP1 MLOAD DUP6 MSTORE DUP9 DUP2 ADD MLOAD PUSH1 0x60 DUP11 DUP8 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 DUP12 ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2A5E JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP5 MSTORE SWAP3 DUP13 ADD SWAP3 SWAP2 DUP13 ADD SWAP2 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2A34 JUMP JUMPDEST POP POP POP SWAP1 DUP9 ADD MLOAD ISZERO ISZERO SWAP5 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29FE JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2AD2 PUSH1 0x40 DUP6 ADD PUSH2 0x2978 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH25 0x4C4956454C595F434F4D4D554E4954595F44414F5F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE PUSH1 0x19 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH16 0x4C4956454C595F44414F5F47524F555 PUSH1 0x84 SHL DUP2 MSTORE PUSH1 0x10 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE PUSH1 0x18 ADD SWAP1 JUMP JUMPDEST PUSH23 0x4C4956454C595F41535345545F41444D494E5F524F4C45 PUSH1 0x48 SHL DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2BD6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BF6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH18 0x4C4956454C595F41535345545F47524F555 PUSH1 0x74 SHL DUP2 MSTORE PUSH1 0x12 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4C4956454C595F434F4D4D554E4954595F44414F5F4558454355544F525F524F DUP2 MSTORE PUSH2 0x4C45 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D01 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2CDE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CFD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CEA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D20 JUMPI PUSH2 0x2D20 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0x2D34 DUP2 PUSH2 0x2D2E DUP5 SLOAD PUSH2 0x2BC2 JUMP JUMPDEST DUP5 PUSH2 0x2CB7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2D69 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2D51 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2CFD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D98 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2D79 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2DB6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH25 0x4C4956454C595F41535345545F4D414E414745525F524F4C45 PUSH1 0x38 SHL DUP2 MSTORE PUSH1 0x19 ADD SWAP1 JUMP INVALID 0x4C 0x49 JUMP GASLIMIT 0x4C MSIZE 0x5F NUMBER 0x4F 0x4D 0x4D SSTORE 0x4E 0x49 SLOAD MSIZE 0x5F DIFFICULTY COINBASE 0x4F 0x5F GASLIMIT PC GASLIMIT NUMBER SSTORE SLOAD 0x4F MSTORE 0x5F MSTORE 0x4F 0x4C GASLIMIT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xD1 BYTE 0xC0 DUP6 0x2B 0xAE LOG2 0x2F 0xCA CALLER EQ 0xE8 SWAP9 0xC5 SWAP12 0x2F ADD CODESIZE 0x5E 0x4D PUSH20 0x694FB676A75405173A5764736F6C634300081100 CALLER ",
      "sourceMap": "527:13689:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:108;;;:::i;:::-;;;168:25:76;;;156:2;141:18;1750:108:17;;;;;;;;11195:208;;;;;;:::i;:::-;;:::i;:::-;;;664:14:76;;657:22;639:41;;627:2;612:18;11195:208:17;491:195:76;826:98:17;;;:::i;747:74::-;;;:::i;1129:90::-;;;:::i;10753:219::-;;;;;;:::i;:::-;;:::i;8573:251::-;;;;;;:::i;:::-;;:::i;1641:104::-;;;:::i;13789:193::-;;;;;;:::i;:::-;;:::i;1223:94::-;;;:::i;13398:175::-;;;;;;:::i;:::-;;:::i;7757:812::-;;;;;;:::i;:::-;;:::i;1418:106::-;;;:::i;12079:228::-;;;;;;:::i;:::-;;:::i;9837:270::-;;;;;;:::i;:::-;;:::i;928:94::-;;;:::i;5309:2444::-;;;:::i;:::-;;;;;;;:::i;10329:210::-;;;;;;:::i;:::-;;:::i;1027:98::-;;;:::i;9580:253::-;;;;;;:::i;:::-;;:::i;12311:199::-;;;;;;:::i;:::-;12439:4;12460:20;;;:11;;;;:20;;;;;:31;;-1:-1:-1;;;;;12460:31:17;:45;;;12311:199;13986:228;;;;;;:::i;:::-;;:::i;1997:100::-;;;:::i;2102:3203::-;;;;;;;;;;-1:-1:-1;2102:3203:17;;;;;:::i;:::-;;:::i;:::-;;13160:234;;;;;;:::i;:::-;;:::i;1529:108::-;;;:::i;9070:253::-;;;;;;:::i;:::-;;:::i;11623:255::-;;;;;;:::i;:::-;;:::i;1862:130::-;;;:::i;663:80::-;;;:::i;11407:212::-;;;;;;:::i;:::-;;:::i;13577:208::-;;;;;;:::i;:::-;;:::i;11882:193::-;;;;;;:::i;:::-;;:::i;10976:215::-;;;;;;:::i;:::-;;:::i;1322:92::-;;;:::i;10543:206::-;;;;;;:::i;:::-;;:::i;12811:345::-;;;;;;:::i;:::-;;:::i;12514:293::-;;;;;;:::i;:::-;;:::i;9327:249::-;;;;;;:::i;:::-;;:::i;8828:238::-;;;;;;:::i;:::-;;:::i;10111:214::-;;;;;;:::i;:::-;;:::i;1750:108::-;1812:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1802:56;;;;;;1750:108;:::o;11195:208::-;11325:4;11353:20;;;:11;;;;:20;;;;;;;;:31;;;;11346:52;;-1:-1:-1;;;11346:52:17;;;;-1:-1:-1;;;;;11353:31:17;;;;11346:50;;:52;;;;;11353:20;;11346:52;;;;;11353:31;11346:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11339:59;;11195:208;;;;;:::o;826:98::-;883:40;;;;;;;:::i;747:74::-;795:25;;-1:-1:-1;;;795:25:17;;;5067:20:76;5103:11;;795:25:17;4865:255:76;1129:90:17;1182:36;;;;;;;:::i;10753:219::-;10886:4;10907:60;10959:7;10907:4;:13;;:35;883:40;;;;;;;:::i;:::-;;;;;;;;;;;;;873:51;;;;;;10907:35;;;;;;;;;;;:42;;:51;;:60;;;;:::i;8573:251::-;-1:-1:-1;;;;;8730:24:17;;8709:4;8730:24;;;;;;;;;;;1479:44;;8784:35;;8709:4;;1479:44;;;;:::i;:::-;;;;-1:-1:-1;;1479:44:17;;;;;;;;;1469:55;;1479:44;1469:55;;;;8730:50;;;;;;;;;;-1:-1:-1;8730:50:17;;;;:89;;;;;;;;:::i;:::-;;;8573:251;-1:-1:-1;;;8573:251:17:o;1641:104::-;1701:43;;;;;;;:::i;13789:193::-;13913:4;13940:20;;;:13;;;:20;;;;;13934:39;;13913:4;;13940:20;13934:39;;;:::i;:::-;;;:43;13927:50;;13789:193;;;;:::o;1223:94::-;1278:38;;;;;;;:::i;13398:175::-;13508:4;13533:18;;;:12;;;:18;;;;;:23;;13527:37;;13508:4;;13533:23;13527:37;;;:::i;7757:812::-;7922:4;7949:20;;;:11;;;:20;;;;;;;;-1:-1:-1;;;;;;7949:41:17;;;;:30;;:41;;;;;:46;2055:41;;7949:46;;2055:41;;;-1:-1:-1;;;6949:36:76;;7010:2;7001:12;;6747:272;2055:41:17;;;;;;;;;;;;;2045:52;;;;;;8005:4;:29;8001:564;;8059:20;;;;:11;;;;:20;;;;;;:30;;-1:-1:-1;;;8059:30:17;;;;:129;;;;-1:-1:-1;8153:35:17;8101:20;;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;;;;8101:41:17;;;;:30;;;;:41;;;;;;:48;;;;;:87;;;;;;;:::i;:::-;;8059:129;8044:144;;;;;8001:564;8224:20;;;;:11;;;;:20;;;;;;:30;;-1:-1:-1;;;8224:30:17;;;;:129;;;;-1:-1:-1;8318:35:17;8266:20;;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;;;;8266:41:17;;;;:30;;;;:41;;;;;;:48;;;;;:87;;;;;;;:::i;:::-;;8224:129;:192;;;;-1:-1:-1;8365:41:17;8379:20;;;:11;;;;:20;;;;;;;;:26;8365:41;;:13;;;:41;;;;;;:51;;;;8224:192;:253;;;;-1:-1:-1;8428:39:17;8442:18;;;:12;;;:18;;;;;;;;:24;8428:39;;:13;;;:39;;;;;:49;;;;;8224:253;:334;;;;-1:-1:-1;8523:35:17;-1:-1:-1;;;;;8489:24:17;;:15;:24;;;;;;;;;;;:30;;;;;;;;;;;:69;;;;;;;;:::i;7757:812::-;;;;;;;:::o;1418:106::-;1479:44;;;;;;;:::i;12079:228::-;12204:4;12231:20;;;:13;;;:20;;;;;12225:39;;12204:4;;12231:20;12225:39;;;:::i;:::-;;;:43;:77;;;;-1:-1:-1;;12272:20:17;;;;:13;;;;;:20;;;;;:30;;;;;;12079:228::o;9837:270::-;-1:-1:-1;;;;;10003:24:17;;9982:4;10003:24;;;;;;;;;;;1937:54;;10067:35;;9982:4;;1937:54;;;;:::i;928:94::-;983:38;;-1:-1:-1;;;983:38:17;;;7549:33:76;7598:12;;983:38:17;7347:269:76;5309:2444:17;5479:50;;;5527:1;5479:50;;;5364;5479;;;;;;5422:54;;5479:50;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;5479:50:17;;;;;;;;;;;;;;;5422:107;;1376:37;;;;;;;:::i;:::-;;;;;;;;;;;;;1366:48;;;;;;5535:3;5539:1;5535:6;;;;;;;;:::i;:::-;;;;;;;:11;;:31;;;;;5591:4;5572:3;5576:1;5572:6;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;;:16;;;;:23;5624:16;;5637:2;5624:16;;;;;;;;;;5637:2;5624:16;;;;;;;;;-1:-1:-1;5624:16:17;5601:3;5605:1;5601:6;;;;;;;;:::i;:::-;;;;;;;:20;;:39;;;;5672:32;;;5646:3;5650:1;5646:6;;;;;;;;:::i;:::-;;;;;;;:20;;;5667:1;5646:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5646:58:17;;;:23;;;;;;;;;;;:58;5710:6;;-1:-1:-1;;;5736:27:17;5710:3;;5714:1;;5710:6;;;;:::i;:::-;;;;;;;:20;;;5731:1;5710:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5710:53:17;;;:23;;;;;;;;;;;:53;5769:6;;-1:-1:-1;;;5795:46:17;5769:3;;5773:1;;5769:6;;;;:::i;:::-;;;;;;;:20;;;5790:1;5769:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5769:72:17;;;:23;;;;;;;;;;;:72;5847:6;;-1:-1:-1;;;5873:45:17;5847:3;;5851:1;;5847:6;;;;:::i;:::-;;;;;;;:20;;;5868:1;5847:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5847:71:17;;;:23;;;;;;;;;;;:71;5924:6;;-1:-1:-1;;;5950:44:17;5924:3;;5928:1;;5924:6;;;;:::i;:::-;;;;;;;:20;;;5945:1;5924:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5924:70:17;;;:23;;;;;;;;;;;:70;6000:6;;-1:-1:-1;;;6026:45:17;6000:3;;6004:1;;6000:6;;;;:::i;:::-;;;;;;;:20;;;6021:1;6000:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6000:71:17;;;:23;;;;;;;;;;;:71;6077:6;;-1:-1:-1;;;6103:43:17;6077:3;;6081:1;;6077:6;;;;:::i;:::-;;;;;;;:20;;;6098:1;6077:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6077:69:17;;;:23;;;;;;;;;;;:69;6152:6;;-1:-1:-1;;;6178:44:17;6152:3;;6156:1;;6152:6;;;;:::i;:::-;;;;;;;:20;;;6173:1;6152:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6152:70:17;;;:23;;;;;;;;;;;:70;6228:6;;-1:-1:-1;;;6254:52:17;6228:3;;6232:1;;6228:6;;;;:::i;:::-;;;;;;;:20;;;6249:1;6228:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6228:78:17;;;:23;;;;;;;;;;;:78;6312:6;;-1:-1:-1;;;6338:37:17;6312:3;;6316:1;;6312:6;;;;:::i;:::-;;;;;;;:20;;;6333:1;6312:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6312:63:17;;;:23;;;;;;;;;;;:63;6381:6;;-1:-1:-1;;;6408:42:17;6381:3;;6385:1;;6381:6;;;;:::i;:::-;;;;;;;:20;;;6402:2;6381:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6381:69:17;;;:24;;;;;;;;;;;:69;6456:6;;-1:-1:-1;;;6483:41:17;6456:3;;6460:1;;6456:6;;;;:::i;:::-;;;;;;;:20;;;6477:2;6456:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6456:68:17;;;:24;;;;;;;;;;;:68;6530:6;;-1:-1:-1;;;6557:46:17;6530:3;;6534:1;;6530:6;;;;:::i;:::-;;;;;;;:20;;;6551:2;6530:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6530:73:17;;;:24;;;;;;;;;;;:73;6609:6;;-1:-1:-1;;;6636:42:17;6609:3;;6613:1;;6609:6;;;;:::i;:::-;;;;;;;:20;;;6630:2;6609:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6609:69:17;;;:24;;;;;;;;;;;:69;6684:6;;-1:-1:-1;;;6711:47:17;6684:3;;6688:1;;6684:6;;;;:::i;:::-;;;;;;;:20;;;6705:2;6684:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6684:74:17;;;:24;;;;;;;;;;;:74;6764:6;;-1:-1:-1;;;6791:38:17;6764:3;;6768:1;;6764:6;;;;:::i;:::-;;;;;;;:20;;;6785:2;6764:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6764:65:17;;;:24;;;;;;;;;;;:65;6835:6;;-1:-1:-1;;;6862:37:17;6835:3;;6839:1;;6835:6;;;;:::i;:::-;;;;;;;:20;;;6856:2;6835:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6835:64:17;;;:24;;;;;;;;;;;:64;6905:6;;-1:-1:-1;;;6932:39:17;6905:3;;6909:1;;6905:6;;;;:::i;:::-;;;;;;;:20;;;6926:2;6905:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6905:66:17;;;:24;;;;;;;;;;;:66;6977:6;;-1:-1:-1;;;7004:40:17;6977:3;;6981:1;;6977:6;;;;:::i;:::-;;;;;;;:20;;;6998:2;6977:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6977:67:17;;;:24;;;;;;;;;;;:67;7050:6;;-1:-1:-1;;;7077:39:17;7050:3;;7054:1;;7050:6;;;;:::i;:::-;;;;;;;:20;;;7071:2;7050:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7050:66:17;;;:24;;;;;;;;;;;:66;7122:6;;-1:-1:-1;;;7149:40:17;7122:3;;7126:1;;7122:6;;;;:::i;:::-;;;;;;;:20;;;7143:2;7122:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7122:67:17;;;:24;;;;;;;;;;;:67;7195:6;;-1:-1:-1;;;7222:47:17;7195:3;;7199:1;;7195:6;;;;:::i;:::-;;;;;;;:20;;;7216:2;7195:24;;;;;;;;:::i;:::-;;;;;;:74;-1:-1:-1;;;;;7195:74:17;;;;-1:-1:-1;;;;;7195:74:17;;;;;;7309:37;7275:3;7279:1;7275:6;;;;;;;;:::i;:::-;;;;;;;:20;;;7296:2;7275:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7275:72:17;;;:24;;;;;;;;;;:72;1479:44;;;;;;:::i;:::-;;;;;;;;;;;;;1469:55;;;;;;7354:3;7358:1;7354:6;;;;;;;;:::i;:::-;;;;;;;:11;;:38;;;;;7417:4;7398:3;7402:1;7398:6;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;;:16;;;;:23;7450:15;;7463:1;7450:15;;;;;;;;;;7463:1;7450:15;;;;;;;;;-1:-1:-1;7450:15:17;7427:3;7431:1;7427:6;;;;;;;;:::i;:::-;;;;;;;:20;;:38;;;;7497:29;;;7471:3;7475:1;7471:6;;;;;;;;:::i;:::-;;;;;;;:20;;;7492:1;7471:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7471:55:17;;;:23;;;;;;;;;;;:55;7532:6;;-1:-1:-1;;;7558:25:17;7532:3;;7536:1;;7532:6;;;;;;:::i;:::-;;;;;;;:20;;;7553:1;7532:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7532:51:17;;;:23;;;;;;;;;;;:51;7589:6;;-1:-1:-1;;;7615:43:17;7589:3;;7593:1;;7589:6;;;;;;:::i;:::-;;;;;;;:20;;;7610:1;7589:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7589:69:17;;;:23;;;;;;;;;;;:69;7664:6;;-1:-1:-1;;;7690:41:17;7664:3;;7668:1;;7664:6;;;;;;:::i;:::-;;;;;;;:20;;;7685:1;7664:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7664:67:17;;;:23;;;;;;;;;;;:67;7745:3;5309:2444;-1:-1:-1;5309:2444:17:o;10329:210::-;10457:4;10478:56;10529:4;10478;:13;;:33;1278:38;;;;;;;:::i;1027:98::-;1084:40;;;;;;;:::i;9580:253::-;-1:-1:-1;;;;;9738:24:17;;9717:4;9738:24;;;;;;;;;;;1812:45;;9793:35;;9717:4;;1812:45;;;;:::i;13986:228::-;14111:4;14138:20;;;:13;;;:20;;;;;14132:39;;14111:4;;14138:20;14132:39;;;:::i;:::-;;;:43;:77;;;;-1:-1:-1;;14179:20:17;;;;:13;;;;;:20;;;;;:30;;;;;;13986:228::o;1997:100::-;2055:41;;-1:-1:-1;;;2055:41:17;;;6949:36:76;7001:12;;2055:41:17;6747:272:76;2102:3203:17;2211:10;2195:15;:27;;;;;;;;;;;1376:37;;2244:35;;2195:27;;1376:37;;;;:::i;:::-;;;;-1:-1:-1;;1376:37:17;;;;;;;;;1366:48;;1376:37;1366:48;;;;2195:46;;;;;;;;;;-1:-1:-1;2195:46:17;:84;;-1:-1:-1;;2195:84:17;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2301:10:17;2285:15;:27;;;;;;;;;;;1479:44;;2341:35;;2285:27;;1479:44;;;;:::i;:::-;;;;-1:-1:-1;;1479:44:17;;;;;;;;;1469:55;;1479:44;1469:55;;;;2285:53;;;;;;;;;;-1:-1:-1;2285:53:17;:91;;-1:-1:-1;;2285:91:17;;;;;;;;;;;:::i;:::-;;;;;;2383:58;;;;;;;;;;;;;-1:-1:-1;;;2383:58:17;;;:4;:12;;:31;1376:37;;;;;;;:::i;:::-;;;;;;;;;;;;;1366:48;;;;;;2383:31;;;;;;;;;;;:36;;:58;;;;;;:::i;:::-;;2491:4;2447;:12;;:31;1376:37;;;;;;;:::i;:::-;;;;;;;;;;;;;1366:48;;;;;;2447:31;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;1084:40;;;;;;;:::i;:::-;;;;;;;;;;;;;1074:51;;;;;;2501:4;:12;;:31;1376:37;;;;;;;:::i;:::-;;;;;;;;;;;;;1366:48;;;;;;2501:31;;;;;;;;;;;:37;;:60;;;;2567:58;2614:10;2567:4;:12;;:31;1376:37;;;;;;;:::i;:::-;;;;;;;;;;;;;1366:48;;;;;;2567:31;;;;;;;;;;;:42;;:46;;:58;;;;:::i;:::-;;2632:72;;;;;;;;;;;;;-1:-1:-1;;;2632:72:17;;;:4;:12;;:38;1479:44;;;;;;;:::i;:::-;;;;;;;;;;;;;1469:55;;;;;;2632:38;;;;;;;;;;;:43;;:72;;;;;;:::i;:::-;;2761:4;2710;:12;;:38;1479:44;;;;;;;:::i;:::-;;;;;;;;;;;;;1469:55;;;;;;2710:38;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;1084:40;;;;;;;:::i;:::-;;;;;;;;;;;;;1074:51;;;;;;2771:4;:12;;:38;1479:44;;;;;;;:::i;:::-;;;;;;;;;;;;;1469:55;;;;;;2771:38;;;;;;;;;;;:44;;:67;;;;2844:65;2898:10;2844:4;:12;;:38;1479:44;;;;;;;:::i;2844:65::-;;2916:74;;;;;;;;;;;;;-1:-1:-1;;;2916:74:17;;;:4;:12;;:39;1591:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1581:56;;;;;;2916:39;;;;;;;;;;;:44;;:74;;;;;;:::i;:::-;;3048:4;2996;:12;;:39;1591:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1581:56;;;;;;2996:39;;;;;;;;;;;:49;;;:56;;;;;;;;;;;;;;;;;;1278:38;;;;;;;:::i;:::-;;;;;;;;;;;;;1268:49;;;;;;3058:4;:12;;:39;1591:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1581:56;;;;;;3058:39;;;;;;;;;;;:45;;:66;;;;3131:70;;;;;;;;;;;;;-1:-1:-1;;;3131:70:17;;;:4;:12;;:37;1701:43;;;;;;;:::i;:::-;;;;;;;;;;;;;1691:54;;;;;;3131:37;;;;;;;;;;;:42;;:70;;;;;;:::i;:::-;;3257:4;3207;:12;;:37;1701:43;;;;;;;:::i;:::-;;;;;;;;;;;;;1691:54;;;;;;3207:37;;;;;;;;;;;:47;;;:54;;;;;;;;;;;;;;;;;;1278:38;;;;;;;:::i;:::-;;;;;;;;;;;;;1268:49;;;;;;3267:4;:12;;:37;1701:43;;;;;;;:::i;:::-;;;;;;;;;;;;;1691:54;;;;;;3267:37;;;;;;;;;;;:43;;:64;;;;3338:74;;;;;;;;;;;;;-1:-1:-1;;;3338:74:17;;;:4;:12;;:39;1812:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1802:56;;;;;;3338:39;;;;;;;;;;;:44;;:74;;;;;;:::i;:::-;;3470:4;3418;:12;;:39;1812:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1802:56;;;;;;3418:39;;;;;;;;;;;:49;;;:56;;;;;;;;;;;;;;;;;;1182:36;;;;;;;:::i;:::-;;;;;;;;;;;;;1172:47;;;;;;3480:4;:12;;:39;1812:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1802:56;;;;;;3480:39;;;;;;;;;;;:45;;:64;;;;3551:92;;;;;;;;;;;;;;;;;:4;:12;;:48;1937:54;;;;;;;:::i;:::-;;;;;;;;;;;;;1927:65;;;;;;3551:48;;;;;;;;;;;:53;;:92;;;;;;:::i;:::-;;3710:4;3649;:12;;:48;1937:54;;;;;;;:::i;:::-;;;;;;;;;;;;;1927:65;;;;;;3649:48;;;;;;;;;;;:58;;;:65;;;;;;;;;;;;;;;;;;1182:36;;;;;;;:::i;:::-;;;;;;;;;;;;;1172:47;;;;;;3720:4;:12;;:48;1937:54;;;;;;;:::i;:::-;;;;;;;;;;;;;1927:65;;;;;;3720:48;;;;;;;;;;;:54;;:73;;;;3800:66;;;;;;;;;;;;;-1:-1:-1;;;3800:66:17;;;:4;:12;;:35;2055:41;;;;;;-1:-1:-1;;;6949:36:76;;7010:2;7001:12;;6747:272;2055:41:17;;;;;;;;;;;;;2045:52;;;;;;3800:35;;;;;;;;;;;:40;;:66;;;;;;:::i;:::-;;3920:4;3872;:12;;:35;2055:41;;;;;;-1:-1:-1;;;6949:36:76;;7010:2;7001:12;;6747:272;2055:41:17;;;;;;;;;;;;;2045:52;;;;;;3872:35;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;1084:40;;;;;;;:::i;:::-;;;;;;;;;;;;;1074:51;;;;;;3930:4;:12;;:35;2055:41;;;;;;-1:-1:-1;;;6949:36:76;;7010:2;7001:12;;6747:272;2055:41:17;;;;;;;;;;;;;2045:52;;;;;;3930:35;;;;;;;;;;;:41;;:64;;;;4001:65;;;;;;;;;;;;;-1:-1:-1;;;4001:65:17;;;:4;:13;;:35;1084:40;;;;;;;:::i;:::-;;;;;;;;;;;;;1074:51;;;;;;4001:35;;;;;;;;;;;:40;;:65;;;;;;:::i;:::-;;4120:4;4072;:13;;:35;1084:40;;;;;;;:::i;:::-;;;;;;;;;;;;;1074:51;;;;;;4072:35;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;4130:66;1376:37;;;;;;;:::i;:::-;;;;;;;;;;;;;1366:48;;;;;;4130:4;:13;;:35;1084:40;;;;;;;:::i;:::-;;;;;;;;;;;;;1074:51;;;;;;4130:35;;;;;;;;;;;:43;;:47;;:66;;;;:::i;:::-;;4202:73;1479:44;;;;;;;:::i;4202:73::-;;4282:57;;;;;;;;;;;;;-1:-1:-1;;;4282:57:17;;;:4;:13;;:31;1182:36;;;;;;;:::i;:::-;;;;;;;;;;;;;1172:47;;;;;;4282:31;;;;;;;;;;;:36;;:57;;;;;;:::i;:::-;;4389:4;4345;:13;;:31;1182:36;;;;;;;:::i;:::-;;;;;;;;;;;;;1172:47;;;;;;4345:31;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;4399:70;1812:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1802:56;;;;;;4399:4;:13;;:31;1182:36;;;;;;;:::i;4399:70::-;;4475:79;1937:54;;;;;;;:::i;4475:79::-;;4561:61;;;;;;;;;;;;;-1:-1:-1;;;4561:61:17;;;:4;:13;;:33;1278:38;;;;;;;:::i;:::-;;;;;;;;;;;;;1268:49;;;;;;4561:33;;;;;;;;;;;:38;;:61;;;;;;:::i;:::-;;4674:4;4628;:13;;:33;1278:38;;;;;;;:::i;:::-;;;;;;;;;;;;;1268:49;;;;;;4628:33;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;4684:72;1591:45;;;;;;;:::i;:::-;;;;;;;;;;;;;1581:56;;;;;;4684:4;:13;;:33;1278:38;;;;;;;:::i;4684:72::-;;4762:70;1701:43;;;;;;;:::i;4762:70::-;;4839:65;;;;;;;;;;;;;-1:-1:-1;;;4839:65:17;;;:4;:13;;:35;883:40;;;;;;;:::i;:::-;;;;;;;;;;;;;873:51;;;;;;4839:35;;;;;;;;;;;:40;;:65;;;;;;:::i;:::-;;4958:4;4910;:13;;:35;883:40;;;;;;;:::i;:::-;;;;;;;;;;;;;873:51;;;;;;4910:35;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;5019:4;4968;:13;;:35;883:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;883:40:17;;;;;;;;;873:51;;883:40;873:51;;;;4968:35;;;;;;;;;;;;-1:-1:-1;4968:35:17;:48;;:55;;;;;;;-1:-1:-1;;4968:55:17;;;;;;;;;;334:28:11;;5110:4:17;11338:2:76;11334:15;-1:-1:-1;;11330:53:76;334:28:11;;;11318:66:76;334:28:11;;;;;;;;;11400:12:76;;;;334:28:11;;;324:39;;;;;5029:88:17;;:4;:13;;:35;883:40;;;;;;;:::i;5029:88::-;;5124:61;;;;;;;;;;;;;-1:-1:-1;;;5124:61:17;;;:4;:13;;:33;983:38;;;;;;-1:-1:-1;;;7549:33:76;;7607:2;7598:12;;7347:269;983:38:17;;;;;;;;;;;;;973:49;;;;;;5124:33;;;;;;;;;;;:38;;:61;;;;;;:::i;:::-;;5237:4;5191;:13;;:33;983:38;;;;;;-1:-1:-1;;;7549:33:76;;7607:2;7598:12;;7347:269;983:38:17;;;;;;;;;;;;;973:49;;;;;;5191:33;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;5296:4;5247;:13;;:33;983:38;;;;;;-1:-1:-1;;;7549:33:76;;7607:2;7598:12;;7347:269;983:38:17;;;;;;;;;;;;;973:49;;;;;;5247:33;;;;;;;;;;;:46;;;:53;;;;;;;;;;;;;;;;;;2102:3203;:::o;13160:234::-;13289:4;13310:20;;;:11;;;;:20;;;;;:31;;-1:-1:-1;;;;;13310:31:17;:45;;;;:79;;-1:-1:-1;;13359:20:17;;;;:11;;;;:20;;;;;:30;;-1:-1:-1;;;13359:30:17;;;;;13160:234::o;1529:108::-;1591:45;;;;;;;:::i;9070:253::-;-1:-1:-1;;;;;9228:24:17;;9207:4;9228:24;;;;;;;;;;;1591:45;;9283:35;;9207:4;;1591:45;;;;:::i;11623:255::-;11751:4;11775:20;;;:13;;;:20;;;;;11769:39;;;;;:::i;:::-;;;11812:1;11769:44;11765:62;;-1:-1:-1;11822:5:17;11815:12;;11765:62;-1:-1:-1;11840:20:17;;;;:13;;;;;:20;;;;;:33;;;;;;;;;11623:255::o;1862:130::-;1937:54;;;;;;;:::i;663:80::-;708:34;;-1:-1:-1;;;708:34:17;;;11121:29:76;11166:12;;708:34:17;10919:265:76;11407:212:17;11539:4;11567:20;;;:11;;;;:20;;;;;;;;:31;;;;11560:54;;-1:-1:-1;;;11560:54:17;;;;-1:-1:-1;;;;;11567:31:17;;;;11560:52;;:54;;;;;11567:20;;11560:54;;;;;11567:31;11560:54;;;;;;;;;;;;;;13577:208;13688:4;13713:18;;;:12;;;:18;;;;;:23;;13707:37;;13688:4;;13713:23;13707:37;;;:::i;:::-;;;:41;:73;;;;-1:-1:-1;;13752:18:17;;;;:12;;;;:18;;;;;:28;;;;;13577:208::o;11882:193::-;12006:4;12033:20;;;:13;;;:20;;;;;12027:39;;12006:4;;12033:20;12027:39;;;:::i;10976:215::-;11107:4;11128:58;11178:7;11128:4;:13;;:33;983:38;;;;;;-1:-1:-1;;;7549:33:76;;7607:2;7598:12;;7347:269;1322:92:17;1376:37;;;;;;;:::i;10543:206::-;10669:4;10690:54;10739:4;10690;:13;;:31;1182:36;;;;;;;:::i;12811:345::-;12977:4;13002:20;;;:11;;;;:20;;;;;:31;;-1:-1:-1;;;;;13002:31:17;:45;;;;:149;;-1:-1:-1;13116:35:17;13057:20;;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;;;;13057:48:17;;;;:30;;;;:48;;;;;;:55;;;;;:94;;;;;;;:::i;:::-;;12989:162;12811:345;-1:-1:-1;;;;12811:345:17:o;12514:293::-;12679:4;12698:20;;;:11;;;;:20;;;;;:31;;-1:-1:-1;;;;;12698:31:17;:45;;;;:104;;-1:-1:-1;12747:20:17;;;;:11;;;:20;;;;;:55;;:28;;-1:-1:-1;;;;;;12747:55:17;;:37;:55::i;9327:249::-;-1:-1:-1;;;;;9483:24:17;;9462:4;9483:24;;;;;;;;;;;1701:43;;9536:35;;9462:4;;1701:43;;;;:::i;8828:238::-;-1:-1:-1;;;;;8979:24:17;;8958:4;8979:24;;;;;;;;;;;1376:37;;9026:35;;8958:4;;1376:37;;;;:::i;10111:214::-;10241:4;10262:58;10315:4;10262;:13;;:35;1084:40;;;;;;;:::i;5492:132:35:-;5572:4;3549:19;;;:12;;;:19;;;;;;:24;;5591:28;3457:121;7105:144;7175:4;7194:50;7199:3;-1:-1:-1;;;;;7219:23:35;;7194:4;:50::i;5025:117::-;5095:4;5114:23;5119:3;5131:5;1634:354;1697:4;3549:19;;;:12;;;:19;;;;;;1709:275;;-1:-1:-1;1745:23:35;;;;;;;;:11;:23;;;;;;;;;;;;;1907:18;;1885:19;;;:12;;;:19;;;;;;:40;;;;1933:11;;1709:275;-1:-1:-1;1972:5:35;1965:12;;204:282:76;306:6;314;367:2;355:9;346:7;342:23;338:32;335:52;;;383:1;380;373:12;335:52;-1:-1:-1;;406:23:76;;;476:2;461:18;;;448:32;;-1:-1:-1;204:282:76:o;691:173::-;759:20;;-1:-1:-1;;;;;808:31:76;;798:42;;788:70;;854:1;851;844:12;788:70;691:173;;;:::o;869:288::-;971:6;979;1032:2;1020:9;1011:7;1007:23;1003:32;1000:52;;;1048:1;1045;1038:12;1000:52;1084:9;1071:23;1061:33;;1113:38;1147:2;1136:9;1132:18;1113:38;:::i;:::-;1103:48;;869:288;;;;;:::o;1162:173::-;1229:20;;-1:-1:-1;;;;;;1278:32:76;;1268:43;;1258:71;;1325:1;1322;1315:12;1340:429;1459:6;1467;1475;1483;1536:3;1524:9;1515:7;1511:23;1507:33;1504:53;;;1553:1;1550;1543:12;1504:53;1589:9;1576:23;1566:33;;1646:2;1635:9;1631:18;1618:32;1608:42;;1669:38;1703:2;1692:9;1688:18;1669:38;:::i;:::-;1659:48;;1726:37;1759:2;1748:9;1744:18;1726:37;:::i;:::-;1716:47;;1340:429;;;;;;;:::o;1774:1669::-;2004:4;2033:2;2073;2062:9;2058:18;2103:2;2092:9;2085:21;2126:6;2161;2155:13;2192:6;2184;2177:22;2218:2;2208:12;;2251:2;2240:9;2236:18;2229:25;;2313:2;2303:6;2300:1;2296:14;2285:9;2281:30;2277:39;2351:2;2343:6;2339:15;2372:1;2393;2403:1011;2419:6;2414:3;2411:15;2403:1011;;;2488:22;;;-1:-1:-1;;2484:36:76;2472:49;;2544:13;;2654:9;;2639:25;;2703:11;;;2697:18;2580:4;2735:15;;;2728:27;;;2816:19;;2611:15;;;2848:24;;;2906:3;2894:16;;;2939:21;;;2984:1;;2998:236;3014:8;3009:3;3006:17;2998:236;;;3095:15;;-1:-1:-1;;;;;;3091:42:76;3077:57;;3160:14;;;;3203:17;;;;3042:1;3033:11;;;;;2998:236;;;-1:-1:-1;;;3291:11:76;;;3285:18;3278:26;3271:34;3254:15;;;3247:59;;;;3392:12;;;;3357:15;;;;2445:1;2436:11;2403:1011;;;-1:-1:-1;3431:6:76;;1774:1669;-1:-1:-1;;;;;;;;;1774:1669:76:o;3448:214::-;3541:6;3594:2;3582:9;3573:7;3569:23;3565:32;3562:52;;;3610:1;3607;3600:12;3562:52;-1:-1:-1;3633:23:76;;3448:214;-1:-1:-1;3448:214:76:o;3667:354::-;3777:6;3785;3793;3846:2;3834:9;3825:7;3821:23;3817:32;3814:52;;;3862:1;3859;3852:12;3814:52;3898:9;3885:23;3875:33;;3955:2;3944:9;3940:18;3927:32;3917:42;;3978:37;4011:2;4000:9;3996:18;3978:37;:::i;:::-;3968:47;;3667:354;;;;;:::o;4026:276::-;-1:-1:-1;;;4228:40:76;;4293:2;4284:12;;4026:276::o;4307:277::-;4374:6;4427:2;4415:9;4406:7;4402:23;4398:32;4395:52;;;4443:1;4440;4433:12;4395:52;4475:9;4469:16;4528:5;4521:13;4514:21;4507:5;4504:32;4494:60;;4550:1;4547;4540:12;4494:60;4573:5;4307:277;-1:-1:-1;;;4307:277:76:o;4589:271::-;-1:-1:-1;;;4791:35:76;;4851:2;4842:12;;4589:271::o;5125:267::-;-1:-1:-1;;;5327:31:76;;5383:2;5374:12;;5125:267::o;5397:127::-;5458:10;5453:3;5449:20;5446:1;5439:31;5489:4;5486:1;5479:15;5513:4;5510:1;5503:15;5529:275;-1:-1:-1;;;5731:39:76;;5795:2;5786:12;;5529:275::o;5809:274::-;-1:-1:-1;;;6011:38:76;;6074:2;6065:12;;5809:274::o;6088:380::-;6167:1;6163:12;;;;6210;;;6231:61;;6285:4;6277:6;6273:17;6263:27;;6231:61;6338:2;6330:6;6327:14;6307:18;6304:38;6301:161;;6384:10;6379:3;6375:20;6372:1;6365:31;6419:4;6416:1;6409:15;6447:4;6444:1;6437:15;6301:161;;6088:380;;;:::o;6473:269::-;-1:-1:-1;;;6675:33:76;;6733:2;6724:12;;6473:269::o;7024:318::-;7238:34;7226:47;;-1:-1:-1;;;7298:2:76;7289:12;;7282:26;7333:2;7324:12;;7024:318::o;7621:127::-;7682:10;7677:3;7673:20;7670:1;7663:31;7713:4;7710:1;7703:15;7737:4;7734:1;7727:15;7753:268;-1:-1:-1;;;7955:32:76;;8012:2;8003:12;;7753:268::o;8026:127::-;8087:10;8082:3;8078:20;8075:1;8068:31;8118:4;8115:1;8108:15;8142:4;8139:1;8132:15;8158:271;-1:-1:-1;;;8360:35:76;;8420:2;8411:12;;8158:271::o;8560:545::-;8662:2;8657:3;8654:11;8651:448;;;8698:1;8723:5;8719:2;8712:17;8768:4;8764:2;8754:19;8838:2;8826:10;8822:19;8819:1;8815:27;8809:4;8805:38;8874:4;8862:10;8859:20;8856:47;;;-1:-1:-1;8897:4:76;8856:47;8952:2;8947:3;8943:12;8940:1;8936:20;8930:4;8926:31;8916:41;;9007:82;9025:2;9018:5;9015:13;9007:82;;;9070:17;;;9051:1;9040:13;9007:82;;;9011:3;;;8651:448;8560:545;;;:::o;9281:1352::-;9407:3;9401:10;9434:18;9426:6;9423:30;9420:56;;;9456:18;;:::i;:::-;9485:97;9575:6;9535:38;9567:4;9561:11;9535:38;:::i;:::-;9529:4;9485:97;:::i;:::-;9637:4;;9701:2;9690:14;;9718:1;9713:663;;;;10420:1;10437:6;10434:89;;;-1:-1:-1;10489:19:76;;;10483:26;10434:89;-1:-1:-1;;9238:1:76;9234:11;;;9230:24;9226:29;9216:40;9262:1;9258:11;;;9213:57;10536:81;;9683:944;;9713:663;8507:1;8500:14;;;8544:4;8531:18;;-1:-1:-1;;9749:20:76;;;9867:236;9881:7;9878:1;9875:14;9867:236;;;9970:19;;;9964:26;9949:42;;10062:27;;;;10030:1;10018:14;;;;9897:19;;9867:236;;;9871:3;10131:6;10122:7;10119:19;10116:201;;;10192:19;;;10186:26;-1:-1:-1;;10275:1:76;10271:14;;;10287:3;10267:24;10263:37;10259:42;10244:58;10229:74;;10116:201;-1:-1:-1;;;;;10363:1:76;10347:14;;;10343:22;10330:36;;-1:-1:-1;9281:1352:76:o;10638:276::-;-1:-1:-1;;;10840:40:76;;10905:2;10896:12;;10638:276::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2368600",
        "executionCost": "2576",
        "totalCost": "2371176"
      },
      "external": {
        "LIB_NAME()": "448",
        "LIB_VERSION()": "428",
        "LIVELY_ADMIN_ROLE()": "466",
        "LIVELY_ANONYMOUS_ROLE()": "405",
        "LIVELY_ASSET_ADMIN_ROLE()": "423",
        "LIVELY_ASSET_GROUP()": "467",
        "LIVELY_ASSET_MANAGER_ROLE()": "378",
        "LIVELY_ASSET_REALM()": "360",
        "LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE()": "468",
        "LIVELY_COMMUNITY_DAO_ROLE()": "380",
        "LIVELY_DAO_GROUP()": "468",
        "LIVELY_GENERAL_GROUP()": "444",
        "LIVELY_GENERAL_REALM()": "424",
        "LIVELY_SYSTEM_ADMIN_ROLE()": "423",
        "createRequestContext()": "infinite",
        "hasAccess(AccessControlStorage.DataCollections storage,bytes32,address,bytes4)": "infinite",
        "initializeContext(AccessControlStorage.DataCollections storage)": "infinite",
        "isContextEnabled(AccessControlStorage.DataCollections storage,bytes32)": "4860",
        "isContextExists(AccessControlStorage.DataCollections storage,bytes32)": "2533",
        "isContextFunctionEnabled(AccessControlStorage.DataCollections storage,bytes32,bytes4)": "5031",
        "isContextFunctionExists(AccessControlStorage.DataCollections storage,bytes32,bytes4)": "5067",
        "isContextSafeMode(AccessControlStorage.DataCollections storage,bytes32)": "infinite",
        "isContextUpgradable(AccessControlStorage.DataCollections storage,bytes32)": "infinite",
        "isGroupEnabled(AccessControlStorage.DataCollections storage,bytes32)": "4935",
        "isGroupExists(AccessControlStorage.DataCollections storage,bytes32)": "2708",
        "isLivelyAdminRole(AccessControlStorage.DataCollections storage,address)": "2999",
        "isLivelyAssetAdminRole(AccessControlStorage.DataCollections storage,address)": "2977",
        "isLivelyAssetGroup(AccessControlStorage.DataCollections storage,bytes32)": "infinite",
        "isLivelyAssetManagerRole(AccessControlStorage.DataCollections storage,address)": "2934",
        "isLivelyAssetRealm(AccessControlStorage.DataCollections storage,bytes32)": "infinite",
        "isLivelyCommunityDaoExecutorRole(AccessControlStorage.DataCollections storage,address)": "3025",
        "isLivelyCommunityDaoRole(AccessControlStorage.DataCollections storage,address)": "3000",
        "isLivelyDaoGroup(AccessControlStorage.DataCollections storage,bytes32)": "infinite",
        "isLivelyGeneralGroup(AccessControlStorage.DataCollections storage,bytes32)": "infinite",
        "isLivelyGeneralRealm(AccessControlStorage.DataCollections storage,bytes32)": "infinite",
        "isLivelySystemAdminRole(AccessControlStorage.DataCollections storage,address)": "2935",
        "isRealmEnabled(AccessControlStorage.DataCollections storage,bytes32)": "4891",
        "isRealmExists(AccessControlStorage.DataCollections storage,bytes32)": "2731",
        "isRealmUpgradable(AccessControlStorage.DataCollections storage,bytes32)": "4910",
        "isRoleEnabled(AccessControlStorage.DataCollections storage,bytes32)": "4890",
        "isRoleExists(AccessControlStorage.DataCollections storage,bytes32)": "2671"
      }
    },
    "methodIdentifiers": {
      "LIB_NAME()": "bec94751",
      "LIB_VERSION()": "2466209b",
      "LIVELY_ADMIN_ROLE()": "d8b31999",
      "LIVELY_ANONYMOUS_ROLE()": "9bb20d51",
      "LIVELY_ASSET_ADMIN_ROLE()": "36206f04",
      "LIVELY_ASSET_GROUP()": "4c95d60d",
      "LIVELY_ASSET_MANAGER_ROLE()": "a6196757",
      "LIVELY_ASSET_REALM()": "5f6cef3c",
      "LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE()": "b899699c",
      "LIVELY_COMMUNITY_DAO_ROLE()": "108f5bdc",
      "LIVELY_DAO_GROUP()": "2d8bc9cb",
      "LIVELY_GENERAL_GROUP()": "6ac58ac1",
      "LIVELY_GENERAL_REALM()": "20dd27af",
      "LIVELY_SYSTEM_ADMIN_ROLE()": "5632ffd8",
      "createRequestContext()": "62f3c2d4",
      "hasAccess(AccessControlStorage.DataCollections storage,bytes32,address,bytes4)": "513d425a",
      "initializeContext(AccessControlStorage.DataCollections storage)": "9fa79bf8",
      "isContextEnabled(AccessControlStorage.DataCollections storage,bytes32)": "a5f1e2fe",
      "isContextExists(AccessControlStorage.DataCollections storage,bytes32)": "87d8e2b0",
      "isContextFunctionEnabled(AccessControlStorage.DataCollections storage,bytes32,bytes4)": "dd15702c",
      "isContextFunctionExists(AccessControlStorage.DataCollections storage,bytes32,bytes4)": "e99b513a",
      "isContextSafeMode(AccessControlStorage.DataCollections storage,bytes32)": "16b714ad",
      "isContextUpgradable(AccessControlStorage.DataCollections storage,bytes32)": "c0a8ca0c",
      "isGroupEnabled(AccessControlStorage.DataCollections storage,bytes32)": "5a96334b",
      "isGroupExists(AccessControlStorage.DataCollections storage,bytes32)": "cc6c3268",
      "isLivelyAdminRole(AccessControlStorage.DataCollections storage,address)": "efec2d5e",
      "isLivelyAssetAdminRole(AccessControlStorage.DataCollections storage,address)": "e9cfb672",
      "isLivelyAssetGroup(AccessControlStorage.DataCollections storage,bytes32)": "6787ad51",
      "isLivelyAssetManagerRole(AccessControlStorage.DataCollections storage,address)": "afb92706",
      "isLivelyAssetRealm(AccessControlStorage.DataCollections storage,bytes32)": "ce34a66d",
      "isLivelyCommunityDaoExecutorRole(AccessControlStorage.DataCollections storage,address)": "5b8ba898",
      "isLivelyCommunityDaoRole(AccessControlStorage.DataCollections storage,address)": "85de3336",
      "isLivelyDaoGroup(AccessControlStorage.DataCollections storage,bytes32)": "d98ef622",
      "isLivelyGeneralGroup(AccessControlStorage.DataCollections storage,bytes32)": "f0984ee6",
      "isLivelyGeneralRealm(AccessControlStorage.DataCollections storage,bytes32)": "3167d0c4",
      "isLivelySystemAdminRole(AccessControlStorage.DataCollections storage,address)": "337cd188",
      "isRealmEnabled(AccessControlStorage.DataCollections storage,bytes32)": "89b5a834",
      "isRealmExists(AccessControlStorage.DataCollections storage,bytes32)": "37f4c930",
      "isRealmUpgradable(AccessControlStorage.DataCollections storage,bytes32)": "b019d53a",
      "isRoleEnabled(AccessControlStorage.DataCollections storage,bytes32)": "cb4a1bb7",
      "isRoleExists(AccessControlStorage.DataCollections storage,bytes32)": "4df89d6f"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LIB_NAME\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIB_VERSION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ANONYMOUS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ASSET_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ASSET_GROUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ASSET_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ASSET_REALM\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_COMMUNITY_DAO_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_DAO_GROUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_GENERAL_GROUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_GENERAL_REALM\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_SYSTEM_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createRequestContext\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4[]\",\"name\":\"funcSelectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"internalType\":\"struct IContextManagement.RequestRegisterContext[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sina Tadayon, https://github.com/SinaTadayon\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Access Control Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/lib/acl/LAccessControl.sol\":\"LAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/acl/AccessControlStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.2)\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"../lib/struct/LEnumerableSet.sol\\\";\\nimport \\\"../lib/struct/LEnumerableMap.sol\\\";\\nimport \\\"../proxy/BaseUUPSStorage.sol\\\";\\n\\n/**\\n * @title Abstract Access Control Storage Contract\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\nabstract contract AccessControlStorage is BaseUUPSStorage {\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n  using LEnumerableMap for LEnumerableMap.Bytes32ToBytes32Map;\\n  using LEnumerableMap for LEnumerableMap.AddressToUintMap;\\n\\n  enum Status {\\n    NONE,\\n    ENABLED,\\n    DISABLED\\n  }\\n\\n  struct RoleStat {\\n    bytes32 role;\\n    Status status;\\n  }\\n\\n  struct Context {\\n    bytes32 realm;\\n    address contractId;\\n    bool isEnabled;\\n    mapping(bytes4 => RoleStat) resources; // function selector => RoleStat\\n    LEnumerableSet.Bytes32Set funcSet;\\n  }\\n\\n  struct Role {\\n    bytes32 group;\\n    string name;\\n    bool isEnabled;\\n    LEnumerableSet.AddressSet accountSet;\\n  }\\n\\n  struct Realm {\\n    string name;\\n    bool isEnabled;\\n    bool isUpgradable;\\n    LEnumerableSet.Bytes32Set ctxSet;\\n  }\\n\\n  struct Group {\\n    string name;\\n    bool isEnabled;\\n    LEnumerableSet.Bytes32Set roleSet;\\n  }\\n\\n  struct DataCollections {\\n    mapping(address => mapping(bytes32 => Status)) accountMap;\\n    mapping(bytes32 => Context) ctxMap;\\n    mapping(bytes32 => Role) roleMap;\\n    mapping(bytes32 => Realm) realmMap;\\n    mapping(bytes32 => Group) groupMap;\\n    uint8 permitRegisterContextCount;\\n  }\\n\\n  DataCollections internal _data;\\n\\n  // Note: for next upgrade add new variables after this line\\n}\\n\",\"keccak256\":\"0xdbdfc682c01a03c39ed4e95f343d60e75d0d6546d67fd01f63b2f679371ef6db\",\"license\":\"MIT\"},\"src/contracts/acl/IContextManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.2)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Context Management Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IContextManagement {\\n  enum UpdateContextStatus {\\n    DISABLE,\\n    ENABLE,\\n    REMOVE\\n  }\\n\\n  struct RequestContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    address contractId;\\n    bool status;\\n  }\\n\\n  struct RequestPredictContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    bytes32 salt;\\n    address subject;\\n    address deployer;\\n    bool status;\\n  }\\n\\n  struct RequestRegisterContext {\\n    bytes32 role;\\n    bytes4[] funcSelectors;\\n    bool isEnabled;\\n  }\\n\\n  struct RequestUpdateContext {\\n    bytes32 role;\\n    bytes4[] funcSelectors;\\n    UpdateContextStatus updateStatus;\\n  }\\n\\n  struct ResponseContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    address contractId;\\n    bool isSafeMode;\\n    bool isUpgradable;\\n  }\\n\\n  event ContextRegistered(\\n    bytes32 indexed context,\\n    address indexed contractId,\\n    address indexed sender,\\n    address signer,\\n    bytes32 realm\\n  );\\n\\n  event PredictContextRegistered(\\n    bytes32 indexed context,\\n    address indexed contractId,\\n    address indexed sender,\\n    address signer,\\n    address deployer,\\n    address subject,\\n    bytes32 realm\\n  );\\n\\n  event ContextUpdated(bytes32 indexed context, address indexed contractId, address indexed sender, bytes32 realm);\\n\\n  event ContextStatusChanged(bytes32 indexed context, address indexed sender, bytes32 indexed realm, bool status);\\n\\n  event ContextFuncRoleAdded(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextFuncRemoved(bytes32 indexed context, address indexed sender, bytes4 functionSelector, bytes32 realm);\\n\\n  event ContextRoleGranted(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextRoleRevoked(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextRealmChanged(bytes32 indexed context, address indexed sender, bytes32 indexed realm, bytes32 oldRealm);\\n\\n  event PermitRegisterContextUpdated(address indexed sender, uint8 count);\\n\\n  function registerContext(\\n    bytes memory signature,\\n    RequestContext calldata rc,\\n    RequestRegisterContext[] calldata rcr\\n  ) external returns (bytes32);\\n\\n  function registerPredictContext(\\n    bytes memory signature,\\n    RequestPredictContext calldata rpc,\\n    RequestRegisterContext[] calldata rrc\\n  ) external returns (bytes32);\\n\\n  function updateContext(\\n    bytes memory signature,\\n    RequestContext calldata rc,\\n    RequestUpdateContext[] calldata ruc\\n  ) external returns (address);\\n\\n  function addContextFuncRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function removeContextFunc(bytes32 ctx, bytes4 functionSelector) external returns (bool);\\n\\n  function grantContextRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function revokeContextRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function setContextRealm(bytes32 ctx, bytes32 realm) external returns (bool);\\n\\n  function setContextStatus(bytes32 ctx, bool status) external returns (bool);\\n\\n  function setPermitRegisterContext(uint8 contextCount) external returns (bool);\\n\\n  function hasContextRole(\\n    bytes32 ctx,\\n    bytes32 role,\\n    bytes4 functionSelector\\n  ) external view returns (bool);\\n\\n  function getContextInfo(bytes32 ctx) external view returns (ResponseContext memory);\\n\\n  function getContextFuncs(bytes32 ctx) external view returns (bytes4[] memory);\\n\\n  function getPermitRegisterContext() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x1eb620018be29324866e830bd9db5fb121e9a47b3ead5d70b22ce9d2afd27591\",\"license\":\"MIT\"},\"src/contracts/acl/IGroupManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Group Management Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IGroupManagement {\\n  event GroupRegistered(bytes32 indexed group, address indexed sender, string name, bool status);\\n\\n  event GroupStatusChanged(bytes32 indexed group, address indexed sender, bool status);\\n\\n  function registerGroup(string calldata name, bool status) external returns (bytes32);\\n\\n  function setGroupStatus(bytes32 group, bool status) external returns (bool);\\n\\n  function hasGroupRole(bytes32 group, bytes32 role) external view returns (bool);\\n\\n  function getGroupInfo(bytes32 group) external view returns (string memory, bool);\\n\\n  function getGroupRoles(bytes32 group) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x378cae0f5119f479ad18ff8070c42a9dcbba635d3af134043b0d50b5b8659841\",\"license\":\"MIT\"},\"src/contracts/acl/IRealmManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Realm Management Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IRealmManagement {\\n  event RealmRegistered(bytes32 indexed realm, address indexed sender, string name, bool status, bool isUpgradable);\\n\\n  event RealmStatusChanged(bytes32 indexed realm, address indexed sender, bool status);\\n\\n  event RealmUpgradeStatusChanged(bytes32 indexed realm, address indexed sender, bool status);\\n\\n  function registerRealm(\\n    string calldata name,\\n    bool status,\\n    bool isUpgradable\\n  ) external returns (bytes32);\\n\\n  function setRealmStatus(bytes32 realm, bool status) external returns (bool);\\n\\n  function setRealmUpgradeStatus(bytes32 realm, bool status) external returns (bool);\\n\\n  function hasRealmContext(bytes32 realm, bytes32 context) external view returns (bool);\\n\\n  function getRealmInfo(bytes32 realm)\\n    external\\n    view\\n    returns (\\n      string memory,\\n      bool,\\n      bool\\n    );\\n\\n  function getRealmContexts(bytes32 realm) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x921b89269007e88146e70117302087f98b9bab941e8ac3104b0c7d1f24f05337\",\"license\":\"MIT\"},\"src/contracts/acl/IRoleManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.2)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Role Management Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IRoleManagement {\\n  struct RegisterRoleRequest {\\n    bytes32 group;\\n    string name;\\n    bool status;\\n  }\\n\\n  struct UpdateRoleRequest {\\n    bytes32 role;\\n    address account;\\n  }\\n\\n  event RoleAccountGranted(address indexed sender, bytes32 indexed role, address indexed account);\\n\\n  event RoleAccountRevoked(address indexed sender, bytes32 indexed role, address indexed account);\\n\\n  event RoleRegistered(\\n    address indexed sender,\\n    bytes32 indexed role,\\n    string indexed name,\\n    bytes32 group,\\n    bool isEnabled\\n  );\\n\\n  event RoleStatusChanged(address indexed sender, bytes32 indexed role, bytes32 indexed group, bool status);\\n\\n  event RoleGroupChanged(address indexed sender, bytes32 indexed role, bytes32 indexed newGroup, bytes32 oldGroup);\\n\\n  function registerRole(\\n    string calldata name,\\n    bytes32 group,\\n    bool status\\n  ) external returns (bytes32);\\n\\n  function batchRegisterRole(RegisterRoleRequest[] calldata requests) external returns (bytes32[] memory);\\n\\n  function grantRoleAccount(bytes32 role, address account) external returns (bool);\\n\\n  function batchGrantRoleAccount(UpdateRoleRequest[] calldata requests) external returns (bool);\\n\\n  function revokeRoleAccount(bytes32 role, address account) external returns (bool);\\n\\n  function batchRevokeRoleAccount(UpdateRoleRequest[] calldata requests) external returns (bool);\\n\\n  function setRoleStatus(bytes32 role, bool status) external returns (bool);\\n\\n  function setRoleGroup(bytes32 role, bytes32 group) external returns (bool);\\n\\n  function getRoleInfo(bytes32 role)\\n    external\\n    view\\n    returns (\\n      string memory,\\n      bytes32,\\n      bool\\n    );\\n\\n  function getRoleAccounts(bytes32 role) external view returns (address[] memory);\\n\\n  function hasRoleAccount(bytes32 role, address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x01452bc2fe591bf83988105aee822011a96c387fdf0fbfc03fd0e2d2f45bed44\",\"license\":\"MIT\"},\"src/contracts/lib/LContextUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Context Utils Library\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\nlibrary LContextUtils {\\n  function generateCtx(address contractId) internal pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(contractId));\\n  }\\n}\\n\",\"keccak256\":\"0x7f6449f319a14b5ebfd88e2616ffe0432f4a3ba73ed67f67a64ba50d7969a036\",\"license\":\"MIT\"},\"src/contracts/lib/acl/LAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.2)\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"../../acl/IContextManagement.sol\\\";\\nimport \\\"../../acl/IRoleManagement.sol\\\";\\nimport \\\"../../acl/IGroupManagement.sol\\\";\\nimport \\\"../../acl/IRealmManagement.sol\\\";\\nimport \\\"../../acl/AccessControlStorage.sol\\\";\\nimport \\\"../../proxy/IProxy.sol\\\";\\nimport \\\"../struct/LEnumerableSet.sol\\\";\\nimport \\\"../LContextUtils.sol\\\";\\n\\n/**\\n * @title Access Control Library\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\nlibrary LAccessControl {\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n\\n  bytes32 public constant LIB_NAME = keccak256(abi.encodePacked(\\\"LAccessControl\\\"));\\n  bytes32 public constant LIB_VERSION = keccak256(abi.encodePacked(\\\"1.0.0\\\"));\\n\\n  bytes32 public constant LIVELY_GENERAL_REALM = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_REALM\\\"));\\n  bytes32 public constant LIVELY_ASSET_REALM = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_REALM\\\"));\\n\\n  bytes32 public constant LIVELY_GENERAL_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_GROUP\\\"));\\n  bytes32 public constant LIVELY_DAO_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_DAO_GROUP\\\"));\\n  bytes32 public constant LIVELY_ASSET_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_GROUP\\\"));\\n\\n  bytes32 public constant LIVELY_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ADMIN_ROLE\\\"));\\n  bytes32 public constant LIVELY_SYSTEM_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_SYSTEM_ADMIN_ROLE\\\"));\\n\\n  bytes32 public constant LIVELY_ASSET_MANAGER_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_MANAGER_ROLE\\\"));\\n  bytes32 public constant LIVELY_ASSET_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_ADMIN_ROLE\\\"));\\n\\n  bytes32 public constant LIVELY_COMMUNITY_DAO_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_COMMUNITY_DAO_ROLE\\\"));\\n  bytes32 public constant LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE =\\n    keccak256(abi.encodePacked(\\\"LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE\\\"));\\n\\n  bytes32 public constant LIVELY_ANONYMOUS_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ANONYMOUS_ROLE\\\"));\\n\\n  function initializeContext(AccessControlStorage.DataCollections storage data) external {\\n    data.accountMap[msg.sender][LIVELY_ADMIN_ROLE] = AccessControlStorage.Status.ENABLED;\\n    data.accountMap[msg.sender][LIVELY_SYSTEM_ADMIN_ROLE] = AccessControlStorage.Status.ENABLED;\\n\\n    data.roleMap[LIVELY_ADMIN_ROLE].name = \\\"LIVELY_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ADMIN_ROLE].group = LIVELY_GENERAL_GROUP;\\n    data.roleMap[LIVELY_ADMIN_ROLE].accountSet.add(msg.sender);\\n\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].name = \\\"LIVELY_SYSTEM_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].group = LIVELY_GENERAL_GROUP;\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].accountSet.add(msg.sender);\\n\\n    data.roleMap[LIVELY_ASSET_MANAGER_ROLE].name = \\\"LIVELY_ASSET_MANAGER_ROLE\\\";\\n    data.roleMap[LIVELY_ASSET_MANAGER_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ASSET_MANAGER_ROLE].group = LIVELY_ASSET_GROUP;\\n\\n    data.roleMap[LIVELY_ASSET_ADMIN_ROLE].name = \\\"LIVELY_ASSET_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_ASSET_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ASSET_ADMIN_ROLE].group = LIVELY_ASSET_GROUP;\\n\\n    data.roleMap[LIVELY_COMMUNITY_DAO_ROLE].name = \\\"LIVELY_COMMUNITY_DAO_ROLE\\\";\\n    data.roleMap[LIVELY_COMMUNITY_DAO_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_COMMUNITY_DAO_ROLE].group = LIVELY_DAO_GROUP;\\n\\n    data.roleMap[LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE].name = \\\"LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE\\\";\\n    data.roleMap[LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE].group = LIVELY_DAO_GROUP;\\n\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].name = \\\"LIVELY_ANONYMOUS_ROLE\\\";\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].group = LIVELY_GENERAL_GROUP;\\n\\n    data.groupMap[LIVELY_GENERAL_GROUP].name = \\\"LIVELY_GENERAL_GROUP\\\";\\n    data.groupMap[LIVELY_GENERAL_GROUP].isEnabled = true;\\n    data.groupMap[LIVELY_GENERAL_GROUP].roleSet.add(LIVELY_ADMIN_ROLE);\\n    data.groupMap[LIVELY_GENERAL_GROUP].roleSet.add(LIVELY_SYSTEM_ADMIN_ROLE);\\n\\n    data.groupMap[LIVELY_DAO_GROUP].name = \\\"LIVELY_DAO_GROUP\\\";\\n    data.groupMap[LIVELY_DAO_GROUP].isEnabled = true;\\n    data.groupMap[LIVELY_DAO_GROUP].roleSet.add(LIVELY_COMMUNITY_DAO_ROLE);\\n    data.groupMap[LIVELY_DAO_GROUP].roleSet.add(LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE);\\n\\n    data.groupMap[LIVELY_ASSET_GROUP].name = \\\"LIVELY_ASSET_GROUP\\\";\\n    data.groupMap[LIVELY_ASSET_GROUP].isEnabled = true;\\n    data.groupMap[LIVELY_ASSET_GROUP].roleSet.add(LIVELY_ASSET_MANAGER_ROLE);\\n    data.groupMap[LIVELY_ASSET_GROUP].roleSet.add(LIVELY_ASSET_ADMIN_ROLE);\\n\\n    data.realmMap[LIVELY_GENERAL_REALM].name = \\\"LIVELY_GENERAL_REALM\\\";\\n    data.realmMap[LIVELY_GENERAL_REALM].isEnabled = true;\\n    data.realmMap[LIVELY_GENERAL_REALM].isUpgradable = true;\\n    data.realmMap[LIVELY_GENERAL_REALM].ctxSet.add(LContextUtils.generateCtx(address(this)));\\n\\n    data.realmMap[LIVELY_ASSET_REALM].name = \\\"LIVELY_ASSET_REALM\\\";\\n    data.realmMap[LIVELY_ASSET_REALM].isEnabled = true;\\n    data.realmMap[LIVELY_ASSET_REALM].isUpgradable = true;\\n  }\\n\\n  function createRequestContext() external pure returns (IContextManagement.RequestRegisterContext[] memory) {\\n    IContextManagement.RequestRegisterContext[] memory rrc = new IContextManagement.RequestRegisterContext[](2);\\n    rrc[0].role = LIVELY_ADMIN_ROLE;\\n    rrc[0].isEnabled = true;\\n    rrc[0].funcSelectors = new bytes4[](23);\\n    rrc[0].funcSelectors[0] = IProxy.setUpgradeStatus.selector;\\n    rrc[0].funcSelectors[1] = IProxy.setSafeMode.selector;\\n    rrc[0].funcSelectors[2] = IContextManagement.addContextFuncRole.selector;\\n    rrc[0].funcSelectors[3] = IContextManagement.removeContextFunc.selector;\\n    rrc[0].funcSelectors[4] = IContextManagement.grantContextRole.selector;\\n    rrc[0].funcSelectors[5] = IContextManagement.revokeContextRole.selector;\\n    rrc[0].funcSelectors[6] = IContextManagement.setContextRealm.selector;\\n    rrc[0].funcSelectors[7] = IContextManagement.setContextStatus.selector;\\n    rrc[0].funcSelectors[8] = IContextManagement.setPermitRegisterContext.selector;\\n    rrc[0].funcSelectors[9] = IRoleManagement.registerRole.selector;\\n    rrc[0].funcSelectors[10] = IRoleManagement.batchRegisterRole.selector;\\n    rrc[0].funcSelectors[11] = IRoleManagement.grantRoleAccount.selector;\\n    rrc[0].funcSelectors[12] = IRoleManagement.batchGrantRoleAccount.selector;\\n    rrc[0].funcSelectors[13] = IRoleManagement.revokeRoleAccount.selector;\\n    rrc[0].funcSelectors[14] = IRoleManagement.batchRevokeRoleAccount.selector;\\n    rrc[0].funcSelectors[15] = IRoleManagement.setRoleStatus.selector;\\n    rrc[0].funcSelectors[16] = IRoleManagement.setRoleGroup.selector;\\n    rrc[0].funcSelectors[17] = IGroupManagement.registerGroup.selector;\\n    rrc[0].funcSelectors[18] = IGroupManagement.setGroupStatus.selector;\\n    rrc[0].funcSelectors[19] = IRealmManagement.registerRealm.selector;\\n    rrc[0].funcSelectors[20] = IRealmManagement.setRealmStatus.selector;\\n    rrc[0].funcSelectors[21] = IRealmManagement.setRealmUpgradeStatus.selector;\\n    rrc[0].funcSelectors[22] = bytes4(keccak256(\\\"withdrawBalance(address)\\\"));\\n\\n    rrc[1].role = LIVELY_SYSTEM_ADMIN_ROLE;\\n    rrc[1].isEnabled = true;\\n    rrc[1].funcSelectors = new bytes4[](4);\\n    rrc[1].funcSelectors[0] = IProxy.setLocalAdmin.selector;\\n    rrc[1].funcSelectors[1] = IProxy.upgradeTo.selector;\\n    rrc[1].funcSelectors[2] = IContextManagement.registerContext.selector;\\n    rrc[1].funcSelectors[3] = IContextManagement.updateContext.selector;\\n\\n    return rrc;\\n  }\\n\\n  function hasAccess(\\n    AccessControlStorage.DataCollections storage data,\\n    bytes32 context,\\n    address account,\\n    bytes4 signature\\n  ) external view returns (bool) {\\n    bytes32 role = data.ctxMap[context].resources[signature].role;\\n    if (role == LIVELY_ANONYMOUS_ROLE) {\\n      return\\n        data.ctxMap[context].isEnabled &&\\n        data.ctxMap[context].resources[signature].status == AccessControlStorage.Status.ENABLED;\\n    } else {\\n      return\\n        data.ctxMap[context].isEnabled &&\\n        data.ctxMap[context].resources[signature].status == AccessControlStorage.Status.ENABLED &&\\n        data.realmMap[data.ctxMap[context].realm].isEnabled &&\\n        data.groupMap[data.roleMap[role].group].isEnabled &&\\n        data.accountMap[account][role] == AccessControlStorage.Status.ENABLED;\\n    }\\n  }\\n\\n  function isLivelySystemAdminRole(AccessControlStorage.DataCollections storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_SYSTEM_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyAdminRole(AccessControlStorage.DataCollections storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyAssetManagerRole(AccessControlStorage.DataCollections storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_ASSET_MANAGER_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyAssetAdminRole(AccessControlStorage.DataCollections storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_ASSET_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyCommunityDaoRole(AccessControlStorage.DataCollections storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_COMMUNITY_DAO_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyCommunityDaoExecutorRole(AccessControlStorage.DataCollections storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyGeneralGroup(AccessControlStorage.DataCollections storage data, bytes32 role)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.groupMap[LIVELY_GENERAL_GROUP].roleSet.contains(role);\\n  }\\n\\n  function isLivelyAssetGroup(AccessControlStorage.DataCollections storage data, bytes32 role)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.groupMap[LIVELY_ASSET_GROUP].roleSet.contains(role);\\n  }\\n\\n  function isLivelyDaoGroup(AccessControlStorage.DataCollections storage data, bytes32 role)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.groupMap[LIVELY_DAO_GROUP].roleSet.contains(role);\\n  }\\n\\n  function isLivelyGeneralRealm(AccessControlStorage.DataCollections storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.realmMap[LIVELY_GENERAL_REALM].ctxSet.contains(context);\\n  }\\n\\n  function isLivelyAssetRealm(AccessControlStorage.DataCollections storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.realmMap[LIVELY_ASSET_REALM].ctxSet.contains(context);\\n  }\\n\\n  function isContextSafeMode(AccessControlStorage.DataCollections storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return IProxy(data.ctxMap[context].contractId).isSafeMode();\\n  }\\n\\n  function isContextUpgradable(AccessControlStorage.DataCollections storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return IProxy(data.ctxMap[context].contractId).isUpgradable();\\n  }\\n\\n  function isRealmUpgradable(AccessControlStorage.DataCollections storage data, bytes32 realm)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    if (bytes(data.realmMap[realm].name).length == 0) return false;\\n    return data.realmMap[realm].isUpgradable;\\n  }\\n\\n  function isGroupExists(AccessControlStorage.DataCollections storage data, bytes32 group)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return bytes(data.groupMap[group].name).length > 0;\\n  }\\n\\n  function isGroupEnabled(AccessControlStorage.DataCollections storage data, bytes32 group)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return bytes(data.groupMap[group].name).length > 0 && data.groupMap[group].isEnabled;\\n  }\\n\\n  function isContextExists(AccessControlStorage.DataCollections storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.ctxMap[context].contractId != address(0);\\n  }\\n\\n  function isContextFunctionExists(\\n    AccessControlStorage.DataCollections storage data,\\n    bytes32 context,\\n    bytes4 functionSelector\\n  ) external view returns (bool) {\\n    return data.ctxMap[context].contractId != address(0) && data.ctxMap[context].funcSet.contains(functionSelector);\\n  }\\n\\n  function isContextFunctionEnabled(\\n    AccessControlStorage.DataCollections storage data,\\n    bytes32 context,\\n    bytes4 functionSelector\\n  ) external view returns (bool) {\\n    return\\n      data.ctxMap[context].contractId != address(0) &&\\n      data.ctxMap[context].resources[functionSelector].status == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isContextEnabled(AccessControlStorage.DataCollections storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.ctxMap[context].contractId != address(0) && data.ctxMap[context].isEnabled;\\n  }\\n\\n  function isRoleExists(AccessControlStorage.DataCollections storage data, bytes32 role) external view returns (bool) {\\n    return bytes(data.roleMap[role].name).length > 0;\\n  }\\n\\n  function isRoleEnabled(AccessControlStorage.DataCollections storage data, bytes32 role) external view returns (bool) {\\n    return bytes(data.roleMap[role].name).length > 0 && data.roleMap[role].isEnabled;\\n  }\\n\\n  function isRealmExists(AccessControlStorage.DataCollections storage data, bytes32 realm)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return bytes(data.realmMap[realm].name).length > 0;\\n  }\\n\\n  function isRealmEnabled(AccessControlStorage.DataCollections storage data, bytes32 realm)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return bytes(data.realmMap[realm].name).length > 0 && data.realmMap[realm].isEnabled;\\n  }\\n}\\n\",\"keccak256\":\"0x2baa7bda993739f719c8406713f30588c32abf8097f323fcbed98b973601d9dd\",\"license\":\"MIT\"},\"src/contracts/lib/struct/LEnumerableMap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n// Author: OpenZeppelin\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./LEnumerableSet.sol\\\";\\n\\n/**\\n * @dev Library for managing an enumerable variant of Solidity's\\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\n * type.\\n *\\n * Maps have the following properties:\\n *\\n * - Entries are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\\n *\\n *     // Declare a set state variable\\n *     EnumerableMap.UintToAddressMap private myMap;\\n * }\\n * ```\\n *\\n * The following map types are supported:\\n *\\n * - `uint256 -> address` (`UintToAddressMap`)\\n * - `address -> uint256` (`AddressToUintMap`)\\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32`)\\n * - `uint256 -> uint256` (`UintToUintMap`)\\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`)\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\\n * ====\\n */\\nlibrary LEnumerableMap {\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n\\n  // To implement this library for multiple types with as little code\\n  // repetition as possible, we write it in terms of a generic Map type with\\n  // bytes32 keys and values.\\n  // The Map implementation uses private functions, and user-facing\\n  // implementations (such as Uint256ToAddressMap) are just wrappers around\\n  // the underlying Map.\\n  // This means that we can only create new EnumerableMaps for types that fit\\n  // in bytes32.\\n\\n  struct Bytes32ToBytes32Map {\\n    // Storage of keys\\n    LEnumerableSet.Bytes32Set _keys;\\n    mapping(bytes32 => bytes32) _values;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    Bytes32ToBytes32Map storage map,\\n    bytes32 key,\\n    bytes32 value\\n  ) internal returns (bool) {\\n    map._values[key] = value;\\n    return map._keys.add(key);\\n  }\\n\\n  /**\\n   * @dev Removes a key-value pair from a map. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\\n    delete map._values[key];\\n    return map._keys.remove(key);\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\\n    return map._keys.contains(key);\\n  }\\n\\n  /**\\n   * @dev Returns the number of key-value pairs in the map. O(1).\\n   */\\n  function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\\n    return map._keys.length();\\n  }\\n\\n  /**\\n   * @dev Returns the key-value pair stored at position `index` in the map. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of entries inside the\\n   * array, and it may change when more entries are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\\n    bytes32 key = map._keys.at(index);\\n    return (key, map._values[key]);\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   */\\n  function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\\n    bytes32 value = map._values[key];\\n    if (value == bytes32(0)) {\\n      return (contains(map, key), bytes32(0));\\n    } else {\\n      return (true, value);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\\n    bytes32 value = map._values[key];\\n    require(value != 0 || contains(map, key), \\\"EnumerableMap: nonexistent key\\\");\\n    return value;\\n  }\\n\\n  /**\\n   * @dev Same as {_get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {_tryGet}.\\n   */\\n  function get(\\n    Bytes32ToBytes32Map storage map,\\n    bytes32 key,\\n    string memory errorMessage\\n  ) internal view returns (bytes32) {\\n    bytes32 value = map._values[key];\\n    require(value != 0 || contains(map, key), errorMessage);\\n    return value;\\n  }\\n\\n  // UintToUintMap\\n\\n  struct UintToUintMap {\\n    Bytes32ToBytes32Map _inner;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    UintToUintMap storage map,\\n    uint256 key,\\n    uint256 value\\n  ) internal returns (bool) {\\n    return set(map._inner, bytes32(key), bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\\n    return remove(map._inner, bytes32(key));\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\\n    return contains(map._inner, bytes32(key));\\n  }\\n\\n  /**\\n   * @dev Returns the number of elements in the map. O(1).\\n   */\\n  function length(UintToUintMap storage map) internal view returns (uint256) {\\n    return length(map._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the element stored at position `index` in the set. O(1).\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\\n    (bytes32 key, bytes32 value) = at(map._inner, index);\\n    return (uint256(key), uint256(value));\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   */\\n  function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\\n    (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\\n    return (success, uint256(value));\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\\n    return uint256(get(map._inner, bytes32(key)));\\n  }\\n\\n  /**\\n   * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryGet}.\\n   */\\n  function get(\\n    UintToUintMap storage map,\\n    uint256 key,\\n    string memory errorMessage\\n  ) internal view returns (uint256) {\\n    return uint256(get(map._inner, bytes32(key), errorMessage));\\n  }\\n\\n  // UintToAddressMap\\n\\n  struct UintToAddressMap {\\n    Bytes32ToBytes32Map _inner;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    UintToAddressMap storage map,\\n    uint256 key,\\n    address value\\n  ) internal returns (bool) {\\n    return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\\n    return remove(map._inner, bytes32(key));\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\\n    return contains(map._inner, bytes32(key));\\n  }\\n\\n  /**\\n   * @dev Returns the number of elements in the map. O(1).\\n   */\\n  function length(UintToAddressMap storage map) internal view returns (uint256) {\\n    return length(map._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the element stored at position `index` in the set. O(1).\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\\n    (bytes32 key, bytes32 value) = at(map._inner, index);\\n    return (uint256(key), address(uint160(uint256(value))));\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   */\\n  function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\\n    (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\\n    return (success, address(uint160(uint256(value))));\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\\n    return address(uint160(uint256(get(map._inner, bytes32(key)))));\\n  }\\n\\n  /**\\n   * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryGet}.\\n   */\\n  function get(\\n    UintToAddressMap storage map,\\n    uint256 key,\\n    string memory errorMessage\\n  ) internal view returns (address) {\\n    return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\\n  }\\n\\n  // AddressToUintMap\\n\\n  struct AddressToUintMap {\\n    Bytes32ToBytes32Map _inner;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    AddressToUintMap storage map,\\n    address key,\\n    uint256 value\\n  ) internal returns (bool) {\\n    return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(AddressToUintMap storage map, address key) internal returns (bool) {\\n    return remove(map._inner, bytes32(uint256(uint160(key))));\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\\n    return contains(map._inner, bytes32(uint256(uint160(key))));\\n  }\\n\\n  /**\\n   * @dev Returns the number of elements in the map. O(1).\\n   */\\n  function length(AddressToUintMap storage map) internal view returns (uint256) {\\n    return length(map._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the element stored at position `index` in the set. O(1).\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\\n    (bytes32 key, bytes32 value) = at(map._inner, index);\\n    return (address(uint160(uint256(key))), uint256(value));\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   */\\n  function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\\n    (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\\n    return (success, uint256(value));\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\\n    return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\\n  }\\n\\n  /**\\n   * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryGet}.\\n   */\\n  function get(\\n    AddressToUintMap storage map,\\n    address key,\\n    string memory errorMessage\\n  ) internal view returns (uint256) {\\n    return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\\n  }\\n\\n  // Bytes32ToUintMap\\n\\n  struct Bytes32ToUintMap {\\n    Bytes32ToBytes32Map _inner;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    Bytes32ToUintMap storage map,\\n    bytes32 key,\\n    uint256 value\\n  ) internal returns (bool) {\\n    return set(map._inner, key, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\\n    return remove(map._inner, key);\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\\n    return contains(map._inner, key);\\n  }\\n\\n  /**\\n   * @dev Returns the number of elements in the map. O(1).\\n   */\\n  function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\\n    return length(map._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the element stored at position `index` in the set. O(1).\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\\n    (bytes32 key, bytes32 value) = at(map._inner, index);\\n    return (key, uint256(value));\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   */\\n  function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\\n    (bool success, bytes32 value) = tryGet(map._inner, key);\\n    return (success, uint256(value));\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\\n    return uint256(get(map._inner, key));\\n  }\\n\\n  /**\\n   * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryGet}.\\n   */\\n  function get(\\n    Bytes32ToUintMap storage map,\\n    bytes32 key,\\n    string memory errorMessage\\n  ) internal view returns (uint256) {\\n    return uint256(get(map._inner, key, errorMessage));\\n  }\\n}\\n\",\"keccak256\":\"0x67ee2a4df5a52668e95a3b40cde0b700603922a501926e7c378329d1a1c9ece6\",\"license\":\"MIT\"},\"src/contracts/lib/struct/LEnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n// Author: OpenZeppelin\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary LEnumerableSet {\\n  // To implement this library for multiple types with as little code\\n  // repetition as possible, we write it in terms of a generic Set type with\\n  // bytes32 values.\\n  // The Set implementation uses private functions, and user-facing\\n  // implementations (such as AddressSet) are just wrappers around the\\n  // underlying Set.\\n  // This means that we can only create new EnumerableSets for types that fit\\n  // in bytes32.\\n\\n  struct Set {\\n    // Storage of set values\\n    bytes32[] _values;\\n    // Position of the value in the `values` array, plus 1 because index 0\\n    // means a value is not in the set.\\n    mapping(bytes32 => uint256) _indexes;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function _add(Set storage set, bytes32 value) private returns (bool) {\\n    if (!_contains(set, value)) {\\n      set._values.push(value);\\n      // The value is stored at length-1, but we add 1 to all indexes\\n      // and use 0 as a sentinel value\\n      set._indexes[value] = set._values.length;\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function _remove(Set storage set, bytes32 value) private returns (bool) {\\n    // We read and store the value's index to prevent multiple reads from the same storage slot\\n    uint256 valueIndex = set._indexes[value];\\n\\n    if (valueIndex != 0) {\\n      // Equivalent to contains(set, value)\\n      // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n      // the array, and then remove the last element (sometimes called as 'swap and pop').\\n      // This modifies the order of the array, as noted in {at}.\\n\\n      uint256 toDeleteIndex = valueIndex - 1;\\n      uint256 lastIndex = set._values.length - 1;\\n\\n      if (lastIndex != toDeleteIndex) {\\n        bytes32 lastValue = set._values[lastIndex];\\n\\n        // Move the last value to the index where the value to delete is\\n        set._values[toDeleteIndex] = lastValue;\\n        // Update the index for the moved value\\n        set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n      }\\n\\n      // Delete the slot where the moved value was stored\\n      set._values.pop();\\n\\n      // Delete the index for the deleted slot\\n      delete set._indexes[value];\\n\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n    return set._indexes[value] != 0;\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function _length(Set storage set) private view returns (uint256) {\\n    return set._values.length;\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n    return set._values[index];\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function _values(Set storage set) private view returns (bytes32[] memory) {\\n    return set._values;\\n  }\\n\\n  // Bytes32Set\\n\\n  struct Bytes32Set {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _add(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _remove(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n    return _contains(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(Bytes32Set storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n    return _at(set._inner, index);\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n    return _values(set._inner);\\n  }\\n\\n  // AddressSet\\n\\n  struct AddressSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(AddressSet storage set, address value) internal returns (bool) {\\n    return _add(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(AddressSet storage set, address value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(AddressSet storage set, address value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(AddressSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n    return address(uint160(uint256(_at(set._inner, index))));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(AddressSet storage set) internal view returns (address[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    address[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n\\n  // UintSet\\n\\n  struct UintSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _add(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function length(UintSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n    return uint256(_at(set._inner, index));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(UintSet storage set) internal view returns (uint256[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    uint256[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0xfff4307cba47977196bd7c868492b88b9e52168df13be81c86a82e124cc185b9\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseUUPSStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Abstract Base UUPS Storage Contract\\n * @author OpenZeppelin, Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\nabstract contract BaseUUPSStorage {\\n  // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n  bytes32 internal constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n  /**\\n   * @dev Storage slot with the address of the current implementation.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n  /**\\n   * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n   * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n   */\\n  bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n  /**\\n   * @dev Storage slot with the admin of the contract.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  bytes32 internal constant _TYPE_HASH =\\n    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n\\n  address internal immutable __self = address(this);\\n\\n  bytes32 internal _domainName;\\n  bytes32 internal _domainVersion;\\n  bytes32 internal _domainRealm;\\n  address internal _accessControlManager;\\n  bool internal _isSafeMode;\\n  bool internal _isUpgradable;\\n\\n  /**\\n   * @dev This empty reserved space is put in place to allow future versions to add new\\n   * variables without shifting down storage in the inheritance chain.\\n   */\\n  uint256[64] private __reserved;\\n}\\n\",\"keccak256\":\"0x5c5d257369c86949e45fdf076d8b52edc22213104e72f01f61b4b86a62427f0e\",\"license\":\"MIT\"},\"src/contracts/proxy/IBaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title Base Proxy Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IBaseProxy {\\n  event Upgraded(address indexed sender, address indexed proxy, address indexed newImplementation);\\n}\\n\",\"keccak256\":\"0xd897cd9ae1dd6d6f329742c988959acb529b6b034f5f500e0b73757ce9f36d95\",\"license\":\"MIT\"},\"src/contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// LivelyVerse Contracts (last updated v2.0.1)\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./IBaseProxy.sol\\\";\\n\\n/**\\n * @title Base Proxy Interface\\n * @author Sina Tadayon, https://github.com/SinaTadayon\\n * @dev\\n *\\n */\\ninterface IProxy is IBaseProxy {\\n  /**\\n   * @dev Emitted when the admin account has changed.\\n   */\\n  event LocalAdminChanged(address indexed sender, address indexed proxy, address newAdmin);\\n\\n  event SafeModeChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  event UpgradeStatusChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  /**\\n   * @dev Triggered when the contract has been initialized or reinitialized.\\n   */\\n  event Initialized(\\n    address indexed sender,\\n    address indexed proxy,\\n    address indexed subject,\\n    string name,\\n    string version,\\n    bytes32 realm,\\n    uint16 initCount\\n  );\\n\\n  function upgradeTo(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) external returns (bytes memory);\\n\\n  function setSafeMode(bool status) external returns (bool);\\n\\n  function setUpgradeStatus(bool status) external returns (bool);\\n\\n  function setLocalAdmin(address newAdmin) external returns (bool);\\n\\n  function contractName() external view returns (bytes32);\\n\\n  function contractVersion() external view returns (bytes32);\\n\\n  function contractRealm() external view returns (bytes32);\\n\\n  function contractContext() external view returns (bytes32);\\n\\n  function accessControlManager() external view returns (address);\\n\\n  function subjectAddress() external view returns (address);\\n\\n  function isSafeMode() external view returns (bool);\\n\\n  function isUpgradable() external view returns (bool);\\n\\n  function localAdmin() external view returns (address);\\n\\n  function domainSeparator() external view returns (bytes32);\\n\\n  function initVersion() external view returns (uint16);\\n}\\n\",\"keccak256\":\"0x3baa828b50879a30ef76023867aac76d47fcdab57d55c1303b8bed883f998a91\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}