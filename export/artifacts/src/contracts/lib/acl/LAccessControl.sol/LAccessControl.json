{
  "contractName": "LAccessControl",
  "sourceName": "src/contracts/lib/acl/LAccessControl.sol",
  "abi": [
    {
      "inputs": [],
      "name": "LIB_NAME",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIB_VERSION",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_ANONYMOUS_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_GENERAL_GROUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_GENERAL_REALM",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIVELY_SYSTEM_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createRequestContext",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "bytes4[]",
              "name": "funcSelectors",
              "type": "bytes4[]"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            }
          ],
          "internalType": "struct IContextManagement.RequestRegisterContext[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0x1FE6 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64F892CA GT PUSH2 0x103 JUMPI DUP1 PUSH4 0xAF07CFCD GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xD95140EB GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xD95140EB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDECF375C EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xE24B90A9 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xFBE97E19 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAF07CFCD EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xBEC94751 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD8B31999 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x779A6A7A GT PUSH2 0xDD JUMPI DUP1 PUSH4 0x779A6A7A EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x7CD7C4ED EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x9BB20D51 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xA834B8C0 EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64F892CA EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x660C9912 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x6AC58AC1 EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3346DD2D GT PUSH2 0x170 JUMPI DUP1 PUSH4 0x470E4565 GT PUSH2 0x14A JUMPI DUP1 PUSH4 0x470E4565 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x487C6960 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5632FFD8 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x62F3C2D4 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3346DD2D EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x442B0CA1 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x45D71C18 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17D6269 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xFD7CB90 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x10F07501 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x113F2828 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x20DD27AF EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x2466209B EQ PUSH2 0x24B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x23D PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x484 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x23D PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1C6E JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x180A JUMP JUMPDEST PUSH2 0x23D PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1867 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x23D PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1984 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x19DD JUMP JUMPDEST PUSH2 0x23D PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x1B09 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x433 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x433 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x501 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x549 SWAP2 ADD PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x588 JUMPI PUSH2 0x588 PUSH2 0x1DF1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x5AE SWAP2 ADD PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x1DF1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x631 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x67C SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C9 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x76D CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x738 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH2 0x1B21 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B4 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7FF SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84C SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x877 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8BB CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x738 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8FF SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x94A SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x997 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA06 CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x738 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA49 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA94 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB44 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0F SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x1B36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xB57 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB9A SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBE5 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3A SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP3 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP1 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x14 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x34 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xCC4 SWAP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0F SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0xCF2 SWAP2 ADD PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x1DF1 JUMP JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP2 PUSH2 0xD6B SWAP2 ADD PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xDF1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEF PUSH2 0x1DF1 JUMP JUMPDEST EQ JUMPDEST SWAP2 POP POP PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xE63 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x1DF1 JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0xE91 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0xEC3 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP5 MSTORE PUSH1 0x4 DUP11 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0xDF1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEF PUSH2 0x1DF1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF33 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF76 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF9F JUMPI PUSH2 0xF9F PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFC4 JUMPI PUSH2 0xFC4 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x13 DUP1 DUP3 MSTORE PUSH2 0x280 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH2 0x260 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x100A JUMPI PUSH2 0x100A PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0x48E6BE1C PUSH1 0xE0 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1034 JUMPI PUSH2 0x1034 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1052 JUMPI PUSH2 0x1052 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x78EFA4ED PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1087 JUMPI PUSH2 0x1087 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x10A5 JUMPI PUSH2 0x10A5 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x1CCB7C8D PUSH1 0xE3 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x10DA JUMPI PUSH2 0x10DA PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x10F8 JUMPI PUSH2 0x10F8 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x31C0493 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x112D JUMPI PUSH2 0x112D PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x114B JUMPI PUSH2 0x114B PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x5AC4B36F PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1180 JUMPI PUSH2 0x1180 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x119E JUMPI PUSH2 0x119E PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x771BCF45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11D3 JUMPI PUSH2 0x11D3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x11F1 JUMPI PUSH2 0x11F1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x4346A04B PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x1244 JUMPI PUSH2 0x1244 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xD3386401 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1279 JUMPI PUSH2 0x1279 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x1297 JUMPI PUSH2 0x1297 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x70420EE3 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x12CC JUMPI PUSH2 0x12CC PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0x12EA JUMPI PUSH2 0x12EA PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB2DC26E5 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 DUP2 MLOAD DUP2 LT PUSH2 0x133D JUMPI PUSH2 0x133D PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x8F09E0F PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1372 JUMPI PUSH2 0x1372 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xA DUP2 MLOAD DUP2 LT PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDF01DE45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xB DUP2 MLOAD DUP2 LT PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x738F1127 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1418 JUMPI PUSH2 0x1418 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xC DUP2 MLOAD DUP2 LT PUSH2 0x1436 JUMPI PUSH2 0x1436 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDBF304B PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x146B JUMPI PUSH2 0x146B PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xD DUP2 MLOAD DUP2 LT PUSH2 0x1489 JUMPI PUSH2 0x1489 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7E99337 PUSH1 0xE3 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x14BE JUMPI PUSH2 0x14BE PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xE DUP2 MLOAD DUP2 LT PUSH2 0x14DC JUMPI PUSH2 0x14DC PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB6C03F03 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1511 JUMPI PUSH2 0x1511 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xF DUP2 MLOAD DUP2 LT PUSH2 0x152F JUMPI PUSH2 0x152F PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x12EC6FA3 PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1564 JUMPI PUSH2 0x1564 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x10 DUP2 MLOAD DUP2 LT PUSH2 0x1582 JUMPI PUSH2 0x1582 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x22DF6F5B PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x15B7 JUMPI PUSH2 0x15B7 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x11 DUP2 MLOAD DUP2 LT PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xF2C673BD PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x160A JUMPI PUSH2 0x160A PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x12 DUP2 MLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH2 0x1628 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x164D SWAP2 ADD PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x169B JUMPI PUSH2 0x169B PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x16DF JUMPI PUSH2 0x16DF PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0x704B6C02 PUSH1 0xE0 SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1709 JUMPI PUSH2 0x1709 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1727 JUMPI PUSH2 0x1727 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x225BF2F9 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x175E JUMPI PUSH2 0x175E PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x177C JUMPI PUSH2 0x177C PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7147855D PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x17B3 JUMPI PUSH2 0x17B3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x17D1 JUMPI PUSH2 0x17D1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP3 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1825 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x1836 JUMPI POP PUSH1 0x0 PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1885 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0xBE22465D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBE22465D SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1905 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF02 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xF02 SWAP1 PUSH1 0x3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0x151E765 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x5479D940 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1905 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH14 0x131058D8D95CDCD0DBDB9D1C9BDB PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x433 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF02 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1A94 JUMPI PUSH2 0x1A94 PUSH2 0x1DF1 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1ABB SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0xCF2 SWAP2 ADD PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP4 DUP4 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1B85 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1C07 PUSH1 0x20 DUP5 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x1C55 PUSH1 0x40 DUP7 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C63 PUSH1 0x60 DUP7 ADD PUSH2 0x1C10 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D16 JUMPI DUP10 DUP5 SUB PUSH1 0x3F NOT ADD DUP7 MSTORE DUP3 MLOAD DUP1 MLOAD DUP6 MSTORE DUP9 DUP2 ADD MLOAD PUSH1 0x60 DUP11 DUP8 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 DUP12 ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1CF6 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP5 MSTORE SWAP3 DUP13 ADD SWAP3 SWAP2 DUP13 ADD SWAP2 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP POP POP SWAP1 DUP9 ADD MLOAD ISZERO ISZERO SWAP5 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C96 JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1D51 PUSH1 0x40 DUP6 ADD PUSH2 0x1C10 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D8E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DAE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE PUSH1 0x18 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E68 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E87 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E74 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EAA JUMPI PUSH2 0x1EAA PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1EB8 DUP5 SLOAD PUSH2 0x1D7A JUMP JUMPDEST DUP5 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EF3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EDB JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F22 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1F03 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F40 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0x1E DUP2 0x4B 0xD8 0xC1 DUP6 GT 0xA8 CALL MUL 0xDF 0xED CALLDATASIZE 0xB9 0xAB PUSH13 0x6540DDAB0C9F6872F68792FDA7 REVERT OR PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
      "sourceMap": "414:10289:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;414:10289:12;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@LIB_NAME_2747": {
          "entryPoint": 6621,
          "id": 2747,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIB_VERSION_2755": {
          "entryPoint": 1156,
          "id": 2755,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ADMIN_ROLE_2779": {
          "entryPoint": 6655,
          "id": 2779,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_ANONYMOUS_ROLE_2795": {
          "entryPoint": 6441,
          "id": 2795,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_GENERAL_GROUP_2771": {
          "entryPoint": 6232,
          "id": 2771,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_GENERAL_REALM_2763": {
          "entryPoint": 1116,
          "id": 2763,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIVELY_SYSTEM_ADMIN_ROLE_2787": {
          "entryPoint": 3850,
          "id": 2787,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_add_8954": {
          "entryPoint": 6974,
          "id": 8954,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@_contains_9057": {
          "entryPoint": null,
          "id": 9057,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@add_9124": {
          "entryPoint": 6966,
          "id": 9124,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@add_9240": {
          "entryPoint": 6945,
          "id": 9240,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@contains_9160": {
          "entryPoint": 6921,
          "id": 9160,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@createRequestContext_3338": {
          "entryPoint": 3865,
          "id": 3338,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@generateCtx_2383": {
          "entryPoint": null,
          "id": 2383,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@hasAccess_3439": {
          "entryPoint": 3380,
          "id": 3439,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@initializeContext_3023": {
          "entryPoint": 1320,
          "id": 3023,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@isContextEnabled_3768": {
          "entryPoint": 1181,
          "id": 3768,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isContextExists_3670": {
          "entryPoint": null,
          "id": 3670,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isContextFunctionEnabled_3740": {
          "entryPoint": 6700,
          "id": 3740,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@isContextFunctionExists_3703": {
          "entryPoint": 6456,
          "id": 3703,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@isContextSafeMode_3544": {
          "entryPoint": 6316,
          "id": 3544,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isContextUpgradable_3565": {
          "entryPoint": 6532,
          "id": 3565,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isGroupEnabled_3648": {
          "entryPoint": 1251,
          "id": 3648,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isGroupExists_3619": {
          "entryPoint": 1045,
          "id": 3619,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyAdmin_3483": {
          "entryPoint": 6879,
          "id": 3483,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyGeneralGroup_3503": {
          "entryPoint": 956,
          "id": 3503,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelyGeneralRealm_3523": {
          "entryPoint": 6127,
          "id": 3523,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isLivelySystemAdmin_3461": {
          "entryPoint": 3272,
          "id": 3461,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRealmEnabled_3872": {
          "entryPoint": 6247,
          "id": 3872,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRealmExists_3843": {
          "entryPoint": 1086,
          "id": 3843,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRealmUpgradable_3596": {
          "entryPoint": 6154,
          "id": 3596,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRoleEnabled_3820": {
          "entryPoint": 6813,
          "id": 3820,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isRoleExists_3791": {
          "entryPoint": 6670,
          "id": 3791,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_address": {
          "entryPoint": 7112,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_bytes4": {
          "entryPoint": 7184,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 8071,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptr": {
          "entryPoint": 7087,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_address": {
          "entryPoint": 7140,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32": {
          "entryPoint": 7053,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32t_addresst_bytes4": {
          "entryPoint": 7208,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32t_bytes4": {
          "entryPoint": 7461,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_30915b12763c80516ad64fda7b17424d1281553fab5e63a20e8494dd8b84e411__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 7636,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_3956e7d0a095019dc92e8054f8e587695ab09abeb61332f17cc8480322afa18f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 7604,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 7514,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_489cac4c6e4e83c94905ba18bbf6bf1d1f9380743f360b6728ed1a1f41a60bef__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 7687,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_74b03194e5dbebc32540310b32ba65da80bee8d1d1822648cc9f42e2bef989b1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 8016,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_ef504d6711f15f7266dbd8ca4cf4bb6b90c89b43a1cfe3ef5e399e96661e9580__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_struct$_RequestRegisterContext_$1561_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RequestRegisterContext_$1561_memory_ptr_$dyn_memory_ptr__fromStack_library_reversed": {
          "entryPoint": 7278,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "array_dataslot_string_storage": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "clean_up_bytearray_end_slots_string_storage": {
          "entryPoint": 7745,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
          "entryPoint": 7824,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "extract_byte_array_length": {
          "entryPoint": 7546,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "extract_used_part_and_set_length_of_short_byte_array": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x21": {
          "entryPoint": 7665,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x32": {
          "entryPoint": 8049,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 7723,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:9401:45",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:45",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "128:161:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "174:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "183:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "186:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "176:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "176:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "176:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "149:7:45"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "158:9:45"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "145:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "145:23:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "170:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "141:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "141:32:45"
                      },
                      "nodeType": "YulIf",
                      "src": "138:52:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "199:33:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "222:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "209:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:23:45"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "199:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "241:42:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "268:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "279:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "264:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "264:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "251:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "251:32:45"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "241:6:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "86:9:45",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "97:7:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "109:6:45",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "117:6:45",
                    "type": ""
                  }
                ],
                "src": "14:275:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "397:92:45",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "407:26:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "419:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "430:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "415:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "415:18:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "407:4:45"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "449:9:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "474:6:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "467:6:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "467:14:45"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "460:6:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "460:22:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "442:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "442:41:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "442:41:45"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "366:9:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "377:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "388:4:45",
                    "type": ""
                  }
                ],
                "src": "294:195:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "603:76:45",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "613:26:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "625:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "636:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "621:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "621:18:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "613:4:45"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "655:9:45"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "666:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "648:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:25:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "648:25:45"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "572:9:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "583:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "594:4:45",
                    "type": ""
                  }
                ],
                "src": "494:185:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "781:110:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "827:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "836:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "839:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "829:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "829:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "829:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "802:7:45"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "811:9:45"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "798:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "798:23:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "823:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "794:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "794:32:45"
                      },
                      "nodeType": "YulIf",
                      "src": "791:52:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "852:33:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "875:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "862:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "862:23:45"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "852:6:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "747:9:45",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "758:7:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "770:6:45",
                    "type": ""
                  }
                ],
                "src": "684:207:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "945:124:45",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "955:29:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "977:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "964:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:20:45"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "955:5:45"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1047:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1056:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1059:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1049:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1049:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1049:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1006:5:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1017:5:45"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1032:3:45",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1037:1:45",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "1028:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1028:11:45"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1041:1:45",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1024:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1024:19:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1013:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1013:31:45"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1003:2:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1003:42:45"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "996:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "996:50:45"
                      },
                      "nodeType": "YulIf",
                      "src": "993:70:45"
                    }
                  ]
                },
                "name": "abi_decode_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "924:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "935:5:45",
                    "type": ""
                  }
                ],
                "src": "896:173:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1188:167:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1234:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1243:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1246:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1236:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1236:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1236:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1209:7:45"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1218:9:45"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1205:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1205:23:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1230:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1201:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1201:32:45"
                      },
                      "nodeType": "YulIf",
                      "src": "1198:52:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1259:33:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1282:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1269:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:23:45"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1259:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1301:48:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1334:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1345:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1330:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1330:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1311:18:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1311:38:45"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1301:6:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1146:9:45",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1157:7:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1169:6:45",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1177:6:45",
                    "type": ""
                  }
                ],
                "src": "1074:281:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1408:125:45",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1418:29:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1440:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1427:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1427:20:45"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "1418:5:45"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1511:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1520:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1523:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1513:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1513:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1513:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1469:5:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1480:5:45"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1491:3:45",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1496:10:45",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1487:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1487:20:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1476:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1476:32:45"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1466:2:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1466:43:45"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1459:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1459:51:45"
                      },
                      "nodeType": "YulIf",
                      "src": "1456:71:45"
                    }
                  ]
                },
                "name": "abi_decode_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "1387:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "1398:5:45",
                    "type": ""
                  }
                ],
                "src": "1360:173:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1685:275:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1732:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1741:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1744:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1734:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1734:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1734:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1706:7:45"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1715:9:45"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1702:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1702:23:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1727:3:45",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1698:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:33:45"
                      },
                      "nodeType": "YulIf",
                      "src": "1695:53:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1757:33:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1780:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1767:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1767:23:45"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1757:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1799:42:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1826:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1837:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1822:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1822:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1809:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1809:32:45"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1799:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1850:48:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1883:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1894:2:45",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1879:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1879:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1860:18:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1860:38:45"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1850:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1907:47:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1939:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1950:2:45",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1935:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1935:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "1917:17:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:37:45"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1907:6:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32t_addresst_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1627:9:45",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1638:7:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1650:6:45",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1658:6:45",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1666:6:45",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1674:6:45",
                    "type": ""
                  }
                ],
                "src": "1538:422:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2204:1430:45",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2214:12:45",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2224:2:45",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2218:2:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2235:32:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2253:9:45"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2264:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2249:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2249:18:45"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "2239:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2283:9:45"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2294:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2276:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2276:21:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2276:21:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2306:17:45",
                      "value": {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2317:6:45"
                      },
                      "variables": [
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "2310:3:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2332:27:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2352:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2346:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2346:13:45"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "2336:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "2375:6:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2383:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2368:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2368:22:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2368:22:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2399:12:45",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2409:2:45",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "2403:2:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2420:25:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2431:9:45"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2442:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2427:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2427:18:45"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "2420:3:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2454:53:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2476:9:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2491:1:45",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2494:6:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2487:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2487:14:45"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2472:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2472:30:45"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2504:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2468:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2468:39:45"
                      },
                      "variables": [
                        {
                          "name": "tail_2",
                          "nodeType": "YulTypedName",
                          "src": "2458:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2516:29:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2534:6:45"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2542:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2530:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:15:45"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "2520:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2554:10:45",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2563:1:45",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "2558:1:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2573:12:45",
                      "value": {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2584:1:45"
                      },
                      "variables": [
                        {
                          "name": "i_1",
                          "nodeType": "YulTypedName",
                          "src": "2577:3:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2649:956:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2670:3:45"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "tail_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2683:6:45"
                                        },
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "2691:9:45"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "2679:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2679:22:45"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2707:2:45",
                                          "type": "",
                                          "value": "63"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "2703:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2703:7:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2675:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2675:36:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2663:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2663:49:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2663:49:45"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2725:23:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2741:6:45"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2735:5:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2735:13:45"
                            },
                            "variables": [
                              {
                                "name": "_3",
                                "nodeType": "YulTypedName",
                                "src": "2729:2:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2761:14:45",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2771:4:45",
                              "type": "",
                              "value": "0x60"
                            },
                            "variables": [
                              {
                                "name": "_4",
                                "nodeType": "YulTypedName",
                                "src": "2765:2:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2788:29:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2806:6:45"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2814:2:45"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2802:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2802:15:45"
                            },
                            "variables": [
                              {
                                "name": "tail_3",
                                "nodeType": "YulTypedName",
                                "src": "2792:6:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2837:6:45"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2851:2:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2845:5:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2845:9:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2830:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2830:25:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2830:25:45"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2868:38:45",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2898:2:45"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2902:2:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2894:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2894:11:45"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2888:5:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2888:18:45"
                            },
                            "variables": [
                              {
                                "name": "memberValue0",
                                "nodeType": "YulTypedName",
                                "src": "2872:12:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2930:6:45"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2938:2:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2926:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2926:15:45"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2943:2:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2919:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2919:27:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2919:27:45"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2959:19:45",
                            "value": {
                              "name": "tail_3",
                              "nodeType": "YulIdentifier",
                              "src": "2972:6:45"
                            },
                            "variables": [
                              {
                                "name": "pos_1",
                                "nodeType": "YulTypedName",
                                "src": "2963:5:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2991:35:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3013:12:45"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3007:5:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3007:19:45"
                            },
                            "variables": [
                              {
                                "name": "length_1",
                                "nodeType": "YulTypedName",
                                "src": "2995:8:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "tail_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3046:6:45"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3054:8:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3039:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3039:24:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3039:24:45"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3076:25:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3089:6:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3097:3:45",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3085:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3085:16:45"
                            },
                            "variableNames": [
                              {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "3076:5:45"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3114:37:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3134:12:45"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3148:2:45"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3130:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3130:21:45"
                            },
                            "variables": [
                              {
                                "name": "srcPtr_1",
                                "nodeType": "YulTypedName",
                                "src": "3118:8:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3164:12:45",
                            "value": {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3175:1:45"
                            },
                            "variables": [
                              {
                                "name": "i_2",
                                "nodeType": "YulTypedName",
                                "src": "3168:3:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3250:175:45",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3275:5:45"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "srcPtr_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "3292:8:45"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "3286:5:45"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3286:15:45"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3307:3:45",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3312:10:45",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3303:3:45"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3303:20:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3282:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3282:42:45"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "3268:6:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3268:57:45"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3268:57:45"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3342:23:45",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3355:5:45"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3362:2:45"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3351:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3351:14:45"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "pos_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3342:5:45"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3382:29:45",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3398:8:45"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3408:2:45"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3394:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3394:17:45"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcPtr_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3382:8:45"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3200:3:45"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3205:8:45"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3197:2:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3197:17:45"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "3215:22:45",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3217:18:45",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3228:3:45"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3233:1:45",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3224:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3224:11:45"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3217:3:45"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "3193:3:45",
                              "statements": []
                            },
                            "src": "3189:236:45"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3449:6:45"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3457:2:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3445:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3445:15:45"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "_3",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3486:2:45"
                                                },
                                                {
                                                  "name": "_2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3490:2:45"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3482:3:45"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3482:11:45"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3476:5:45"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3476:18:45"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "3469:6:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3469:26:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "3462:6:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3462:34:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3438:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3438:59:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3438:59:45"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3510:15:45",
                            "value": {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "3520:5:45"
                            },
                            "variableNames": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "3510:6:45"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3538:25:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3552:6:45"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3560:2:45"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3548:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3548:15:45"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3538:6:45"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3576:19:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3587:3:45"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3592:2:45"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3583:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3583:12:45"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3576:3:45"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i_1",
                            "nodeType": "YulIdentifier",
                            "src": "2605:3:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2610:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2602:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2602:15:45"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "2618:22:45",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2620:18:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2631:3:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2636:1:45",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2627:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2627:11:45"
                            },
                            "variableNames": [
                              {
                                "name": "i_1",
                                "nodeType": "YulIdentifier",
                                "src": "2620:3:45"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "2598:3:45",
                        "statements": []
                      },
                      "src": "2594:1011:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3614:14:45",
                      "value": {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "3622:6:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3614:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_struct$_RequestRegisterContext_$1561_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RequestRegisterContext_$1561_memory_ptr_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2173:9:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2184:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2195:4:45",
                    "type": ""
                  }
                ],
                "src": "1965:1669:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3769:217:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3815:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3824:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3827:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3817:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3817:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3817:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3790:7:45"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3799:9:45"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3786:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3786:23:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3811:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3782:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3782:32:45"
                      },
                      "nodeType": "YulIf",
                      "src": "3779:52:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3840:33:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3863:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3850:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3850:23:45"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3840:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3882:42:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3909:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3920:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3905:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3905:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3892:12:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3892:32:45"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3882:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3933:47:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3965:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3976:2:45",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3961:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3961:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "3943:17:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3943:37:45"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3933:6:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32t_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3719:9:45",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3730:7:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3742:6:45",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3750:6:45",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "3758:6:45",
                    "type": ""
                  }
                ],
                "src": "3639:347:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4183:79:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4200:3:45"
                          },
                          {
                            "hexValue": "4c4956454c595f47454e4552414c5f47524f5550",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4205:22:45",
                            "type": "",
                            "value": "LIVELY_GENERAL_GROUP"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4193:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4193:35:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4193:35:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4237:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4248:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4253:2:45",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4244:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4244:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4237:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4167:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4175:3:45",
                    "type": ""
                  }
                ],
                "src": "3991:271:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4322:325:45",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4332:22:45",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4346:1:45",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "4349:4:45"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "4342:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4342:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "4332:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4363:38:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "4393:4:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4399:1:45",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4389:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4389:12:45"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "4367:18:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4440:31:45",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4442:27:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4456:6:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4464:4:45",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4452:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4452:17:45"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4442:6:45"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "4420:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4413:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4413:26:45"
                      },
                      "nodeType": "YulIf",
                      "src": "4410:61:45"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4530:111:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4551:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4558:3:45",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4563:10:45",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "4554:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4554:20:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4544:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4544:31:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4544:31:45"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4595:1:45",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4598:4:45",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4588:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4588:15:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4588:15:45"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4623:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4626:4:45",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4616:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4616:15:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4616:15:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "4486:18:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4509:6:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4517:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4506:2:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4506:14:45"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4483:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4483:38:45"
                      },
                      "nodeType": "YulIf",
                      "src": "4480:161:45"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "4302:4:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "4311:6:45",
                    "type": ""
                  }
                ],
                "src": "4267:380:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4844:79:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4861:3:45"
                          },
                          {
                            "hexValue": "4c4956454c595f47454e4552414c5f5245414c4d",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4866:22:45",
                            "type": "",
                            "value": "LIVELY_GENERAL_REALM"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4854:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4854:35:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4854:35:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4898:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4909:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4914:2:45",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4905:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4905:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4898:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_3956e7d0a095019dc92e8054f8e587695ab09abeb61332f17cc8480322afa18f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4828:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4836:3:45",
                    "type": ""
                  }
                ],
                "src": "4652:271:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5120:63:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5137:3:45"
                          },
                          {
                            "hexValue": "312e302e30",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5142:7:45",
                            "type": "",
                            "value": "1.0.0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5130:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5130:20:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5130:20:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5159:18:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5170:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5175:1:45",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5166:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5166:11:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5159:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5104:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5112:3:45",
                    "type": ""
                  }
                ],
                "src": "4928:255:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5380:76:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5397:3:45"
                          },
                          {
                            "hexValue": "4c4956454c595f41444d494e5f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5402:19:45",
                            "type": "",
                            "value": "LIVELY_ADMIN_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5390:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5390:32:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5390:32:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5431:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5442:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5447:2:45",
                            "type": "",
                            "value": "17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5438:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5438:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5431:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_30915b12763c80516ad64fda7b17424d1281553fab5e63a20e8494dd8b84e411__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5364:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5372:3:45",
                    "type": ""
                  }
                ],
                "src": "5188:268:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5493:95:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5510:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5517:3:45",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5522:10:45",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5513:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5513:20:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5503:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:31:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5503:31:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5550:1:45",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5553:4:45",
                            "type": "",
                            "value": "0x21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5543:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5543:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5543:15:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5574:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5577:4:45",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5567:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5567:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5567:15:45"
                    }
                  ]
                },
                "name": "panic_error_0x21",
                "nodeType": "YulFunctionDefinition",
                "src": "5461:127:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5785:83:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5802:3:45"
                          },
                          {
                            "hexValue": "4c4956454c595f53595354454d5f41444d494e5f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5807:26:45",
                            "type": "",
                            "value": "LIVELY_SYSTEM_ADMIN_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5795:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5795:39:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5795:39:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5843:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5854:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5859:2:45",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5850:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5850:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5843:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_489cac4c6e4e83c94905ba18bbf6bf1d1f9380743f360b6728ed1a1f41a60bef__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5769:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5777:3:45",
                    "type": ""
                  }
                ],
                "src": "5593:275:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5905:95:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5922:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5929:3:45",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5934:10:45",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5925:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5925:20:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5915:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5915:31:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5915:31:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5962:1:45",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5965:4:45",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5955:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5955:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5955:15:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5986:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5989:4:45",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5979:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5979:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5979:15:45"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "5873:127:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6061:65:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6078:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "6081:3:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6071:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6071:14:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6071:14:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6094:26:45",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6112:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6115:4:45",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "keccak256",
                          "nodeType": "YulIdentifier",
                          "src": "6102:9:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6102:18:45"
                      },
                      "variableNames": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "6094:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "array_dataslot_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "ptr",
                    "nodeType": "YulTypedName",
                    "src": "6044:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "6052:4:45",
                    "type": ""
                  }
                ],
                "src": "6005:121:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6212:464:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6245:425:45",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6259:11:45",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6269:1:45",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "6263:2:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6290:2:45"
                                },
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "6294:5:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6283:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6283:17:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6283:17:45"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6313:31:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6335:2:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6339:4:45",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "keccak256",
                                "nodeType": "YulIdentifier",
                                "src": "6325:9:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6325:19:45"
                            },
                            "variables": [
                              {
                                "name": "data",
                                "nodeType": "YulTypedName",
                                "src": "6317:4:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6357:57:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "6380:4:45"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6390:1:45",
                                      "type": "",
                                      "value": "5"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "6397:10:45"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6409:2:45",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6393:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6393:19:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6386:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6386:27:45"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6376:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6376:38:45"
                            },
                            "variables": [
                              {
                                "name": "deleteStart",
                                "nodeType": "YulTypedName",
                                "src": "6361:11:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6451:23:45",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6453:19:45",
                                  "value": {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "6468:4:45"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6453:11:45"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "startIndex",
                                  "nodeType": "YulIdentifier",
                                  "src": "6433:10:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6445:4:45",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "6430:2:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6430:20:45"
                            },
                            "nodeType": "YulIf",
                            "src": "6427:47:45"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6487:41:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "6501:4:45"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6511:1:45",
                                      "type": "",
                                      "value": "5"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "len",
                                          "nodeType": "YulIdentifier",
                                          "src": "6518:3:45"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6523:2:45",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6514:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6514:12:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6507:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6507:20:45"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6497:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6497:31:45"
                            },
                            "variables": [
                              {
                                "name": "_2",
                                "nodeType": "YulTypedName",
                                "src": "6491:2:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6541:24:45",
                            "value": {
                              "name": "deleteStart",
                              "nodeType": "YulIdentifier",
                              "src": "6554:11:45"
                            },
                            "variables": [
                              {
                                "name": "start",
                                "nodeType": "YulTypedName",
                                "src": "6545:5:45",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6639:21:45",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "6648:5:45"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6655:2:45"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "6641:6:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6641:17:45"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6641:17:45"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "6589:5:45"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "6596:2:45"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "6586:2:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6586:13:45"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "6600:26:45",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6602:22:45",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "6615:5:45"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6622:1:45",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6611:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6611:13:45"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "6602:5:45"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "6582:3:45",
                              "statements": []
                            },
                            "src": "6578:82:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "6228:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6233:2:45",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6225:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6225:11:45"
                      },
                      "nodeType": "YulIf",
                      "src": "6222:448:45"
                    }
                  ]
                },
                "name": "clean_up_bytearray_end_slots_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "6184:5:45",
                    "type": ""
                  },
                  {
                    "name": "len",
                    "nodeType": "YulTypedName",
                    "src": "6191:3:45",
                    "type": ""
                  },
                  {
                    "name": "startIndex",
                    "nodeType": "YulTypedName",
                    "src": "6196:10:45",
                    "type": ""
                  }
                ],
                "src": "6131:545:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6766:81:45",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6776:65:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "6791:4:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6809:1:45",
                                            "type": "",
                                            "value": "3"
                                          },
                                          {
                                            "name": "len",
                                            "nodeType": "YulIdentifier",
                                            "src": "6812:3:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "6805:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6805:11:45"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6822:1:45",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "6818:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6818:6:45"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shr",
                                      "nodeType": "YulIdentifier",
                                      "src": "6801:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6801:24:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6797:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6797:29:45"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6787:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6787:40:45"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6833:1:45",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "len",
                                "nodeType": "YulIdentifier",
                                "src": "6836:3:45"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6829:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6829:11:45"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "6784:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6784:57:45"
                      },
                      "variableNames": [
                        {
                          "name": "used",
                          "nodeType": "YulIdentifier",
                          "src": "6776:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "extract_used_part_and_set_length_of_short_byte_array",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "6743:4:45",
                    "type": ""
                  },
                  {
                    "name": "len",
                    "nodeType": "YulTypedName",
                    "src": "6749:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "used",
                    "nodeType": "YulTypedName",
                    "src": "6757:4:45",
                    "type": ""
                  }
                ],
                "src": "6681:166:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6948:1256:45",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6958:24:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "6978:3:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6972:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6972:10:45"
                      },
                      "variables": [
                        {
                          "name": "newLen",
                          "nodeType": "YulTypedName",
                          "src": "6962:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7025:22:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "7027:16:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7027:18:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7027:18:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "newLen",
                            "nodeType": "YulIdentifier",
                            "src": "6997:6:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7005:18:45",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6994:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6994:30:45"
                      },
                      "nodeType": "YulIf",
                      "src": "6991:56:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "slot",
                            "nodeType": "YulIdentifier",
                            "src": "7100:4:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "7138:4:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7132:5:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7132:11:45"
                              }
                            ],
                            "functionName": {
                              "name": "extract_byte_array_length",
                              "nodeType": "YulIdentifier",
                              "src": "7106:25:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7106:38:45"
                          },
                          {
                            "name": "newLen",
                            "nodeType": "YulIdentifier",
                            "src": "7146:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "clean_up_bytearray_end_slots_string_storage",
                          "nodeType": "YulIdentifier",
                          "src": "7056:43:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7056:97:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7056:97:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7162:18:45",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7179:1:45",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "srcOffset",
                          "nodeType": "YulTypedName",
                          "src": "7166:9:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7189:23:45",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7208:4:45",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "srcOffset_1",
                          "nodeType": "YulTypedName",
                          "src": "7193:11:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7221:24:45",
                      "value": {
                        "name": "srcOffset_1",
                        "nodeType": "YulIdentifier",
                        "src": "7234:11:45"
                      },
                      "variableNames": [
                        {
                          "name": "srcOffset",
                          "nodeType": "YulIdentifier",
                          "src": "7221:9:45"
                        }
                      ]
                    },
                    {
                      "cases": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7291:656:45",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "7305:35:45",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "7324:6:45"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7336:2:45",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "7332:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7332:7:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "7320:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7320:20:45"
                                },
                                "variables": [
                                  {
                                    "name": "loopEnd",
                                    "nodeType": "YulTypedName",
                                    "src": "7309:7:45",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "7353:49:45",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "7397:4:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_string_storage",
                                    "nodeType": "YulIdentifier",
                                    "src": "7367:29:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7367:35:45"
                                },
                                "variables": [
                                  {
                                    "name": "dstPtr",
                                    "nodeType": "YulTypedName",
                                    "src": "7357:6:45",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "7415:10:45",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7424:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulTypedName",
                                    "src": "7419:1:45",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "7502:172:45",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "7527:6:45"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7545:3:45"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7550:9:45"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7541:3:45"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7541:19:45"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "7535:5:45"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7535:26:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "7520:6:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7520:42:45"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "7520:42:45"
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "7579:24:45",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "7593:6:45"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7601:1:45",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7589:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7589:14:45"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "dstPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7579:6:45"
                                        }
                                      ]
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "7620:40:45",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7637:9:45"
                                          },
                                          {
                                            "name": "srcOffset_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "7648:11:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7633:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7633:27:45"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "srcOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "7620:9:45"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7449:1:45"
                                    },
                                    {
                                      "name": "loopEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "7452:7:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "7446:2:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7446:14:45"
                                },
                                "nodeType": "YulForLoop",
                                "post": {
                                  "nodeType": "YulBlock",
                                  "src": "7461:28:45",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "7463:24:45",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "7472:1:45"
                                          },
                                          {
                                            "name": "srcOffset_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "7475:11:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7468:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7468:19:45"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7463:1:45"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "pre": {
                                  "nodeType": "YulBlock",
                                  "src": "7442:3:45",
                                  "statements": []
                                },
                                "src": "7438:236:45"
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "7722:166:45",
                                  "statements": [
                                    {
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "7740:43:45",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "7767:3:45"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "7772:9:45"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "7763:3:45"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7763:19:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "7757:5:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7757:26:45"
                                      },
                                      "variables": [
                                        {
                                          "name": "lastValue",
                                          "nodeType": "YulTypedName",
                                          "src": "7744:9:45",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "7807:6:45"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "lastValue",
                                                "nodeType": "YulIdentifier",
                                                "src": "7819:9:45"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "kind": "number",
                                                                "nodeType": "YulLiteral",
                                                                "src": "7846:1:45",
                                                                "type": "",
                                                                "value": "3"
                                                              },
                                                              {
                                                                "name": "newLen",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7849:6:45"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shl",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "7842:3:45"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7842:14:45"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "7858:3:45",
                                                            "type": "",
                                                            "value": "248"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "and",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7838:3:45"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7838:24:45"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "7868:1:45",
                                                            "type": "",
                                                            "value": "0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7864:3:45"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7864:6:45"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "shr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7834:3:45"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "7834:37:45"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7830:3:45"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7830:42:45"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "7815:3:45"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7815:58:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "7800:6:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7800:74:45"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "7800:74:45"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "loopEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "7693:7:45"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "7702:6:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "7690:2:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7690:19:45"
                                },
                                "nodeType": "YulIf",
                                "src": "7687:201:45"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "7908:4:45"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7922:1:45",
                                              "type": "",
                                              "value": "1"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "7925:6:45"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "7918:3:45"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7918:14:45"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7934:1:45",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7914:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7914:22:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "7901:6:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7901:36:45"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7901:36:45"
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "7284:663:45",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7289:1:45",
                            "type": "",
                            "value": "1"
                          }
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7964:234:45",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "7978:14:45",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7991:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulTypedName",
                                    "src": "7982:5:45",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "8027:67:45",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "8045:35:45",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "8064:3:45"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "8069:9:45"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "8060:3:45"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8060:19:45"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "8054:5:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8054:26:45"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "8045:5:45"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "8008:6:45"
                                },
                                "nodeType": "YulIf",
                                "src": "8005:89:45"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "8114:4:45"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "8173:5:45"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "8180:6:45"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                                        "nodeType": "YulIdentifier",
                                        "src": "8120:52:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8120:67:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "8107:6:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8107:81:45"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8107:81:45"
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "7956:242:45",
                          "value": "default"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "name": "newLen",
                            "nodeType": "YulIdentifier",
                            "src": "7264:6:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7272:2:45",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7261:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7261:14:45"
                      },
                      "nodeType": "YulSwitch",
                      "src": "7254:944:45"
                    }
                  ]
                },
                "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "slot",
                    "nodeType": "YulTypedName",
                    "src": "6933:4:45",
                    "type": ""
                  },
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "6939:3:45",
                    "type": ""
                  }
                ],
                "src": "6852:1352:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8401:80:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8418:3:45"
                          },
                          {
                            "hexValue": "4c4956454c595f414e4f4e594d4f55535f524f4c45",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8423:23:45",
                            "type": "",
                            "value": "LIVELY_ANONYMOUS_ROLE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8411:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8411:36:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8411:36:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8456:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8467:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8472:2:45",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8463:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8463:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "8456:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_74b03194e5dbebc32540310b32ba65da80bee8d1d1822648cc9f42e2bef989b1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "8385:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "8393:3:45",
                    "type": ""
                  }
                ],
                "src": "8209:272:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8518:95:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8535:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8542:3:45",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8547:10:45",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8538:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8538:20:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8528:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8528:31:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8528:31:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8575:1:45",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8578:4:45",
                            "type": "",
                            "value": "0x32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8568:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8568:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8568:15:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8599:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8602:4:45",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "8592:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8592:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8592:15:45"
                    }
                  ]
                },
                "name": "panic_error_0x32",
                "nodeType": "YulFunctionDefinition",
                "src": "8486:127:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8696:199:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8742:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8751:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8754:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8744:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8744:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8744:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8717:7:45"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8726:9:45"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8713:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8713:23:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8738:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8709:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8709:32:45"
                      },
                      "nodeType": "YulIf",
                      "src": "8706:52:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8767:29:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8786:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8780:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8780:16:45"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8771:5:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8849:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8858:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8861:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8851:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8851:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8851:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8818:5:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8839:5:45"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "8832:6:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8832:13:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8825:6:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8825:21:45"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "8815:2:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8815:32:45"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8808:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8808:40:45"
                      },
                      "nodeType": "YulIf",
                      "src": "8805:60:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8874:15:45",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8884:5:45"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8874:6:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8662:9:45",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8673:7:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8685:6:45",
                    "type": ""
                  }
                ],
                "src": "8618:277:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9092:73:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9109:3:45"
                          },
                          {
                            "hexValue": "4c416363657373436f6e74726f6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9114:16:45",
                            "type": "",
                            "value": "LAccessControl"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9102:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9102:29:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9102:29:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9140:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9151:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9156:2:45",
                            "type": "",
                            "value": "14"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9147:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9147:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "9140:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_ef504d6711f15f7266dbd8ca4cf4bb6b90c89b43a1cfe3ef5e399e96661e9580__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "9076:3:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "9084:3:45",
                    "type": ""
                  }
                ],
                "src": "8900:265:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9289:110:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9306:3:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9319:2:45",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9323:6:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9315:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9315:15:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9336:26:45",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9332:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9332:31:45"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9311:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9311:53:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9299:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9299:66:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9299:66:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9374:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9385:3:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9390:2:45",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9381:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9381:12:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "9374:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "9265:3:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9270:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "9281:3:45",
                    "type": ""
                  }
                ],
                "src": "9170:229:45"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32t_addresst_bytes4(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_bytes4(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_RequestRegisterContext_$1561_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RequestRegisterContext_$1561_memory_ptr_$dyn_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x60\n            let tail_3 := add(tail_2, _4)\n            mstore(tail_2, mload(_3))\n            let memberValue0 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), _4)\n            let pos_1 := tail_3\n            let length_1 := mload(memberValue0)\n            mstore(tail_3, length_1)\n            pos_1 := add(tail_2, 128)\n            let srcPtr_1 := add(memberValue0, _1)\n            let i_2 := i\n            for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n            {\n                mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                pos_1 := add(pos_1, _1)\n                srcPtr_1 := add(srcPtr_1, _1)\n            }\n            mstore(add(tail_2, _2), iszero(iszero(mload(add(_3, _2)))))\n            tail_2 := pos_1\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_struct$_DataMaps_$1329_storage_ptrt_bytes32t_bytes4(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_bytes4(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_GENERAL_GROUP\")\n        end := add(pos, 20)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_3956e7d0a095019dc92e8054f8e587695ab09abeb61332f17cc8480322afa18f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_GENERAL_REALM\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"1.0.0\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_30915b12763c80516ad64fda7b17424d1281553fab5e63a20e8494dd8b84e411__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ADMIN_ROLE\")\n        end := add(pos, 17)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_489cac4c6e4e83c94905ba18bbf6bf1d1f9380743f360b6728ed1a1f41a60bef__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_SYSTEM_ADMIN_ROLE\")\n        end := add(pos, 24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_74b03194e5dbebc32540310b32ba65da80bee8d1d1822648cc9f42e2bef989b1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_ANONYMOUS_ROLE\")\n        end := add(pos, 21)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_ef504d6711f15f7266dbd8ca4cf4bb6b90c89b43a1cfe3ef5e399e96661e9580__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LAccessControl\")\n        end := add(pos, 14)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n}",
          "id": 45,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64F892CA GT PUSH2 0x103 JUMPI DUP1 PUSH4 0xAF07CFCD GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0xD95140EB GT PUSH2 0x7B JUMPI DUP1 PUSH4 0xD95140EB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDECF375C EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xE24B90A9 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xFBE97E19 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAF07CFCD EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xBEC94751 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD8B31999 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x779A6A7A GT PUSH2 0xDD JUMPI DUP1 PUSH4 0x779A6A7A EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x7CD7C4ED EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x9BB20D51 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xA834B8C0 EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64F892CA EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x660C9912 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x6AC58AC1 EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3346DD2D GT PUSH2 0x170 JUMPI DUP1 PUSH4 0x470E4565 GT PUSH2 0x14A JUMPI DUP1 PUSH4 0x470E4565 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x487C6960 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5632FFD8 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x62F3C2D4 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3346DD2D EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x442B0CA1 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x45D71C18 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17D6269 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xFD7CB90 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x10F07501 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x113F2828 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x20DD27AF EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x2466209B EQ PUSH2 0x24B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x23D PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x484 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x23D PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1C6E JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x180A JUMP JUMPDEST PUSH2 0x23D PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1867 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x23D PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1984 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x19DD JUMP JUMPDEST PUSH2 0x23D PUSH2 0x19FF JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D25 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP3 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x1B09 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x433 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x433 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x501 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x549 SWAP2 ADD PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x588 JUMPI PUSH2 0x588 PUSH2 0x1DF1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 PUSH2 0x5AE SWAP2 ADD PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x1DF1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x631 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x67C SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C9 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x76D CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x738 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH2 0x1B21 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B4 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7FF SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84C SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x877 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8BB CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x738 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8FF SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x94A SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x997 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA06 CALLER DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x738 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA49 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA94 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB44 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0F SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH2 0x1B36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xB57 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB9A SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBE5 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC3A SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP3 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP1 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x14 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x34 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xCC4 SWAP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0F SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0xCF2 SWAP2 ADD PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x1DF1 JUMP JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE PUSH1 0x2 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP2 PUSH2 0xD6B SWAP2 ADD PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xDF1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEF PUSH2 0x1DF1 JUMP JUMPDEST EQ JUMPDEST SWAP2 POP POP PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xE63 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x1DF1 JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0xE91 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0xEC3 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP5 MSTORE PUSH1 0x4 DUP11 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0xDF1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEF PUSH2 0x1DF1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF33 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF76 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF9F JUMPI PUSH2 0xF9F PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFC4 JUMPI PUSH2 0xFC4 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x13 DUP1 DUP3 MSTORE PUSH2 0x280 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH2 0x260 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x100A JUMPI PUSH2 0x100A PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0x48E6BE1C PUSH1 0xE0 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1034 JUMPI PUSH2 0x1034 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1052 JUMPI PUSH2 0x1052 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x78EFA4ED PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1087 JUMPI PUSH2 0x1087 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x10A5 JUMPI PUSH2 0x10A5 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x1CCB7C8D PUSH1 0xE3 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x10DA JUMPI PUSH2 0x10DA PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x10F8 JUMPI PUSH2 0x10F8 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x31C0493 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x112D JUMPI PUSH2 0x112D PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x114B JUMPI PUSH2 0x114B PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x5AC4B36F PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1180 JUMPI PUSH2 0x1180 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x119E JUMPI PUSH2 0x119E PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x771BCF45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x11D3 JUMPI PUSH2 0x11D3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x11F1 JUMPI PUSH2 0x11F1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x4346A04B PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x1244 JUMPI PUSH2 0x1244 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xD3386401 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1279 JUMPI PUSH2 0x1279 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0x1297 JUMPI PUSH2 0x1297 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x70420EE3 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x12CC JUMPI PUSH2 0x12CC PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x8 DUP2 MLOAD DUP2 LT PUSH2 0x12EA JUMPI PUSH2 0x12EA PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB2DC26E5 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 DUP2 MLOAD DUP2 LT PUSH2 0x133D JUMPI PUSH2 0x133D PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x8F09E0F PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1372 JUMPI PUSH2 0x1372 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xA DUP2 MLOAD DUP2 LT PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDF01DE45 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xB DUP2 MLOAD DUP2 LT PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x738F1127 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1418 JUMPI PUSH2 0x1418 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xC DUP2 MLOAD DUP2 LT PUSH2 0x1436 JUMPI PUSH2 0x1436 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xDBF304B PUSH1 0xE4 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x146B JUMPI PUSH2 0x146B PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xD DUP2 MLOAD DUP2 LT PUSH2 0x1489 JUMPI PUSH2 0x1489 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7E99337 PUSH1 0xE3 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x14BE JUMPI PUSH2 0x14BE PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xE DUP2 MLOAD DUP2 LT PUSH2 0x14DC JUMPI PUSH2 0x14DC PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xB6C03F03 PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1511 JUMPI PUSH2 0x1511 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0xF DUP2 MLOAD DUP2 LT PUSH2 0x152F JUMPI PUSH2 0x152F PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x12EC6FA3 PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1564 JUMPI PUSH2 0x1564 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x10 DUP2 MLOAD DUP2 LT PUSH2 0x1582 JUMPI PUSH2 0x1582 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x22DF6F5B PUSH1 0xE2 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x15B7 JUMPI PUSH2 0x15B7 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x11 DUP2 MLOAD DUP2 LT PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0xF2C673BD PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x160A JUMPI PUSH2 0x160A PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x12 DUP2 MLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH2 0x1628 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x164D SWAP2 ADD PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x169B JUMPI PUSH2 0x169B PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP2 ISZERO ISZERO PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 SWAP1 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x16DF JUMPI PUSH2 0x16DF PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP PUSH4 0x704B6C02 PUSH1 0xE0 SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1709 JUMPI PUSH2 0x1709 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1727 JUMPI PUSH2 0x1727 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x225BF2F9 PUSH1 0xE1 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x175E JUMPI PUSH2 0x175E PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x177C JUMPI PUSH2 0x177C PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD PUSH4 0x7147855D PUSH1 0xE0 SHL SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x17B3 JUMPI PUSH2 0x17B3 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x17D1 JUMPI PUSH2 0x17D1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP3 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1825 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x1836 JUMPI POP PUSH1 0x0 PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1885 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0xBE22465D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0xBE22465D SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1905 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF02 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xF02 SWAP1 PUSH1 0x3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD SLOAD DUP3 MLOAD PUSH4 0x151E765 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x5479D940 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1905 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH14 0x131058D8D95CDCD0DBDB9D1C9BDB PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x433 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF02 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1A94 JUMPI PUSH2 0x1A94 PUSH2 0x1DF1 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1ABB SWAP1 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP GT DUP1 ISZERO PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP2 PUSH2 0xCF2 SWAP2 ADD PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP4 DUP4 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1B85 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x40F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1C07 PUSH1 0x20 DUP5 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x1C55 PUSH1 0x40 DUP7 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C63 PUSH1 0x60 DUP7 ADD PUSH2 0x1C10 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D16 JUMPI DUP10 DUP5 SUB PUSH1 0x3F NOT ADD DUP7 MSTORE DUP3 MLOAD DUP1 MLOAD DUP6 MSTORE DUP9 DUP2 ADD MLOAD PUSH1 0x60 DUP11 DUP8 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 DUP12 ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1CF6 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP5 MSTORE SWAP3 DUP13 ADD SWAP3 SWAP2 DUP13 ADD SWAP2 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP POP POP SWAP1 DUP9 ADD MLOAD ISZERO ISZERO SWAP5 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C96 JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1D51 PUSH1 0x40 DUP6 ADD PUSH2 0x1C10 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D8E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DAE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0x4C4956454C595F47454E4552414C5F5245414C4D PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH17 0x4C4956454C595F41444D494E5F524F4C45 PUSH1 0x78 SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH24 0x4C4956454C595F53595354454D5F41444D494E5F524F4C45 PUSH1 0x40 SHL DUP2 MSTORE PUSH1 0x18 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E68 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E87 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E74 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EAA JUMPI PUSH2 0x1EAA PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1EB8 DUP5 SLOAD PUSH2 0x1D7A JUMP JUMPDEST DUP5 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EF3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EDB JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F22 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1F03 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F40 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH21 0x4C4956454C595F414E4F4E594D4F55535F524F4C45 PUSH1 0x58 SHL DUP2 MSTORE PUSH1 0x15 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0x1E DUP2 0x4B 0xD8 0xC1 DUP6 GT 0xA8 CALL MUL 0xDF 0xED CALLDATASIZE 0xB9 0xAB PUSH13 0x6540DDAB0C9F6872F68792FDA7 REVERT OR PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
      "sourceMap": "414:10289:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7508:193;;;;;;:::i;:::-;;:::i;:::-;;;467:14:45;;460:22;442:41;;430:2;415:18;7508:193:12;;;;;;;;8547:172;;;;;;:::i;:::-;;:::i;8934:::-;;;;;;:::i;:::-;9043:4;9062:20;;;:11;;;;:20;;;;;:25;;-1:-1:-1;;;;;9062:25:12;:39;;;8934:172;10318;;;;;;:::i;:::-;;:::i;713:98::-;;;:::i;:::-;;;648:25:45;;;636:2;621:18;713:98:12;494:185:45;634:74:12;;;:::i;9730:207::-;;;;;;:::i;:::-;;:::i;8723:::-;;;;;;:::i;:::-;;:::i;1228:1640::-;;;;;;;;;;-1:-1:-1;1228:1640:12;;;;;:::i;:::-;;:::i;:::-;;7047:240;;;;;;:::i;:::-;;:::i;4888:2155::-;;;;;;:::i;:::-;;:::i;1013:106::-;;;:::i;2872:2012::-;;;:::i;:::-;;;;;;;:::i;7705:212::-;;;;;;:::i;:::-;;:::i;8309:234::-;;;;;;:::i;:::-;;:::i;815:98::-;;;:::i;10494:207::-;;;;;;:::i;:::-;;:::i;7921:181::-;;;;;;:::i;:::-;;:::i;1123:100::-;;;:::i;9110:280::-;;;;;;:::i;:::-;;:::i;8106:199::-;;;;;;:::i;:::-;;:::i;550:80::-;;;:::i;917:92::-;;;:::i;9941:168::-;;;;;;:::i;:::-;;:::i;9394:332::-;;;;;;:::i;:::-;;:::i;10113:201::-;;;;;;:::i;:::-;;:::i;7291:213::-;;;;;;:::i;:::-;;:::i;7508:193::-;7619:4;7638:58;7691:4;7638;:13;;:35;872:40;;;;;;;:::i;:::-;;;;;;;;;;;;;862:51;;;;;;7638:35;;;;;;;;;;;:43;;:52;;:58;;;;:::i;:::-;7631:65;;7508:193;;;;;:::o;8547:172::-;8652:4;8677:20;;;:13;;;:20;;;;;8671:39;;8652:4;;8677:20;8671:39;;;:::i;:::-;;;:43;8664:50;;8547:172;;;;:::o;10318:::-;10423:4;10448:20;;;:13;;;:20;;;;;10442:39;;10423:4;;10448:20;10442:39;;;:::i;713:98::-;770:40;;;;;;;:::i;:::-;;;;;;;;;;;;;760:51;;;;;;713:98;:::o;634:74::-;682:25;;-1:-1:-1;;;682:25:12;;;5130:20:45;5166:11;;682:25:12;4928:255:45;9730:207:12;9840:4;9859:20;;;:11;;;;:20;;;;;:25;;-1:-1:-1;;;;;9859:25:12;:39;;;;:73;;-1:-1:-1;;9902:20:12;;;;:11;;;;:20;;;;;:30;;-1:-1:-1;;;9902:30:12;;;;;9730:207::o;8723:::-;8829:4;8854:20;;;:13;;;:20;;;;;8848:39;;8829:4;;8854:20;8848:39;;;:::i;:::-;;;:43;:77;;;;-1:-1:-1;;8895:20:12;;;;:13;;;;;:20;;;;;:30;;;;;;8723:207::o;1228:1640::-;1330:10;1314:15;:27;;;;;;;;;;;971:37;;1363:35;;1314:27;;971:37;;;;:::i;:::-;;;;-1:-1:-1;;971:37:12;;;;;;;;;961:48;;971:37;961:48;;;;1314:46;;;;;;;;;;-1:-1:-1;1314:46:12;:84;;-1:-1:-1;;1314:84:12;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1420:10:12;1404:15;:27;;;;;;;;;;;1074:44;;1460:35;;1404:27;;1074:44;;;;:::i;:::-;;;;-1:-1:-1;;1074:44:12;;;;;;;;;1064:55;;1074:44;1064:55;;;;1404:53;;;;;;;;;;-1:-1:-1;1404:53:12;:91;;-1:-1:-1;;1404:91:12;;;;;;;;;;;:::i;:::-;;;;;;1502:58;;;;;;;;;;;;;-1:-1:-1;;;1502:58:12;;;:4;:12;;:31;971:37;;;;;;;:::i;:::-;;;;;;;;;;;;;961:48;;;;;;1502:31;;;;;;;;;;;:36;;:58;;;;;;:::i;:::-;;1610:4;1566;:12;;:31;971:37;;;;;;;:::i;:::-;;;;;;;;;;;;;961:48;;;;;;1566:31;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;872:40;;;;;;;:::i;:::-;;;;;;;;;;;;;862:51;;;;;;1620:4;:12;;:31;971:37;;;;;;;:::i;:::-;;;;;;;;;;;;;961:48;;;;;;1620:31;;;;;;;;;;;:37;;:60;;;;1686:58;1733:10;1686:4;:12;;:31;971:37;;;;;;;:::i;:::-;;;;;;;;;;;;;961:48;;;;;;1686:31;;;;;;;;;;;:42;;:46;;:58;;;;:::i;:::-;;1751:72;;;;;;;;;;;;;-1:-1:-1;;;1751:72:12;;;:4;:12;;:38;1074:44;;;;;;;:::i;:::-;;;;;;;;;;;;;1064:55;;;;;;1751:38;;;;;;;;;;;:43;;:72;;;;;;:::i;:::-;;1880:4;1829;:12;;:38;1074:44;;;;;;;:::i;:::-;;;;;;;;;;;;;1064:55;;;;;;1829:38;;;;;;;;;;;:48;;;:55;;;;;;;;;;;;;;;;;;872:40;;;;;;;:::i;:::-;;;;;;;;;;;;;862:51;;;;;;1890:4;:12;;:38;1074:44;;;;;;;:::i;:::-;;;;;;;;;;;;;1064:55;;;;;;1890:38;;;;;;;;;;;:44;;:67;;;;1963:65;2017:10;1963:4;:12;;:38;1074:44;;;;;;;:::i;1963:65::-;;2035:66;;;;;;;;;;;;;-1:-1:-1;;;2035:66:12;;;:4;:12;;:35;1181:41;;;;;;;:::i;:::-;;;;;;;;;;;;;1171:52;;;;;;2035:35;;;;;;;;;;;:40;;:66;;;;;;:::i;:::-;;2155:4;2107;:12;;:35;1181:41;;;;;;;:::i;:::-;;;;;;;;;;;;;1171:52;;;;;;2107:35;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;872:40;;;;;;;:::i;:::-;;;;;;;;;;;;;862:51;;;;;;2165:4;:12;;:35;1181:41;;;;;;;:::i;:::-;;;;;;;;;;;;;1171:52;;;;;;2165:35;;;;;;;;;;;:41;;:64;;;;2235:62;2286:10;2235:4;:12;;:35;1181:41;;;;;;;:::i;2235:62::-;;2304:65;;;;;;;;;;;;;-1:-1:-1;;;2304:65:12;;;:4;:13;;:35;872:40;;;;;;;:::i;:::-;;;;;;;;;;;;;862:51;;;;;;2304:35;;;;;;;;;;;:40;;:65;;;;;;:::i;:::-;;2423:4;2375;:13;;:35;872:40;;;;;;;:::i;:::-;;;;;;;;;;;;;862:51;;;;;;2375:35;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;2433:66;971:37;;;;;;;:::i;:::-;;;;;;;;;;;;;961:48;;;;;;2433:4;:13;;:35;872:40;;;;;;;:::i;:::-;;;;;;;;;;;;;862:51;;;;;;2433:35;;;;;;;;;;;:43;;:47;;:66;;;;:::i;:::-;;2505:73;1074:44;;;;;;;:::i;2505:73::-;;2585:65;;;;;;;;;;;;;-1:-1:-1;;;2585:65:12;;;:4;:13;;:35;770:40;;;;;;;:::i;:::-;;;;;;;;;;;;;760:51;;;;;;2585:35;;;;;;;;;;;:40;;:65;;;;;;:::i;:::-;;2704:4;2656;:13;;:35;770:40;;;;;;;:::i;:::-;;;;;;;;;;;;;760:51;;;;;;2656:35;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;2765:4;2714;:13;;:35;770:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;770:40:12;;;;;;;;;760:51;;770:40;760:51;;;;2714:35;;;;;;;;;;;;-1:-1:-1;2714:35:12;:48;;:55;;;;;;;-1:-1:-1;;2714:55:12;;;;;;;;;;256:33:8;;2856:4:12;9319:2:45;9315:15;-1:-1:-1;;9311:53:45;256:33:8;;;9299:66:45;256:33:8;;;;;;;;;9381:12:45;;;;256:33:8;;;246:44;;;;;2775:88:12;;:4;:13;;:35;770:40;;;;;;;:::i;2775:88::-;;1228:1640;:::o;7047:240::-;-1:-1:-1;;;;;7193:24:12;;7172:4;7193:24;;;;;;;;;;;1074:44;;7247:35;;7172:4;;1074:44;;;;:::i;:::-;;;;-1:-1:-1;;1074:44:12;;;;;;;;;1064:55;;1074:44;1064:55;;;;7193:50;;;;;;;;;;-1:-1:-1;7193:50:12;;;;:89;;;;;;;;:::i;:::-;;;7047:240;-1:-1:-1;;;7047:240:12:o;4888:2155::-;5046:4;5073:20;;;:11;;;:20;;;;;;;;-1:-1:-1;;;;;;5073:41:12;;;;:30;;:41;;;;;:46;1181:41;;5073:46;;1181:41;;;;:::i;:::-;;;;;;;;;;;;;1171:52;;;;;;6479:4;:29;6475:564;;6533:20;;;;:11;;;;:20;;;;;;:30;;-1:-1:-1;;;6533:30:12;;;;:129;;;;-1:-1:-1;6627:35:12;6575:20;;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;;;;6575:41:12;;;;:30;;;;:41;;;;;;:48;;;;;:87;;;;;;;:::i;:::-;;6533:129;6518:144;;;;;6475:564;6698:20;;;;:11;;;;:20;;;;;;:30;;-1:-1:-1;;;6698:30:12;;;;:129;;;;-1:-1:-1;6792:35:12;6740:20;;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;;;;6740:41:12;;;;:30;;;;:41;;;;;;:48;;;;;:87;;;;;;;:::i;:::-;;6698:129;:192;;;;-1:-1:-1;6839:41:12;6853:20;;;:11;;;;:20;;;;;;;;:26;6839:41;;:13;;;:41;;;;;;:51;;;;6698:192;:253;;;;-1:-1:-1;6902:39:12;6916:18;;;:12;;;:18;;;;;;;;:24;;;;;6902:39;;:13;;;:39;;;;;;:49;;;;6698:253;:334;;;;-1:-1:-1;6997:35:12;-1:-1:-1;;;;;6963:24:12;;:15;:24;;;;;;;;;;;:30;;;;;;;;;;;:69;;;;;;;;:::i;4888:2155::-;;;;;;;:::o;1013:106::-;1074:44;;;;;;;:::i;2872:2012::-;3041:50;;;3089:1;3041:50;;;2927;3041;;;;;;2985:53;;3041:50;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;3041:50:12;;;;;;;;;;;;;;;2985:106;;971:37;;;;;;;:::i;:::-;;;;;;;;;;;;;961:48;;;;;;3097:2;3100:1;3097:5;;;;;;;;:::i;:::-;;;;;;;:10;;:30;;;;;3151:4;3133:2;3136:1;3133:5;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;;:15;;;;:22;3183:16;;3196:2;3183:16;;;;;;;;;;3196:2;3183:16;;;;;;;;;-1:-1:-1;3183:16:12;3161:2;3164:1;3161:5;;;;;;;;:::i;:::-;;;;;;;:19;;:38;;;;3230:32;;;3205:2;3208:1;3205:5;;;;;;;;:::i;:::-;;;;;;;:19;;;3225:1;3205:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3205:57:12;;;:22;;;;;;;;;;;:57;3268:5;;-1:-1:-1;;;3293:43:12;3268:2;;3271:1;;3268:5;;;;:::i;:::-;;;;;;;:19;;;3288:1;3268:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3268:68:12;;;:22;;;;;;;;;;;:68;3342:5;;-1:-1:-1;;;3367:41:12;3342:2;;3345:1;;3342:5;;;;:::i;:::-;;;;;;;:19;;;3362:1;3342:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3342:66:12;;;:22;;;;;;;;;;;:66;3414:5;;-1:-1:-1;;;3439:46:12;3414:2;;3417:1;;3414:5;;;;:::i;:::-;;;;;;;:19;;;3434:1;3414:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3414:71:12;;;:22;;;;;;;;;;;:71;3491:5;;-1:-1:-1;;;3516:45:12;3491:2;;3494:1;;3491:5;;;;:::i;:::-;;;;;;;:19;;;3511:1;3491:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3491:70:12;;;:22;;;;;;;;;;;:70;3567:5;;-1:-1:-1;;;3592:44:12;3567:2;;3570:1;;3567:5;;;;:::i;:::-;;;;;;;:19;;;3587:1;3567:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3567:69:12;;;:22;;;;;;;;;;;:69;3642:5;;-1:-1:-1;;;3667:45:12;3642:2;;3645:1;;3642:5;;;;:::i;:::-;;;;;;;:19;;;3662:1;3642:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3642:70:12;;;:22;;;;;;;;;;;:70;3718:5;;-1:-1:-1;;;3743:43:12;3718:2;;3721:1;;3718:5;;;;:::i;:::-;;;;;;;:19;;;3738:1;3718:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3718:68:12;;;:22;;;;;;;;;;;:68;3792:5;;-1:-1:-1;;;3817:44:12;3792:2;;3795:1;;3792:5;;;;:::i;:::-;;;;;;;:19;;;3812:1;3792:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3792:69:12;;;:22;;;;;;;;;;;:69;3867:5;;-1:-1:-1;;;3892:37:12;3867:2;;3870:1;;3867:5;;;;:::i;:::-;;;;;;;:19;;;3887:1;3867:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3867:62:12;;;:22;;;;;;;;;;;:62;3935:5;;-1:-1:-1;;;3961:41:12;3935:2;;3938:1;;3935:5;;;;:::i;:::-;;;;;;;:19;;;3955:2;3935:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3935:67:12;;;:23;;;;;;;;;;;:67;4008:5;;-1:-1:-1;;;4034:42:12;4008:2;;4011:1;;4008:5;;;;:::i;:::-;;;;;;;:19;;;4028:2;4008:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4008:68:12;;;:23;;;;;;;;;;;:68;4082:5;;-1:-1:-1;;;4108:38:12;4082:2;;4085:1;;4082:5;;;;:::i;:::-;;;;;;;:19;;;4102:2;4082:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4082:64:12;;;:23;;;;;;;;;;;:64;4152:5;;-1:-1:-1;;;4178:37:12;4152:2;;4155:1;;4152:5;;;;:::i;:::-;;;;;;;:19;;;4172:2;4152:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4152:63:12;;;:23;;;;;;;;;;;:63;4221:5;;-1:-1:-1;;;4247:39:12;4221:2;;4224:1;;4221:5;;;;:::i;:::-;;;;;;;:19;;;4241:2;4221:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4221:65:12;;;:23;;;;;;;;;;;:65;4292:5;;-1:-1:-1;;;4318:40:12;4292:2;;4295:1;;4292:5;;;;:::i;:::-;;;;;;;:19;;;4312:2;4292:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4292:66:12;;;:23;;;;;;;;;;;:66;4364:5;;-1:-1:-1;;;4390:39:12;4364:2;;4367:1;;4364:5;;;;:::i;:::-;;;;;;;:19;;;4384:2;4364:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4364:65:12;;;:23;;;;;;;;;;;:65;4435:5;;-1:-1:-1;;;4461:40:12;4435:2;;4438:1;;4435:5;;;;:::i;:::-;;;;;;;:19;;;4455:2;4435:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4435:66:12;;;:23;;;;;;;;;;;:66;4507:5;;-1:-1:-1;;;4533:47:12;4507:2;;4510:1;;4507:5;;;;:::i;:::-;;;;;;;:19;;;4527:2;4507:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4507:73:12;;;:23;;;;;;;;;;:73;1074:44;;;;;;:::i;:::-;;;;;;;;;;;;;1064:55;;;;;;4587:2;4590:1;4587:5;;;;;;;;:::i;:::-;;;;;;;:10;;:37;;;;;4648:4;4630:2;4633:1;4630:5;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;;:15;;;;:22;4680:15;;4693:1;4680:15;;;;;;;;;;4693:1;4680:15;;;;;;;;;-1:-1:-1;4680:15:12;4658:2;4661:1;4658:5;;;;;;;;:::i;:::-;;;;;;;:19;;:37;;;;4726:24;;;4701:2;4704:1;4701:5;;;;;;;;:::i;:::-;;;;;;;:19;;;4721:1;4701:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4701:49:12;;;:22;;;;;;;;;;;:49;4756:5;;-1:-1:-1;;;4781:27:12;4756:2;;4759:1;;4756:5;;;;;;:::i;:::-;;;;;;;:19;;;4776:1;4756:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4756:52:12;;;:22;;;;;;;;;;;:52;4814:5;;-1:-1:-1;;;4839:25:12;4814:2;;4817:1;;4814:5;;;;;;:::i;:::-;;;;;;;:19;;;4834:1;4814:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4814:50:12;;;:22;;;;;;;;;;;:50;4877:2;2872:2012;-1:-1:-1;2872:2012:12:o;7705:212::-;7831:4;7852:60;7904:7;7852:4;:13;;:35;770:40;;;;;;;:::i;8309:234::-;8418:4;8440:20;;;:13;;;:20;;;;;8434:39;;;;;:::i;:::-;;;8477:1;8434:44;8430:62;;-1:-1:-1;8487:5:12;8480:12;;8430:62;-1:-1:-1;8505:20:12;;;;:13;;;;;:20;;;;;:33;;;;;;;;;8309:234::o;815:98::-;872:40;;;;;;;:::i;10494:207::-;10600:4;10625:20;;;:13;;;:20;;;;;10619:39;;10600:4;;10625:20;10619:39;;;:::i;:::-;;;:43;:77;;;;-1:-1:-1;;10666:20:12;;;;:13;;;;;:20;;;;;:30;;;;;;10494:207::o;7921:181::-;8032:4;8058:20;;;:11;;;;:20;;;;;;;;:25;;;;8051:46;;-1:-1:-1;;;8051:46:12;;;;-1:-1:-1;;;;;8058:25:12;;;;8051:44;;:46;;;;;8058:20;;8051:46;;;;;8058:25;8051:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1123:100::-;1181:41;;;;;;;:::i;9110:280::-;9268:4;9287:20;;;:11;;;;:20;;;;;:25;;-1:-1:-1;;;;;9287:25:12;:39;;;;:98;;-1:-1:-1;9330:20:12;;;;:11;;;:20;;;;;:55;;:28;;-1:-1:-1;;;;;;9330:55:12;;:37;:55::i;8106:199::-;8231:4;8259:20;;;:11;;;;:20;;;;;;;;:25;;;;8252:48;;-1:-1:-1;;;8252:48:12;;;;-1:-1:-1;;;;;8259:25:12;;;;8252:46;;:48;;;;;8259:20;;8252:48;;;;;8259:25;8252:48;;;;;;;;;;;;;;550:80;595:34;;-1:-1:-1;;;595:34:12;;;9102:29:45;9147:12;;595:34:12;8900:265:45;917:92:12;971:37;;;;;;;:::i;9941:168::-;10044:4;10069:18;;;:12;;;:18;;;;;10063:37;;10044:4;;10069:18;10063:37;;;:::i;9394:332::-;9553:4;9578:20;;;:11;;;;:20;;;;;:25;;-1:-1:-1;;;;;9578:25:12;:39;;;;:143;;-1:-1:-1;9686:35:12;9627:20;;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;;;;9627:48:12;;;;:30;;;;:48;;;;;;:55;;;;;:94;;;;;;;:::i;:::-;;;9394:332;-1:-1:-1;;;;9394:332:12:o;10113:201::-;10217:4;10242:18;;;:12;;;:18;;;;;10236:37;;10217:4;;10242:18;10236:37;;;:::i;:::-;;;:41;:73;;;;-1:-1:-1;;10281:18:12;;;;:12;;;;:18;;;;;:28;;;;;10113:201::o;7291:213::-;-1:-1:-1;;;;;7417:24:12;;7398:4;7417:24;;;;;;;;;;;971:37;;7464:35;;7398:4;;971:37;;;;:::i;5429:132:22:-;5509:4;3486:19;;;:12;;;:19;;;;;;:24;;5528:28;3394:121;7042:144;7112:4;7131:50;7136:3;-1:-1:-1;;;;;7156:23:22;;7131:4;:50::i;4962:117::-;5032:4;5051:23;5056:3;5068:5;1571:354;1634:4;3486:19;;;:12;;;:19;;;;;;1646:275;;-1:-1:-1;1682:23:22;;;;;;;;:11;:23;;;;;;;;;;;;;1844:18;;1822:19;;;:12;;;:19;;;;;;:40;;;;1870:11;;1646:275;-1:-1:-1;1909:5:22;1902:12;;14:275:45;109:6;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;-1:-1:-1;;209:23:45;;;279:2;264:18;;;251:32;;-1:-1:-1;14:275:45:o;684:207::-;770:6;823:2;811:9;802:7;798:23;794:32;791:52;;;839:1;836;829:12;791:52;-1:-1:-1;862:23:45;;684:207;-1:-1:-1;684:207:45:o;896:173::-;964:20;;-1:-1:-1;;;;;1013:31:45;;1003:42;;993:70;;1059:1;1056;1049:12;993:70;896:173;;;:::o;1074:281::-;1169:6;1177;1230:2;1218:9;1209:7;1205:23;1201:32;1198:52;;;1246:1;1243;1236:12;1198:52;1282:9;1269:23;1259:33;;1311:38;1345:2;1334:9;1330:18;1311:38;:::i;:::-;1301:48;;1074:281;;;;;:::o;1360:173::-;1427:20;;-1:-1:-1;;;;;;1476:32:45;;1466:43;;1456:71;;1523:1;1520;1513:12;1538:422;1650:6;1658;1666;1674;1727:3;1715:9;1706:7;1702:23;1698:33;1695:53;;;1744:1;1741;1734:12;1695:53;1780:9;1767:23;1757:33;;1837:2;1826:9;1822:18;1809:32;1799:42;;1860:38;1894:2;1883:9;1879:18;1860:38;:::i;:::-;1850:48;;1917:37;1950:2;1939:9;1935:18;1917:37;:::i;:::-;1907:47;;1538:422;;;;;;;:::o;1965:1669::-;2195:4;2224:2;2264;2253:9;2249:18;2294:2;2283:9;2276:21;2317:6;2352;2346:13;2383:6;2375;2368:22;2409:2;2399:12;;2442:2;2431:9;2427:18;2420:25;;2504:2;2494:6;2491:1;2487:14;2476:9;2472:30;2468:39;2542:2;2534:6;2530:15;2563:1;2584;2594:1011;2610:6;2605:3;2602:15;2594:1011;;;2679:22;;;-1:-1:-1;;2675:36:45;2663:49;;2735:13;;2845:9;;2830:25;;2894:11;;;2888:18;2771:4;2926:15;;;2919:27;;;3007:19;;2802:15;;;3039:24;;;3097:3;3085:16;;;3130:21;;;3175:1;;3189:236;3205:8;3200:3;3197:17;3189:236;;;3286:15;;-1:-1:-1;;;;;;3282:42:45;3268:57;;3351:14;;;;3394:17;;;;3233:1;3224:11;;;;;3189:236;;;-1:-1:-1;;;3482:11:45;;;3476:18;3469:26;3462:34;3445:15;;;3438:59;;;;3583:12;;;;3548:15;;;;2636:1;2627:11;2594:1011;;;-1:-1:-1;3622:6:45;;1965:1669;-1:-1:-1;;;;;;;;;1965:1669:45:o;3639:347::-;3742:6;3750;3758;3811:2;3799:9;3790:7;3786:23;3782:32;3779:52;;;3827:1;3824;3817:12;3779:52;3863:9;3850:23;3840:33;;3920:2;3909:9;3905:18;3892:32;3882:42;;3943:37;3976:2;3965:9;3961:18;3943:37;:::i;:::-;3933:47;;3639:347;;;;;:::o;3991:271::-;-1:-1:-1;;;4193:35:45;;4253:2;4244:12;;3991:271::o;4267:380::-;4346:1;4342:12;;;;4389;;;4410:61;;4464:4;4456:6;4452:17;4442:27;;4410:61;4517:2;4509:6;4506:14;4486:18;4483:38;4480:161;;4563:10;4558:3;4554:20;4551:1;4544:31;4598:4;4595:1;4588:15;4626:4;4623:1;4616:15;4480:161;;4267:380;;;:::o;4652:271::-;-1:-1:-1;;;4854:35:45;;4914:2;4905:12;;4652:271::o;5188:268::-;-1:-1:-1;;;5390:32:45;;5447:2;5438:12;;5188:268::o;5461:127::-;5522:10;5517:3;5513:20;5510:1;5503:31;5553:4;5550:1;5543:15;5577:4;5574:1;5567:15;5593:275;-1:-1:-1;;;5795:39:45;;5859:2;5850:12;;5593:275::o;5873:127::-;5934:10;5929:3;5925:20;5922:1;5915:31;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6131:545;6233:2;6228:3;6225:11;6222:448;;;6269:1;6294:5;6290:2;6283:17;6339:4;6335:2;6325:19;6409:2;6397:10;6393:19;6390:1;6386:27;6380:4;6376:38;6445:4;6433:10;6430:20;6427:47;;;-1:-1:-1;6468:4:45;6427:47;6523:2;6518:3;6514:12;6511:1;6507:20;6501:4;6497:31;6487:41;;6578:82;6596:2;6589:5;6586:13;6578:82;;;6641:17;;;6622:1;6611:13;6578:82;;;6582:3;;;6222:448;6131:545;;;:::o;6852:1352::-;6978:3;6972:10;7005:18;6997:6;6994:30;6991:56;;;7027:18;;:::i;:::-;7056:97;7146:6;7106:38;7138:4;7132:11;7106:38;:::i;:::-;7100:4;7056:97;:::i;:::-;7208:4;;7272:2;7261:14;;7289:1;7284:663;;;;7991:1;8008:6;8005:89;;;-1:-1:-1;8060:19:45;;;8054:26;8005:89;-1:-1:-1;;6809:1:45;6805:11;;;6801:24;6797:29;6787:40;6833:1;6829:11;;;6784:57;8107:81;;7254:944;;7284:663;6078:1;6071:14;;;6115:4;6102:18;;-1:-1:-1;;7320:20:45;;;7438:236;7452:7;7449:1;7446:14;7438:236;;;7541:19;;;7535:26;7520:42;;7633:27;;;;7601:1;7589:14;;;;7468:19;;7438:236;;;7442:3;7702:6;7693:7;7690:19;7687:201;;;7763:19;;;7757:26;-1:-1:-1;;7846:1:45;7842:14;;;7858:3;7838:24;7834:37;7830:42;7815:58;7800:74;;7687:201;-1:-1:-1;;;;;7934:1:45;7918:14;;;7914:22;7901:36;;-1:-1:-1;6852:1352:45:o;8209:272::-;-1:-1:-1;;;8411:36:45;;8472:2;8463:12;;8209:272::o;8486:127::-;8547:10;8542:3;8538:20;8535:1;8528:31;8578:4;8575:1;8568:15;8602:4;8599:1;8592:15;8618:277;8685:6;8738:2;8726:9;8717:7;8713:23;8709:32;8706:52;;;8754:1;8751;8744:12;8706:52;8786:9;8780:16;8839:5;8832:13;8825:21;8818:5;8815:32;8805:60;;8861:1;8858;8851:12;8805:60;8884:5;8618:277;-1:-1:-1;;;8618:277:45:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1633200",
        "executionCost": "1746",
        "totalCost": "1634946"
      },
      "external": {
        "LIB_NAME()": "393",
        "LIB_VERSION()": "460",
        "LIVELY_ADMIN_ROLE()": "433",
        "LIVELY_ANONYMOUS_ROLE()": "433",
        "LIVELY_GENERAL_GROUP()": "434",
        "LIVELY_GENERAL_REALM()": "456",
        "LIVELY_SYSTEM_ADMIN_ROLE()": "433",
        "createRequestContext()": "infinite",
        "hasAccess(AccessControlStorage.DataMaps storage,bytes32,address,bytes4)": "infinite",
        "initializeContext(AccessControlStorage.DataMaps storage)": "infinite",
        "isContextEnabled(AccessControlStorage.DataMaps storage,bytes32)": "4761",
        "isContextExists(AccessControlStorage.DataMaps storage,bytes32)": "2544",
        "isContextFunctionEnabled(AccessControlStorage.DataMaps storage,bytes32,bytes4)": "5020",
        "isContextFunctionExists(AccessControlStorage.DataMaps storage,bytes32,bytes4)": "5079",
        "isContextSafeMode(AccessControlStorage.DataMaps storage,bytes32)": "infinite",
        "isContextUpgradable(AccessControlStorage.DataMaps storage,bytes32)": "infinite",
        "isGroupEnabled(AccessControlStorage.DataMaps storage,bytes32)": "4880",
        "isGroupExists(AccessControlStorage.DataMaps storage,bytes32)": "2654",
        "isLivelyAdmin(AccessControlStorage.DataMaps storage,address)": "2966",
        "isLivelyGeneralGroup(AccessControlStorage.DataMaps storage,bytes32)": "infinite",
        "isLivelyGeneralRealm(AccessControlStorage.DataMaps storage,bytes32)": "infinite",
        "isLivelySystemAdmin(AccessControlStorage.DataMaps storage,address)": "2901",
        "isRealmEnabled(AccessControlStorage.DataMaps storage,bytes32)": "4857",
        "isRealmExists(AccessControlStorage.DataMaps storage,bytes32)": "2698",
        "isRealmUpgradable(AccessControlStorage.DataMaps storage,bytes32)": "4878",
        "isRoleEnabled(AccessControlStorage.DataMaps storage,bytes32)": "4894",
        "isRoleExists(AccessControlStorage.DataMaps storage,bytes32)": "2652"
      }
    },
    "methodIdentifiers": {
      "LIB_NAME()": "bec94751",
      "LIB_VERSION()": "2466209b",
      "LIVELY_ADMIN_ROLE()": "d8b31999",
      "LIVELY_ANONYMOUS_ROLE()": "9bb20d51",
      "LIVELY_GENERAL_GROUP()": "6ac58ac1",
      "LIVELY_GENERAL_REALM()": "20dd27af",
      "LIVELY_SYSTEM_ADMIN_ROLE()": "5632ffd8",
      "createRequestContext()": "62f3c2d4",
      "hasAccess(AccessControlStorage.DataMaps storage,bytes32,address,bytes4)": "487c6960",
      "initializeContext(AccessControlStorage.DataMaps storage)": "45d71c18",
      "isContextEnabled(AccessControlStorage.DataMaps storage,bytes32)": "3346dd2d",
      "isContextExists(AccessControlStorage.DataMaps storage,bytes32)": "10f07501",
      "isContextFunctionEnabled(AccessControlStorage.DataMaps storage,bytes32,bytes4)": "decf375c",
      "isContextFunctionExists(AccessControlStorage.DataMaps storage,bytes32,bytes4)": "a834b8c0",
      "isContextSafeMode(AccessControlStorage.DataMaps storage,bytes32)": "7cd7c4ed",
      "isContextUpgradable(AccessControlStorage.DataMaps storage,bytes32)": "af07cfcd",
      "isGroupEnabled(AccessControlStorage.DataMaps storage,bytes32)": "442b0ca1",
      "isGroupExists(AccessControlStorage.DataMaps storage,bytes32)": "0fd7cb90",
      "isLivelyAdmin(AccessControlStorage.DataMaps storage,address)": "fbe97e19",
      "isLivelyGeneralGroup(AccessControlStorage.DataMaps storage,bytes32)": "017d6269",
      "isLivelyGeneralRealm(AccessControlStorage.DataMaps storage,bytes32)": "64f892ca",
      "isLivelySystemAdmin(AccessControlStorage.DataMaps storage,address)": "470e4565",
      "isRealmEnabled(AccessControlStorage.DataMaps storage,bytes32)": "779a6a7a",
      "isRealmExists(AccessControlStorage.DataMaps storage,bytes32)": "113f2828",
      "isRealmUpgradable(AccessControlStorage.DataMaps storage,bytes32)": "660c9912",
      "isRoleEnabled(AccessControlStorage.DataMaps storage,bytes32)": "e24b90a9",
      "isRoleExists(AccessControlStorage.DataMaps storage,bytes32)": "d95140eb"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LIB_NAME\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIB_VERSION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_ANONYMOUS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_GENERAL_GROUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_GENERAL_REALM\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIVELY_SYSTEM_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createRequestContext\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4[]\",\"name\":\"funcSelectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"internalType\":\"struct IContextManagement.RequestRegisterContext[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/lib/acl/LAccessControl.sol\":\"LAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/acl/AccessControlStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\nimport \\\"../lib/struct/LEnumerableSet.sol\\\";\\nimport \\\"../lib/struct/LEnumerableMap.sol\\\";\\nimport \\\"../proxy/BaseUUPSStorage.sol\\\";\\n\\nabstract contract AccessControlStorage is BaseUUPSStorage {\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n  using LEnumerableMap for LEnumerableMap.Bytes32ToBytes32Map;\\n  using LEnumerableMap for LEnumerableMap.AddressToUintMap;\\n\\n  enum Status {\\n    NONE,\\n    ENABLED,\\n    DISABLED\\n  }\\n\\n  struct RoleStat {\\n    bytes32 role;\\n    Status status;\\n  }\\n\\n  struct Context {\\n    bytes32 realm;\\n    address smca; // smart contract address\\n    bool isEnabled;\\n    mapping(bytes4 => RoleStat) resources; // function selector => RoleStat\\n    LEnumerableSet.Bytes32Set funcSet;\\n  }\\n\\n  struct Role {\\n    string name;\\n    bytes32 group;\\n    bool isEnabled;\\n    LEnumerableSet.AddressSet accountSet;\\n  }\\n\\n  struct Realm {\\n    string name;\\n    bool isEnabled;\\n    bool isUpgradable;\\n    LEnumerableSet.Bytes32Set ctxSet;\\n  }\\n\\n  struct Group {\\n    string name;\\n    bool isEnabled;\\n    LEnumerableSet.Bytes32Set roleSet;\\n  }\\n\\n  struct DataMaps {\\n    mapping(address => mapping(bytes32 => Status)) accountMap;\\n    mapping(bytes32 => Context) ctxMap;\\n    mapping(bytes32 => Role) roleMap;\\n    mapping(bytes32 => Realm) realmMap;\\n    mapping(bytes32 => Group) groupMap;\\n  }\\n\\n  bytes32 internal constant _LIVELY_GENERAL_REALM = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_REALM\\\"));\\n  bytes32 internal constant _LIVELY_GENERAL_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_GROUP\\\"));\\n  bytes32 internal constant _LIVELY_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ADMIN_ROLE\\\"));\\n  bytes32 internal constant _LIVELY_SYSTEM_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_SYSTEM_ADMIN_ROLE\\\"));\\n  bytes32 internal constant _LIVELY_ANONYMOUS_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ANONYMOUS_ROLE\\\"));\\n\\n  DataMaps internal _dataMaps;\\n}\\n\",\"keccak256\":\"0x88e7d9dc3e4d4465234480bf22e51c9f67796d39e459f7eac8eb93a97b9d28a5\",\"license\":\"MIT\"},\"src/contracts/acl/IContextManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\ninterface IContextManagement {\\n  enum UpdateContextStatus {\\n    DISABLE,\\n    ENABLE,\\n    REMOVE\\n  }\\n\\n  struct RequestContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    address smca;\\n    bool status;\\n  }\\n\\n  struct RequestRegisterContext {\\n    bytes32 role;\\n    bytes4[] funcSelectors;\\n    bool isEnabled;\\n  }\\n\\n  struct RequestUpdateContext {\\n    bytes32 role;\\n    bytes4[] funcSelectors;\\n    UpdateContextStatus updateStatus;\\n  }\\n\\n  struct ResponseContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    address smca;\\n    bool isSafeMode;\\n    bool isUpgradable;\\n  }\\n\\n  event ContextRegistered(bytes32 indexed context, address indexed scma, address indexed sender, bytes32 realm);\\n\\n  event ContextUpdated(bytes32 indexed context, address indexed scma, address indexed sender, bytes32 realm);\\n\\n  event ContextStatusChanged(bytes32 indexed context, address indexed sender, bytes32 indexed realm, bool status);\\n\\n  event ContextFuncRoleAdded(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextFuncRemoved(bytes32 indexed context, address indexed sender, bytes4 functionSelector, bytes32 realm);\\n\\n  event ContextRoleGranted(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextRoleRevoked(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextRealmChanged(bytes32 indexed context, address indexed sender, bytes32 indexed realm, bytes32 oldRealm);\\n\\n  function registerContext(\\n    bytes memory signature,\\n    RequestContext calldata rc,\\n    RequestRegisterContext[] calldata rcr\\n  ) external returns (bytes32);\\n\\n  function updateContext(\\n    bytes32 ctx,\\n    bytes memory signature,\\n    RequestContext calldata rc,\\n    RequestUpdateContext[] calldata ruc\\n  ) external returns (address);\\n\\n  function addContextFuncRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function removeContextFunc(bytes32 ctx, bytes4 functionSelector) external returns (bool);\\n\\n  function grantContextRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function revokeContextRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function setContextRealm(bytes32 ctx, bytes32 realm) external returns (bool);\\n\\n  function setContextStatus(bytes32 ctx, bool status) external returns (bool);\\n\\n  function hasContextRole(\\n    bytes32 ctx,\\n    bytes32 role,\\n    bytes4 functionSelector\\n  ) external view returns (bool);\\n\\n  function getContextInfo(bytes32 ctx) external view returns (ResponseContext memory);\\n\\n  function getContextFuncs(bytes32 ctx) external view returns (bytes4[] memory);\\n}\\n\",\"keccak256\":\"0xdb803c78806f81203f8d0b121aa12ab2fdd43c6174ede12ce9b2ad1dcff881cc\",\"license\":\"MIT\"},\"src/contracts/acl/IGroupManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\ninterface IGroupManagement {\\n  event GroupRegistered(bytes32 indexed group, address indexed sender, string name, bool status);\\n\\n  event GroupStatusChanged(bytes32 indexed group, address indexed sender, bool status);\\n\\n  function registerGroup(string calldata name, bool status) external returns (bytes32);\\n\\n  function setGroupStatus(bytes32 group, bool status) external returns (bool);\\n\\n  function hasGroupRole(bytes32 group, bytes32 role) external view returns (bool);\\n\\n  function getGroupInfo(bytes32 group) external view returns (string memory, bool);\\n\\n  function getGroupRoles(bytes32 group) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0xcfdaba2dfb246d03da0adf1a01ae32185dfc73048f639cc3bd389ed9e5403b86\",\"license\":\"MIT\"},\"src/contracts/acl/IRealmManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\ninterface IRealmManagement {\\n  event RealmRegistered(bytes32 indexed realm, address indexed sender, string name, bool status, bool isUpgradable);\\n\\n  event RealmStatusChanged(bytes32 indexed realm, address indexed sender, bool status);\\n\\n  event RealmUpgradeStatusChanged(bytes32 indexed realm, address indexed sender, bool status);\\n\\n  function registerRealm(\\n    string calldata name,\\n    bool status,\\n    bool isUpgradable\\n  ) external returns (bytes32);\\n\\n  function setRealmStatus(bytes32 realm, bool status) external returns (bool);\\n\\n  function setRealmUpgradeStatus(bytes32 realm, bool status) external returns (bool);\\n\\n  function hasRealmContext(bytes32 realm, bytes32 context) external view returns (bool);\\n\\n  function getRealmInfo(bytes32 realm)\\n    external\\n    view\\n    returns (\\n      string memory,\\n      bool,\\n      bool\\n    );\\n\\n  function getRealmContexts(bytes32 realm) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x5a0a193706319c4b2c77928a0fff9d95a48c85d84bbcc837c9f7a4def0915979\",\"license\":\"MIT\"},\"src/contracts/acl/IRoleManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\ninterface IRoleManagement {\\n  event RoleAccountGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n  event RoleAccountRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n  event RoleRegistered(\\n    bytes32 indexed role,\\n    string indexed name,\\n    address indexed sender,\\n    bytes32 group,\\n    bool isEnabled\\n  );\\n\\n  event RoleStatusChanged(bytes32 indexed role, address indexed sender, bytes32 indexed group, bool status);\\n\\n  event RoleGroupChanged(bytes32 indexed role, address indexed sender, bytes32 indexed newGroup, bytes32 oldGroup);\\n\\n  function registerRole(\\n    string calldata name,\\n    bytes32 group,\\n    bool status\\n  ) external returns (bytes32);\\n\\n  function grantRoleAccount(bytes32 role, address account) external returns (bool);\\n\\n  function revokeRoleAccount(bytes32 role, address account) external returns (bool);\\n\\n  function setRoleStatus(bytes32 role, bool status) external returns (bool);\\n\\n  function setRoleGroup(bytes32 role, bytes32 group) external returns (bool);\\n\\n  function getRoleInfo(bytes32 role)\\n    external\\n    view\\n    returns (\\n      string memory,\\n      bytes32,\\n      bool\\n    );\\n\\n  function getRoleAccounts(bytes32 role) external view returns (address[] memory);\\n\\n  function hasRoleAccount(bytes32 role, address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x97b983b69eac390a9bf6164a3f7c396b1a4c6ddb59783562c96cebdc7a1c57c8\",\"license\":\"MIT\"},\"src/contracts/lib/LContextUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\n/**\\n * @dev Collection of functions related to the context\\n */\\nlibrary LContextUtils {\\n  function generateCtx(address contractAddress) internal pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(contractAddress));\\n  }\\n}\\n\",\"keccak256\":\"0xae0cd5e3563156b9bc14d8c54282f80c6cefd446800a6e8c83e19faee286f966\",\"license\":\"MIT\"},\"src/contracts/lib/acl/LAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\nimport \\\"../../acl/IContextManagement.sol\\\";\\nimport \\\"../../acl/IRoleManagement.sol\\\";\\nimport \\\"../../acl/IGroupManagement.sol\\\";\\nimport \\\"../../acl/IRealmManagement.sol\\\";\\nimport \\\"../../acl/AccessControlStorage.sol\\\";\\nimport \\\"../struct/LEnumerableSet.sol\\\";\\nimport \\\"../../proxy/IProxy.sol\\\";\\nimport \\\"../LContextUtils.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\nlibrary LAccessControl {\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n\\n  bytes32 public constant LIB_NAME = keccak256(abi.encodePacked(\\\"LAccessControl\\\"));\\n  bytes32 public constant LIB_VERSION = keccak256(abi.encodePacked(\\\"1.0.0\\\"));\\n\\n  bytes32 public constant LIVELY_GENERAL_REALM = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_REALM\\\"));\\n  bytes32 public constant LIVELY_GENERAL_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_GROUP\\\"));\\n  bytes32 public constant LIVELY_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ADMIN_ROLE\\\"));\\n  bytes32 public constant LIVELY_SYSTEM_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_SYSTEM_ADMIN_ROLE\\\"));\\n  bytes32 public constant LIVELY_ANONYMOUS_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ANONYMOUS_ROLE\\\"));\\n\\n  function initializeContext(AccessControlStorage.DataMaps storage data) external {\\n    data.accountMap[msg.sender][LIVELY_ADMIN_ROLE] = AccessControlStorage.Status.ENABLED;\\n    data.accountMap[msg.sender][LIVELY_SYSTEM_ADMIN_ROLE] = AccessControlStorage.Status.ENABLED;\\n\\n    data.roleMap[LIVELY_ADMIN_ROLE].name = \\\"LIVELY_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ADMIN_ROLE].group = LIVELY_GENERAL_GROUP;\\n    data.roleMap[LIVELY_ADMIN_ROLE].accountSet.add(msg.sender);\\n\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].name = \\\"LIVELY_SYSTEM_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].group = LIVELY_GENERAL_GROUP;\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].accountSet.add(msg.sender);\\n\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].name = \\\"LIVELY_ANONYMOUS_ROLE\\\";\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].group = LIVELY_GENERAL_GROUP;\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].accountSet.add(msg.sender);\\n\\n    data.groupMap[LIVELY_GENERAL_GROUP].name = \\\"LIVELY_GENERAL_GROUP\\\";\\n    data.groupMap[LIVELY_GENERAL_GROUP].isEnabled = true;\\n    data.groupMap[LIVELY_GENERAL_GROUP].roleSet.add(LIVELY_ADMIN_ROLE);\\n    data.groupMap[LIVELY_GENERAL_GROUP].roleSet.add(LIVELY_SYSTEM_ADMIN_ROLE);\\n\\n    data.realmMap[LIVELY_GENERAL_REALM].name = \\\"LIVELY_GENERAL_REALM\\\";\\n    data.realmMap[LIVELY_GENERAL_REALM].isEnabled = true;\\n    data.realmMap[LIVELY_GENERAL_REALM].isUpgradable = true;\\n    data.realmMap[LIVELY_GENERAL_REALM].ctxSet.add(LContextUtils.generateCtx(address(this)));\\n  }\\n\\n  function createRequestContext() external pure returns (IContextManagement.RequestRegisterContext[] memory) {\\n    IContextManagement.RequestRegisterContext[] memory rc = new IContextManagement.RequestRegisterContext[](2);\\n    rc[0].role = LIVELY_ADMIN_ROLE;\\n    rc[0].isEnabled = true;\\n    rc[0].funcSelectors = new bytes4[](19);\\n    rc[0].funcSelectors[0] = IProxy.setUpgradeStatus.selector;\\n    rc[0].funcSelectors[1] = IContextManagement.registerContext.selector;\\n    rc[0].funcSelectors[2] = IContextManagement.updateContext.selector;\\n    rc[0].funcSelectors[3] = IContextManagement.addContextFuncRole.selector;\\n    rc[0].funcSelectors[4] = IContextManagement.removeContextFunc.selector;\\n    rc[0].funcSelectors[5] = IContextManagement.grantContextRole.selector;\\n    rc[0].funcSelectors[6] = IContextManagement.revokeContextRole.selector;\\n    rc[0].funcSelectors[7] = IContextManagement.setContextRealm.selector;\\n    rc[0].funcSelectors[8] = IContextManagement.setContextStatus.selector;\\n    rc[0].funcSelectors[9] = IRoleManagement.registerRole.selector;\\n    rc[0].funcSelectors[10] = IRoleManagement.grantRoleAccount.selector;\\n    rc[0].funcSelectors[11] = IRoleManagement.revokeRoleAccount.selector;\\n    rc[0].funcSelectors[12] = IRoleManagement.setRoleStatus.selector;\\n    rc[0].funcSelectors[13] = IRoleManagement.setRoleGroup.selector;\\n    rc[0].funcSelectors[14] = IGroupManagement.registerGroup.selector;\\n    rc[0].funcSelectors[15] = IGroupManagement.setGroupStatus.selector;\\n    rc[0].funcSelectors[16] = IRealmManagement.registerRealm.selector;\\n    rc[0].funcSelectors[17] = IRealmManagement.setRealmStatus.selector;\\n    rc[0].funcSelectors[18] = IRealmManagement.setRealmUpgradeStatus.selector;\\n\\n    rc[1].role = LIVELY_SYSTEM_ADMIN_ROLE;\\n    rc[1].isEnabled = true;\\n    rc[1].funcSelectors = new bytes4[](3);\\n    rc[1].funcSelectors[0] = IProxy.setAdmin.selector;\\n    rc[1].funcSelectors[1] = IProxy.setSafeMode.selector;\\n    rc[1].funcSelectors[2] = IProxy.upgradeTo.selector;\\n    return rc;\\n  }\\n\\n  function hasAccess(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 context,\\n    address account,\\n    bytes4 signature\\n  ) external view returns (bool) {\\n    bytes32 role = data.ctxMap[context].resources[signature].role;\\n    // console.log(\\\"hasAccess called, address: %s\\\", account);\\n\\n    // console.log(\\\"data.ctxMap[context].smca: %s\\\", data.ctxMap[context].smca);\\n    // console.log(\\\"data.ctxMap[context].isEnabled:\\\");\\n    // console.logBool(data.ctxMap[context].isEnabled);\\n    // console.log(\\\"data.ctxMap[context].realm: \\\");\\n    // console.logBytes32(data.ctxMap[context].realm);\\n    // console.log(\\\"data.ctxMap[context].resources[signature].status: \\\");\\n    // console.logBytes1(bytes1(uint8(data.ctxMap[context].resources[signature].status)));\\n    // console.log(\\\"data.ctxMap[context].resources[signature].role: \\\");\\n    // console.logBytes32(data.ctxMap[context].resources[signature].role);\\n\\n    // console.log(\\\"data.realmMap[data.ctxMap[context].realm].name: %s\\\", data.realmMap[data.ctxMap[context].realm].name);\\n    // console.log(\\\"data.realmMap[data.ctxMap[context].realm].isEnabled: \\\");\\n    // console.logBool(data.realmMap[data.ctxMap[context].realm].isEnabled);\\n\\n    // console.log(\\\"data.groupMap[data.roleMap[role].group].name: %s\\\", data.groupMap[data.roleMap[role].group].name);\\n    // console.log(\\\"data.groupMap[data.roleMap[role].group].isEnabled: \\\");\\n    // console.logBool(data.groupMap[data.roleMap[role].group].isEnabled);\\n\\n    // console.log(\\\"data.accountMap[account][role]: \\\");\\n    // console.logBytes1(bytes1(uint8(data.accountMap[account][role])));\\n\\n    if (role == LIVELY_ANONYMOUS_ROLE) {\\n      return\\n        data.ctxMap[context].isEnabled &&\\n        data.ctxMap[context].resources[signature].status == AccessControlStorage.Status.ENABLED;\\n    } else {\\n      return\\n        data.ctxMap[context].isEnabled &&\\n        data.ctxMap[context].resources[signature].status == AccessControlStorage.Status.ENABLED &&\\n        data.realmMap[data.ctxMap[context].realm].isEnabled &&\\n        data.groupMap[data.roleMap[role].group].isEnabled &&\\n        data.accountMap[account][role] == AccessControlStorage.Status.ENABLED;\\n    }\\n  }\\n\\n  function isLivelySystemAdmin(AccessControlStorage.DataMaps storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_SYSTEM_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyAdmin(AccessControlStorage.DataMaps storage data, address account) external view returns (bool) {\\n    return data.accountMap[account][LIVELY_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyGeneralGroup(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return data.groupMap[LIVELY_GENERAL_GROUP].roleSet.contains(role);\\n  }\\n\\n  function isLivelyGeneralRealm(AccessControlStorage.DataMaps storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.realmMap[LIVELY_GENERAL_REALM].ctxSet.contains(context);\\n  }\\n\\n  function isContextSafeMode(AccessControlStorage.DataMaps storage data, bytes32 context) external view returns (bool) {\\n    return IProxy(data.ctxMap[context].smca).isSafeMode();\\n  }\\n\\n  function isContextUpgradable(AccessControlStorage.DataMaps storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return IProxy(data.ctxMap[context].smca).isUpgradable();\\n  }\\n\\n  function isRealmUpgradable(AccessControlStorage.DataMaps storage data, bytes32 realm) external view returns (bool) {\\n    if (bytes(data.realmMap[realm].name).length == 0) return false;\\n    return data.realmMap[realm].isUpgradable;\\n  }\\n\\n  function isGroupExists(AccessControlStorage.DataMaps storage data, bytes32 group) external view returns (bool) {\\n    return bytes(data.groupMap[group].name).length > 0;\\n  }\\n\\n  function isGroupEnabled(AccessControlStorage.DataMaps storage data, bytes32 group) external view returns (bool) {\\n    return bytes(data.groupMap[group].name).length > 0 && data.groupMap[group].isEnabled;\\n  }\\n\\n  function isContextExists(AccessControlStorage.DataMaps storage data, bytes32 context) external view returns (bool) {\\n    return data.ctxMap[context].smca != address(0);\\n  }\\n\\n  function isContextFunctionExists(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 context,\\n    bytes4 functionSelector\\n  ) external view returns (bool) {\\n    return data.ctxMap[context].smca != address(0) && data.ctxMap[context].funcSet.contains(functionSelector);\\n  }\\n\\n  function isContextFunctionEnabled(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 context,\\n    bytes4 functionSelector\\n  ) external view returns (bool) {\\n    return\\n      data.ctxMap[context].smca != address(0) &&\\n      data.ctxMap[context].resources[functionSelector].status == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isContextEnabled(AccessControlStorage.DataMaps storage data, bytes32 context) external view returns (bool) {\\n    return data.ctxMap[context].smca != address(0) && data.ctxMap[context].isEnabled;\\n  }\\n\\n  function isRoleExists(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return bytes(data.roleMap[role].name).length > 0;\\n  }\\n\\n  function isRoleEnabled(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return bytes(data.roleMap[role].name).length > 0 && data.roleMap[role].isEnabled;\\n  }\\n\\n  function isRealmExists(AccessControlStorage.DataMaps storage data, bytes32 realm) external view returns (bool) {\\n    return bytes(data.realmMap[realm].name).length > 0;\\n  }\\n\\n  function isRealmEnabled(AccessControlStorage.DataMaps storage data, bytes32 realm) external view returns (bool) {\\n    return bytes(data.realmMap[realm].name).length > 0 && data.realmMap[realm].isEnabled;\\n  }\\n}\\n\",\"keccak256\":\"0x39e4f9c2eb5af935fa83e84a77bc00907c268ad88588b269fa6374083ca4ffa6\",\"license\":\"MIT\"},\"src/contracts/lib/struct/LEnumerableMap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\nimport \\\"./LEnumerableSet.sol\\\";\\n\\n/**\\n * @dev Library for managing an enumerable variant of Solidity's\\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\n * type.\\n *\\n * Maps have the following properties:\\n *\\n * - Entries are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\\n *\\n *     // Declare a set state variable\\n *     EnumerableMap.UintToAddressMap private myMap;\\n * }\\n * ```\\n *\\n * The following map types are supported:\\n *\\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\\n */\\nlibrary LEnumerableMap {\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n\\n  // To implement this library for multiple types with as little code\\n  // repetition as possible, we write it in terms of a generic Map type with\\n  // bytes32 keys and values.\\n  // The Map implementation uses private functions, and user-facing\\n  // implementations (such as Uint256ToAddressMap) are just wrappers around\\n  // the underlying Map.\\n  // This means that we can only create new EnumerableMaps for types that fit\\n  // in bytes32.\\n\\n  struct Bytes32ToBytes32Map {\\n    // Storage of keys\\n    LEnumerableSet.Bytes32Set _keys;\\n    mapping(bytes32 => bytes32) _values;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    Bytes32ToBytes32Map storage map,\\n    bytes32 key,\\n    bytes32 value\\n  ) internal returns (bool) {\\n    map._values[key] = value;\\n    return map._keys.add(key);\\n  }\\n\\n  /**\\n   * @dev Removes a key-value pair from a map. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\\n    delete map._values[key];\\n    return map._keys.remove(key);\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\\n    return map._keys.contains(key);\\n  }\\n\\n  /**\\n   * @dev Returns the number of key-value pairs in the map. O(1).\\n   */\\n  function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\\n    return map._keys.length();\\n  }\\n\\n  /**\\n   * @dev Returns the key-value pair stored at position `index` in the map. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of entries inside the\\n   * array, and it may change when more entries are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\\n    bytes32 key = map._keys.at(index);\\n    return (key, map._values[key]);\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   */\\n  function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\\n    bytes32 value = map._values[key];\\n    if (value == bytes32(0)) {\\n      return (contains(map, key), bytes32(0));\\n    } else {\\n      return (true, value);\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\\n    bytes32 value = map._values[key];\\n    require(value != 0 || contains(map, key), \\\"EnumerableMap: nonexistent key\\\");\\n    return value;\\n  }\\n\\n  /**\\n   * @dev Same as {_get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {_tryGet}.\\n   */\\n  function get(\\n    Bytes32ToBytes32Map storage map,\\n    bytes32 key,\\n    string memory errorMessage\\n  ) internal view returns (bytes32) {\\n    bytes32 value = map._values[key];\\n    require(value != 0 || contains(map, key), errorMessage);\\n    return value;\\n  }\\n\\n  // UintToAddressMap\\n  struct UintToAddressMap {\\n    Bytes32ToBytes32Map _inner;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    UintToAddressMap storage map,\\n    uint256 key,\\n    address value\\n  ) internal returns (bool) {\\n    return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\\n    return remove(map._inner, bytes32(key));\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\\n    return contains(map._inner, bytes32(key));\\n  }\\n\\n  /**\\n   * @dev Returns the number of elements in the map. O(1).\\n   */\\n  function length(UintToAddressMap storage map) internal view returns (uint256) {\\n    return length(map._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the element stored at position `index` in the set. O(1).\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\\n    (bytes32 key, bytes32 value) = at(map._inner, index);\\n    return (uint256(key), address(uint160(uint256(value))));\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\\n    (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\\n    return (success, address(uint160(uint256(value))));\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\\n    return address(uint160(uint256(get(map._inner, bytes32(key)))));\\n  }\\n\\n  /**\\n   * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryGet}.\\n   */\\n  function get(\\n    UintToAddressMap storage map,\\n    uint256 key,\\n    string memory errorMessage\\n  ) internal view returns (address) {\\n    return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\\n  }\\n\\n  // AddressToUintMap\\n  struct AddressToUintMap {\\n    Bytes32ToBytes32Map _inner;\\n  }\\n\\n  /**\\n   * @dev Adds a key-value pair to a map, or updates the value for an existing\\n   * key. O(1).\\n   *\\n   * Returns true if the key was added to the map, that is if it was not\\n   * already present.\\n   */\\n  function set(\\n    AddressToUintMap storage map,\\n    address key,\\n    uint256 value\\n  ) internal returns (bool) {\\n    return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the key was removed from the map, that is if it was present.\\n   */\\n  function remove(AddressToUintMap storage map, address key) internal returns (bool) {\\n    return remove(map._inner, bytes32(uint256(uint160(key))));\\n  }\\n\\n  /**\\n   * @dev Returns true if the key is in the map. O(1).\\n   */\\n  function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\\n    return contains(map._inner, bytes32(uint256(uint160(key))));\\n  }\\n\\n  /**\\n   * @dev Returns the number of elements in the map. O(1).\\n   */\\n  function length(AddressToUintMap storage map) internal view returns (uint256) {\\n    return length(map._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the element stored at position `index` in the set. O(1).\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\\n    (bytes32 key, bytes32 value) = at(map._inner, index);\\n    return (address(uint160(uint256(key))), uint256(value));\\n  }\\n\\n  /**\\n   * @dev Tries to returns the value associated with `key`.  O(1).\\n   * Does not revert if `key` is not in the map.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\\n    (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\\n    return (success, uint256(value));\\n  }\\n\\n  /**\\n   * @dev Returns the value associated with `key`.  O(1).\\n   *\\n   * Requirements:\\n   *\\n   * - `key` must be in the map.\\n   */\\n  function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\\n    return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\\n  }\\n\\n  /**\\n   * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n   *\\n   * CAUTION: This function is deprecated because it requires allocating memory for the error\\n   * message unnecessarily. For custom revert reasons use {tryGet}.\\n   */\\n  function get(\\n    AddressToUintMap storage map,\\n    address key,\\n    string memory errorMessage\\n  ) internal view returns (uint256) {\\n    return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\\n  }\\n}\\n\",\"keccak256\":\"0xc1de84250534848559360e8904bdca74d0d6b76c209cafb17a9fe275c5ddb914\",\"license\":\"MIT\"},\"src/contracts/lib/struct/LEnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary LEnumerableSet {\\n  // To implement this library for multiple types with as little code\\n  // repetition as possible, we write it in terms of a generic Set type with\\n  // bytes32 values.\\n  // The Set implementation uses private functions, and user-facing\\n  // implementations (such as AddressSet) are just wrappers around the\\n  // underlying Set.\\n  // This means that we can only create new EnumerableSets for types that fit\\n  // in bytes32.\\n\\n  struct Set {\\n    // Storage of set values\\n    bytes32[] _values;\\n    // Position of the value in the `values` array, plus 1 because index 0\\n    // means a value is not in the set.\\n    mapping(bytes32 => uint256) _indexes;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function _add(Set storage set, bytes32 value) private returns (bool) {\\n    if (!_contains(set, value)) {\\n      set._values.push(value);\\n      // The value is stored at length-1, but we add 1 to all indexes\\n      // and use 0 as a sentinel value\\n      set._indexes[value] = set._values.length;\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function _remove(Set storage set, bytes32 value) private returns (bool) {\\n    // We read and store the value's index to prevent multiple reads from the same storage slot\\n    uint256 valueIndex = set._indexes[value];\\n\\n    if (valueIndex != 0) {\\n      // Equivalent to contains(set, value)\\n      // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n      // the array, and then remove the last element (sometimes called as 'swap and pop').\\n      // This modifies the order of the array, as noted in {at}.\\n\\n      uint256 toDeleteIndex = valueIndex - 1;\\n      uint256 lastIndex = set._values.length - 1;\\n\\n      if (lastIndex != toDeleteIndex) {\\n        bytes32 lastValue = set._values[lastIndex];\\n\\n        // Move the last value to the index where the value to delete is\\n        set._values[toDeleteIndex] = lastValue;\\n        // Update the index for the moved value\\n        set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n      }\\n\\n      // Delete the slot where the moved value was stored\\n      set._values.pop();\\n\\n      // Delete the index for the deleted slot\\n      delete set._indexes[value];\\n\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n    return set._indexes[value] != 0;\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function _length(Set storage set) private view returns (uint256) {\\n    return set._values.length;\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n    return set._values[index];\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function _values(Set storage set) private view returns (bytes32[] memory) {\\n    return set._values;\\n  }\\n\\n  // Bytes32Set\\n\\n  struct Bytes32Set {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _add(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _remove(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n    return _contains(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(Bytes32Set storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n    return _at(set._inner, index);\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n    return _values(set._inner);\\n  }\\n\\n  // AddressSet\\n\\n  struct AddressSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(AddressSet storage set, address value) internal returns (bool) {\\n    return _add(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(AddressSet storage set, address value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(AddressSet storage set, address value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(AddressSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n    return address(uint160(uint256(_at(set._inner, index))));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(AddressSet storage set) internal view returns (address[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    address[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n\\n  // UintSet\\n\\n  struct UintSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _add(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function length(UintSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n    return uint256(_at(set._inner, index));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(UintSet storage set) internal view returns (uint256[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    uint256[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0x7f3959e011b05bae8c06ee1a9baedcea7be69895988327147b80ab1d07feb524\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseUUPSStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n */\\n\\nabstract contract BaseUUPSStorage {\\n  // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n  bytes32 internal constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n  /**\\n   * @dev Storage slot with the address of the current implementation.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n  /**\\n   * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n   * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n   */\\n  bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n  /**\\n   * @dev Storage slot with the admin of the contract.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  bytes32 internal constant _TYPE_HASH = \\n    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n\\n  /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n  address internal immutable __self = address(this);\\n  address internal _accessControlManager;\\n  bytes32 internal _domainName;\\n  bytes32 internal _domainVersion;\\n  bytes32 internal _domainRealm;\\n  bool internal _isSafeMode;\\n  bool internal _isUpgradable;\\n\\n  /**\\n   * @dev This empty reserved space is put in place to allow future versions to add new\\n   * variables without shifting down storage in the inheritance chain.\\n   */\\n  uint256[64] private __gap;\\n}\\n\",\"keccak256\":\"0x8169feb4614e2e597516ab81b0f3fec45aa3e5038e4e257ce9bbf1cc45a75f1e\",\"license\":\"MIT\"},\"src/contracts/proxy/IBaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\ninterface IBaseProxy {\\n  event Upgraded(address indexed sender, address indexed proxy, address indexed newImplementation);\\n}\\n\",\"keccak256\":\"0x93a2f34af9672a421f1d4d46ed4955e078cc9f966d2e7ab7c18724207d306c9c\",\"license\":\"MIT\"},\"src/contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\nimport \\\"./IBaseProxy.sol\\\";\\n\\ninterface IProxy is IBaseProxy {\\n  /**\\n   * @dev Emitted when the admin account has changed.\\n   */\\n  event AdminChanged(address indexed sender, address indexed proxy, address newAdmin);\\n\\n  event SafeModeChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  event UpgradeStatusChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  /**\\n   * @dev Triggered when the contract has been initialized or reinitialized.\\n   */\\n  event Initialized(\\n    address indexed sender,\\n    address indexed proxy,\\n    address indexed subject,\\n    string name,\\n    string version,\\n    bytes32 realm,\\n    uint16 initializedCount\\n  );\\n\\n  function upgradeTo(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) external returns (bytes memory);\\n\\n  function setSafeMode(bool status) external returns (bool);\\n\\n  function setUpgradeStatus(bool status) external returns (bool);\\n\\n  function setAdmin(address newAdmin) external returns (bool);\\n\\n  function contractName() external view returns (bytes32);\\n\\n  function contractVersion() external view returns (bytes32);\\n\\n  function contractRealm() external view returns (bytes32);\\n\\n  function contractContext() external view returns (bytes32);\\n\\n  function getAccessControlManager() external view returns (address);\\n\\n  function subjectAddress() external view returns (address);\\n\\n  function isSafeMode() external view returns (bool);\\n\\n  function isUpgradable() external view returns (bool);\\n\\n  function getAdmin() external view returns (address);\\n\\n  function domainSeperator() external view returns (bytes32);\\n\\n  function getInitializedVersion() external view returns (uint16);\\n\\n  function getInitializeStatus() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x42f6ceb5c0bd7a5cb1bd876c3f590f2afa34b38e5eee64ce37ea65907899f84a\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}