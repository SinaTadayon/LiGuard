{
  "contractName": "LGroupManagement",
  "sourceName": "src/contracts/lib/acl/LGroupManagement.sol",
  "abi": [
    {
      "inputs": [],
      "name": "LIB_NAME",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIB_VERSION",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLibrary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x610ddb61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c80637678922e116100655780637678922e1461011a5780637c95bcdf14610145578063bec9475114610165578063f728a0f51461016d57600080fd5b806313ee7302146100975780632466209b146100c05780634ba84563146100d6578063745311f8146100f9575b600080fd5b6100aa6100a5366004610a12565b61018d565b6040516100b79190610a34565b60405180910390f35b6100c86101b3565b6040519081526020016100b7565b6100e96100e4366004610a78565b6101e1565b60405190151581526020016100b7565b61010c610107366004610a12565b61022b565b6040516100b7929190610aa4565b6040516001600160a01b0373__$c43b1d7058274a71a9734d16e6b6586431$__1681526020016100b7565b81801561015157600080fd5b506100e9610160366004610b0c565b6102e1565b6100c861068a565b81801561017957600080fd5b506100c8610188366004610b45565b6106ae565b600081815260048301602052604090206060906101ac9060020161094e565b9392505050565b604051640312e302e360dc1b60208201526025015b6040516020818303038152906040528051906020012081565b6000828152600484016020526040812080546101fc90610bd4565b1580159150610223575060008381526004850160205260409020610223906002018361095f565b949350505050565b6000818152600483016020526040812060018101548154606093929160ff1690829061025690610bd4565b80601f016020809104026020016040519081016040528092919081815260200182805461028290610bd4565b80156102cf5780601f106102a4576101008083540402835291602001916102cf565b820191906000526020600020905b8154815290600101906020018083116102b257829003601f168201915b50505050509150915091509250929050565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190610c0e565b156103915760405162461bcd60e51b815260206004820152601760248201527614d85999535bd9194e8810d85b1b0814995a9958dd1959604a1b60448201526064015b60405180910390fd5b6040517304c4956454c595f47454e4552414c5f47524f55560641b60208201526034016040516020818303038152906040528051906020012083036105235760006103db30610977565b60008181526001878101602081815260408085206322df6f5b60e21b80875260028201845291862054958790529290915291015492935091600160a01b900460ff1680156104695750600160008481526001808a01602090815260408084206001600160e01b0319881685526002908101909252909220015460ff169081111561046757610467610c2b565b145b80156104975750600083815260018089016020908152604080842054845260038b01909152909120015460ff165b80156104cf575060013360009081526020898152604080832085845290915290205460ff1660028111156104cd576104cd610c2b565b145b61051b5760405162461bcd60e51b815260206004820152601c60248201527f53657447726f7570537461747573204163636573732044656e696564000000006044820152606401610388565b505050610601565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c69608561054730610977565b6040516001600160e01b031960e085901b168152610574929190339063b6c03f0360e01b90600401610c41565b602060405180830381865af4158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190610c0e565b6106015760405162461bcd60e51b815260206004820152601c60248201527f53657447726f7570537461747573204163636573732044656e696564000000006044820152606401610388565b60008381526004850160205260409020805461061c90610bd4565b905060000361065f5760405162461bcd60e51b815260206004820152600f60248201526e11dc9bdd5c08139bdd08119bdd5b99608a1b6044820152606401610388565b50600082815260048401602052604090206001908101805483151560ff199091161790559392505050565b6040516f1311dc9bdd5c13585b9859d95b595b9d60821b60208201526030016101c8565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190610c0e565b156107595760405162461bcd60e51b815260206004820152601760248201527614d85999535bd9194e8810d85b1b0814995a9958dd1959604a1b6044820152606401610388565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c69608661077d30610977565b6040516001600160e01b031960e085901b1681526107aa92919033906307e9933760e31b90600401610c41565b602060405180830381865af41580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb9190610c0e565b6108375760405162461bcd60e51b815260206004820152601b60248201527f526567697374657247726f7570204163636573732044656e69656400000000006044820152606401610388565b600083900361087d5760405162461bcd60e51b815260206004820152601260248201527111dc9bdd5c0813985b5948125b9d985b1a5960721b6044820152606401610388565b60008484604051602001610892929190610c6f565b60408051601f198184030181529181528151602092830120600081815260048a0190935291208054919250906108c790610bd4565b1590506109165760405162461bcd60e51b815260206004820152601860248201527f47726f757020416c7265616479205265676973746572656400000000000000006044820152606401610388565b6000818152600487016020526040902080610932868883610ce4565b50600101805484151560ff199091161790559050949350505050565b6060610959826109b6565b92915050565b600081815260018301602052604081205415156101ac565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610a0657602002820191906000526020600020905b8154815260200190600101908083116109f2575b50505050509050919050565b60008060408385031215610a2557600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015610a6c57835183529284019291840191600101610a50565b50909695505050505050565b600080600060608486031215610a8d57600080fd5b505081359360208301359350604090920135919050565b604081526000835180604084015260005b81811015610ad25760208187018101516060868401015201610ab5565b506000606082850101526060601f19601f83011684010191505082151560208301529392505050565b8015158114610b0957600080fd5b50565b600080600060608486031215610b2157600080fd5b83359250602084013591506040840135610b3a81610afb565b809150509250925092565b60008060008060608587031215610b5b57600080fd5b84359350602085013567ffffffffffffffff80821115610b7a57600080fd5b818701915087601f830112610b8e57600080fd5b813581811115610b9d57600080fd5b886020828501011115610baf57600080fd5b6020830195508094505050506040850135610bc981610afb565b939692955090935050565b600181811c90821680610be857607f821691505b602082108103610c0857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610c2057600080fd5b81516101ac81610afb565b634e487b7160e01b600052602160045260246000fd5b93845260208401929092526001600160a01b031660408301526001600160e01b031916606082015260800190565b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610cdf57600081815260208120601f850160051c81016020861015610cbc5750805b601f850160051c820191505b81811015610cdb57828155600101610cc8565b5050505b505050565b67ffffffffffffffff831115610cfc57610cfc610c7f565b610d1083610d0a8354610bd4565b83610c95565b6000601f841160018114610d445760008515610d2c5750838201355b600019600387901b1c1916600186901b178355610d9e565b600083815260209020601f19861690835b82811015610d755786850135825560209485019460019092019101610d55565b5086821015610d925760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212206b73688b28936bc826edd73b071732a6833581e6509cac8514cee191c111730064736f6c63430008110033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c80637678922e116100655780637678922e1461011a5780637c95bcdf14610145578063bec9475114610165578063f728a0f51461016d57600080fd5b806313ee7302146100975780632466209b146100c05780634ba84563146100d6578063745311f8146100f9575b600080fd5b6100aa6100a5366004610a12565b61018d565b6040516100b79190610a34565b60405180910390f35b6100c86101b3565b6040519081526020016100b7565b6100e96100e4366004610a78565b6101e1565b60405190151581526020016100b7565b61010c610107366004610a12565b61022b565b6040516100b7929190610aa4565b6040516001600160a01b0373__$c43b1d7058274a71a9734d16e6b6586431$__1681526020016100b7565b81801561015157600080fd5b506100e9610160366004610b0c565b6102e1565b6100c861068a565b81801561017957600080fd5b506100c8610188366004610b45565b6106ae565b600081815260048301602052604090206060906101ac9060020161094e565b9392505050565b604051640312e302e360dc1b60208201526025015b6040516020818303038152906040528051906020012081565b6000828152600484016020526040812080546101fc90610bd4565b1580159150610223575060008381526004850160205260409020610223906002018361095f565b949350505050565b6000818152600483016020526040812060018101548154606093929160ff1690829061025690610bd4565b80601f016020809104026020016040519081016040528092919081815260200182805461028290610bd4565b80156102cf5780601f106102a4576101008083540402835291602001916102cf565b820191906000526020600020905b8154815290600101906020018083116102b257829003601f168201915b50505050509150915091509250929050565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190610c0e565b156103915760405162461bcd60e51b815260206004820152601760248201527614d85999535bd9194e8810d85b1b0814995a9958dd1959604a1b60448201526064015b60405180910390fd5b6040517304c4956454c595f47454e4552414c5f47524f55560641b60208201526034016040516020818303038152906040528051906020012083036105235760006103db30610977565b60008181526001878101602081815260408085206322df6f5b60e21b80875260028201845291862054958790529290915291015492935091600160a01b900460ff1680156104695750600160008481526001808a01602090815260408084206001600160e01b0319881685526002908101909252909220015460ff169081111561046757610467610c2b565b145b80156104975750600083815260018089016020908152604080842054845260038b01909152909120015460ff165b80156104cf575060013360009081526020898152604080832085845290915290205460ff1660028111156104cd576104cd610c2b565b145b61051b5760405162461bcd60e51b815260206004820152601c60248201527f53657447726f7570537461747573204163636573732044656e696564000000006044820152606401610388565b505050610601565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c69608561054730610977565b6040516001600160e01b031960e085901b168152610574929190339063b6c03f0360e01b90600401610c41565b602060405180830381865af4158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190610c0e565b6106015760405162461bcd60e51b815260206004820152601c60248201527f53657447726f7570537461747573204163636573732044656e696564000000006044820152606401610388565b60008381526004850160205260409020805461061c90610bd4565b905060000361065f5760405162461bcd60e51b815260206004820152600f60248201526e11dc9bdd5c08139bdd08119bdd5b99608a1b6044820152606401610388565b50600082815260048401602052604090206001908101805483151560ff199091161790559392505050565b6040516f1311dc9bdd5c13585b9859d95b595b9d60821b60208201526030016101c8565b6000306001600160a01b031663be22465d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190610c0e565b156107595760405162461bcd60e51b815260206004820152601760248201527614d85999535bd9194e8810d85b1b0814995a9958dd1959604a1b6044820152606401610388565b73__$c43b1d7058274a71a9734d16e6b6586431$__63487c69608661077d30610977565b6040516001600160e01b031960e085901b1681526107aa92919033906307e9933760e31b90600401610c41565b602060405180830381865af41580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb9190610c0e565b6108375760405162461bcd60e51b815260206004820152601b60248201527f526567697374657247726f7570204163636573732044656e69656400000000006044820152606401610388565b600083900361087d5760405162461bcd60e51b815260206004820152601260248201527111dc9bdd5c0813985b5948125b9d985b1a5960721b6044820152606401610388565b60008484604051602001610892929190610c6f565b60408051601f198184030181529181528151602092830120600081815260048a0190935291208054919250906108c790610bd4565b1590506109165760405162461bcd60e51b815260206004820152601860248201527f47726f757020416c7265616479205265676973746572656400000000000000006044820152606401610388565b6000818152600487016020526040902080610932868883610ce4565b50600101805484151560ff199091161790559050949350505050565b6060610959826109b6565b92915050565b600081815260018301602052604081205415156101ac565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610a0657602002820191906000526020600020905b8154815260200190600101908083116109f2575b50505050509050919050565b60008060408385031215610a2557600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015610a6c57835183529284019291840191600101610a50565b50909695505050505050565b600080600060608486031215610a8d57600080fd5b505081359360208301359350604090920135919050565b604081526000835180604084015260005b81811015610ad25760208187018101516060868401015201610ab5565b506000606082850101526060601f19601f83011684010191505082151560208301529392505050565b8015158114610b0957600080fd5b50565b600080600060608486031215610b2157600080fd5b83359250602084013591506040840135610b3a81610afb565b809150509250925092565b60008060008060608587031215610b5b57600080fd5b84359350602085013567ffffffffffffffff80821115610b7a57600080fd5b818701915087601f830112610b8e57600080fd5b813581811115610b9d57600080fd5b886020828501011115610baf57600080fd5b6020830195508094505050506040850135610bc981610afb565b939692955090935050565b600181811c90821680610be857607f821691505b602082108103610c0857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610c2057600080fd5b81516101ac81610afb565b634e487b7160e01b600052602160045260246000fd5b93845260208401929092526001600160a01b031660408301526001600160e01b031916606082015260800190565b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610cdf57600081815260208120601f850160051c81016020861015610cbc5750805b601f850160051c820191505b81811015610cdb57828155600101610cc8565b5050505b505050565b67ffffffffffffffff831115610cfc57610cfc610c7f565b610d1083610d0a8354610bd4565b83610c95565b6000601f841160018114610d445760008515610d2c5750838201355b600019600387901b1c1916600186901b178355610d9e565b600083815260209020601f19861690835b82811015610d755786850135825560209485019460019092019101610d55565b5086821015610d925760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212206b73688b28936bc826edd73b071732a6833581e6509cac8514cee191c111730064736f6c63430008110033",
  "linkReferences": {
    "src/contracts/lib/acl/LAccessControl.sol": {
      "LAccessControl": [
        {
          "length": 20,
          "start": 353
        },
        {
          "length": 20,
          "start": 1375
        },
        {
          "length": 20,
          "start": 1941
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "src/contracts/lib/acl/LAccessControl.sol": {
      "LAccessControl": [
        {
          "length": 20,
          "start": 295
        },
        {
          "length": 20,
          "start": 1317
        },
        {
          "length": 20,
          "start": 1883
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {
        "src/contracts/lib/acl/LAccessControl.sol": {
          "LAccessControl": [
            {
              "length": 20,
              "start": 353
            },
            {
              "length": 20,
              "start": 1375
            },
            {
              "length": 20,
              "start": 1941
            }
          ]
        }
      },
      "opcodes": "PUSH2 0xDDB PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7678922E GT PUSH2 0x65 JUMPI DUP1 PUSH4 0x7678922E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x7C95BCDF EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xBEC94751 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF728A0F5 EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13EE7302 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2466209B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x4BA84563 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x745311F8 EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP3 SWAP2 SWAP1 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH20 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x68A JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x1AC SWAP1 PUSH1 0x2 ADD PUSH2 0x94E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1FC SWAP1 PUSH2 0xBD4 JUMP JUMPDEST ISZERO DUP1 ISZERO SWAP2 POP PUSH2 0x223 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x223 SWAP1 PUSH1 0x2 ADD DUP4 PUSH2 0x95F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x60 SWAP4 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP3 SWAP1 PUSH2 0x256 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE22465D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST ISZERO PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14D85999535BD9194E8810D85B1B0814995A9958DD1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 SUB PUSH2 0x523 JUMPI PUSH1 0x0 PUSH2 0x3DB ADDRESS PUSH2 0x977 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH4 0x22DF6F5B PUSH1 0xE2 SHL DUP1 DUP8 MSTORE PUSH1 0x2 DUP3 ADD DUP5 MSTORE SWAP2 DUP7 KECCAK256 SLOAD SWAP6 DUP8 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x469 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 DUP11 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x467 JUMPI PUSH2 0x467 PUSH2 0xC2B JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP12 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0xC2B JUMP JUMPDEST EQ JUMPDEST PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53657447726F7570537461747573204163636573732044656E69656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST POP POP POP PUSH2 0x601 JUMP JUMPDEST PUSH20 0x0 PUSH4 0x487C6960 DUP6 PUSH2 0x547 ADDRESS PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x574 SWAP3 SWAP2 SWAP1 CALLER SWAP1 PUSH4 0xB6C03F03 PUSH1 0xE0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x591 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53657447726F7570537461747573204163636573732044656E69656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x61C SWAP1 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x11DC9BDD5C08139BDD08119BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH16 0x1311DC9BDD5C13585B9859D95B595B9D PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x30 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE22465D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x712 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST ISZERO PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14D85999535BD9194E8810D85B1B0814995A9958DD1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH20 0x0 PUSH4 0x487C6960 DUP7 PUSH2 0x77D ADDRESS PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x7AA SWAP3 SWAP2 SWAP1 CALLER SWAP1 PUSH4 0x7E99337 PUSH1 0xE3 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374657247726F7570204163636573732044656E6965640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11DC9BDD5C0813985B5948125B9D985B1A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x892 SWAP3 SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP11 ADD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x8C7 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47726F757020416C726561647920526567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 PUSH2 0x932 DUP7 DUP9 DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD DUP5 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x959 DUP3 PUSH2 0x9B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA06 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9F2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA6C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA50 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xAB5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xB3A DUP2 PUSH2 0xAFB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 POP DUP1 SWAP5 POP POP POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xBC9 DUP2 PUSH2 0xAFB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xBE8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1AC DUP2 PUSH2 0xAFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xCBC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCC8 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFC PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xD10 DUP4 PUSH2 0xD0A DUP4 SLOAD PUSH2 0xBD4 JUMP JUMPDEST DUP4 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD44 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0xD2C JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD75 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xD55 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x73688B28936BC826EDD73B07 OR ORIGIN 0xA6 DUP4 CALLDATALOAD DUP2 0xE6 POP SWAP13 0xAC DUP6 EQ 0xCE 0xE1 SWAP2 0xC1 GT PUSH20 0x64736F6C634300081100330000000000000000 ",
      "sourceMap": "245:3137:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;245:3137:20;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@LIB_NAME_15821": {
          "entryPoint": 1674,
          "id": 15821,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@LIB_VERSION_15829": {
          "entryPoint": 435,
          "id": 15829,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_contains_23527": {
          "entryPoint": null,
          "id": 23527,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@_values_23572": {
          "entryPoint": 2486,
          "id": 23572,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@contains_23630": {
          "entryPoint": 2399,
          "id": 23630,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@generateCtx_11337": {
          "entryPoint": 2423,
          "id": 11337,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getGroupInfo_16143": {
          "entryPoint": 555,
          "id": 16143,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "@getGroupRoles_16163": {
          "entryPoint": 397,
          "id": 16163,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@getLibrary_16174": {
          "entryPoint": null,
          "id": 16174,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@hasGroupRole_16118": {
          "entryPoint": 481,
          "id": 16118,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@registerGroup_15934": {
          "entryPoint": 1710,
          "id": 15934,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "@setGroupStatus_16084": {
          "entryPoint": 737,
          "id": 16084,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@values_23679": {
          "entryPoint": 2382,
          "id": 23679,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 3086,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32": {
          "entryPoint": 2578,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32t_bool": {
          "entryPoint": 2828,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32t_bytes32": {
          "entryPoint": 2680,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_string_calldata_ptrt_bool": {
          "entryPoint": 2885,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 3183,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_stringliteral_facfe3a836b8da93909855ce96d044c07f603d2cd6b21ac9ee7f4ec223c71bad__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed": {
          "entryPoint": 2612,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_library_reversed": {
          "entryPoint": 2724,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_604680a11c7cfd9761104e5a80e077fcacfd56f1b2eb5688a405895a1f1d9352__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_623ca22438b7e63cf751f5695054a014ba5be645e2c34f5587f83a8d5fdc180a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_965c0a4d0a7bb3293b874ae7b5d8096228ffd5cad1ff7d3174076844258236b5__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_ca4c5458764dbfae8cb2f02d35b4cc270e11a5bbeb5064172509a7e047c90dc8__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_d2cfdc489448cdcbb4af0483f9a19686c950133ed5508983f3178c4eee112762__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_d7151ee8c6297cbfba313020000d136579003427e7632d0e43cacd657afc786c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_struct$_DataMaps_$9701_storage_ptr_t_bytes32_t_address_t_bytes4__to_t_uint256_t_bytes32_t_address_t_bytes4__fromStack_library_reversed": {
          "entryPoint": 3137,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "array_dataslot_string_storage": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "clean_up_bytearray_end_slots_string_storage": {
          "entryPoint": 3221,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
          "entryPoint": 3300,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "extract_byte_array_length": {
          "entryPoint": 3028,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "extract_used_part_and_set_length_of_short_byte_array": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x21": {
          "entryPoint": 3115,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 3199,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_bool": {
          "entryPoint": 2811,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:10738:75",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:75",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "128:161:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "174:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "183:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "186:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "176:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "176:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "176:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "149:7:75"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "158:9:75"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "145:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "145:23:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "170:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "141:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "141:32:75"
                      },
                      "nodeType": "YulIf",
                      "src": "138:52:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "199:33:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "222:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "209:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:23:75"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "199:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "241:42:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "268:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "279:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "264:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "264:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "251:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "251:32:75"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "241:6:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "86:9:75",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "97:7:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "109:6:75",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "117:6:75",
                    "type": ""
                  }
                ],
                "src": "14:275:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "453:481:75",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "463:12:75",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "473:2:75",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "467:2:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "484:32:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "502:9:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "513:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "498:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "498:18:75"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "488:6:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "532:9:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "543:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "525:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "525:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "525:21:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "555:17:75",
                      "value": {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "566:6:75"
                      },
                      "variables": [
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "559:3:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "581:27:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "601:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "595:5:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "595:13:75"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "585:6:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "624:6:75"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "632:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "617:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "617:22:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "617:22:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "648:25:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "659:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "670:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "655:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "655:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "682:29:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "700:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "708:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "696:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "696:15:75"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "686:6:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "720:10:75",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "729:1:75",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "724:1:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "788:120:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "809:3:75"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "820:6:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "814:5:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "814:13:75"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "802:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "802:26:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "802:26:75"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "841:19:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "852:3:75"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "857:2:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "848:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "848:12:75"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "841:3:75"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "873:25:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "887:6:75"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "895:2:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "883:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "883:15:75"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "873:6:75"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "750:1:75"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "753:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "747:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "747:13:75"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "761:18:75",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "763:14:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "772:1:75"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "775:1:75",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "768:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "768:9:75"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "763:1:75"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "743:3:75",
                        "statements": []
                      },
                      "src": "739:169:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "917:11:75",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "925:3:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "917:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "422:9:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "433:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "444:4:75",
                    "type": ""
                  }
                ],
                "src": "294:640:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1048:76:75",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1058:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1070:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1081:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1066:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1058:4:75"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1100:9:75"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1111:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1093:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:25:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1093:25:75"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1017:9:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1028:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1039:4:75",
                    "type": ""
                  }
                ],
                "src": "939:185:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1260:212:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1306:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1315:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1318:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1308:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1308:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1308:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1281:7:75"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1290:9:75"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1277:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1277:23:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1302:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1273:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1273:32:75"
                      },
                      "nodeType": "YulIf",
                      "src": "1270:52:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1331:33:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1354:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1341:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1341:23:75"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1331:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1373:42:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1400:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1411:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1396:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1396:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1383:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1383:32:75"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1373:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1424:42:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1451:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1462:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1447:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1447:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1434:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1434:32:75"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1424:6:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32t_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1210:9:75",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1221:7:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1233:6:75",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1241:6:75",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1249:6:75",
                    "type": ""
                  }
                ],
                "src": "1129:343:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1580:92:75",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1590:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1602:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1613:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1598:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1598:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1590:4:75"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1632:9:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1657:6:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1650:6:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1650:14:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1643:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1643:22:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1625:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1625:41:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1625:41:75"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1549:9:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1560:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1571:4:75",
                    "type": ""
                  }
                ],
                "src": "1477:195:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1828:471:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1845:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1856:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1838:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1838:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1838:21:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1868:27:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1888:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1882:5:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1882:13:75"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1872:6:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1915:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1926:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1911:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1911:18:75"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1931:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1904:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1904:34:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1904:34:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1947:10:75",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1956:1:75",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "1951:1:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2018:92:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "2047:9:75"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2058:1:75"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2043:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2043:17:75"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2062:2:75",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2039:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2039:26:75"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "2081:6:75"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2089:1:75"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2077:3:75"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2077:14:75"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2093:4:75",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2073:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2073:25:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2067:5:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2067:32:75"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2032:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2032:68:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2032:68:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1977:1:75"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1980:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1974:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:13:75"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "1988:21:75",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "1990:17:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1999:1:75"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2002:4:75",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1995:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1995:12:75"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "1990:1:75"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "1970:3:75",
                        "statements": []
                      },
                      "src": "1966:144:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2134:9:75"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2145:6:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2130:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2130:22:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2154:2:75",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2126:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2126:31:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2159:1:75",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2119:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2119:42:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2119:42:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2170:62:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2186:9:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2205:6:75"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2213:2:75",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2201:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2201:15:75"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2222:2:75",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2218:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2218:7:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2197:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2197:29:75"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2182:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2182:45:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2229:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2178:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2178:54:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2170:4:75"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2252:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2263:4:75",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2248:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2248:20:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2284:6:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2277:6:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2277:14:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2270:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2270:22:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2241:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2241:52:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2241:52:75"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1789:9:75",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1800:6:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1808:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1819:4:75",
                    "type": ""
                  }
                ],
                "src": "1677:622:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2413:102:75",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2423:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2435:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2446:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2431:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2431:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2423:4:75"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2465:9:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2480:6:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2496:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2501:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2492:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2492:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2505:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2488:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2488:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2476:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2476:32:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2458:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2458:51:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2458:51:75"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2382:9:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2393:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2404:4:75",
                    "type": ""
                  }
                ],
                "src": "2304:211:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2562:76:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2616:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2625:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2628:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2618:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2618:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2618:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2585:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2606:5:75"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2599:6:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2599:13:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2592:6:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2592:21:75"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2582:2:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2582:32:75"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2575:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2575:40:75"
                      },
                      "nodeType": "YulIf",
                      "src": "2572:60:75"
                    }
                  ]
                },
                "name": "validator_revert_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "2551:5:75",
                    "type": ""
                  }
                ],
                "src": "2520:118:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2771:276:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2817:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2826:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2829:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2819:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2819:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2819:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2792:7:75"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2801:9:75"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2788:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2788:23:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2813:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2784:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2784:32:75"
                      },
                      "nodeType": "YulIf",
                      "src": "2781:52:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2842:33:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2865:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2852:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:23:75"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2842:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2884:42:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2911:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2922:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2907:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2907:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2894:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2894:32:75"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2884:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2935:45:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2965:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2976:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2961:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2961:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2948:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2948:32:75"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2939:5:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3011:5:75"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2989:21:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2989:28:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2989:28:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3026:15:75",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3036:5:75"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3026:6:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32t_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2721:9:75",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2732:7:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2744:6:75",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2752:6:75",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2760:6:75",
                    "type": ""
                  }
                ],
                "src": "2643:404:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3200:668:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3246:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3255:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3258:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3248:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3248:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3248:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3221:7:75"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3230:9:75"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3217:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3217:23:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3242:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3213:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3213:32:75"
                      },
                      "nodeType": "YulIf",
                      "src": "3210:52:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3271:33:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3294:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3281:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3281:23:75"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3271:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3313:46:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3344:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3355:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3340:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3340:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3327:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3327:32:75"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3317:6:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3368:28:75",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3378:18:75",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3372:2:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3423:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3432:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3435:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3425:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3425:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3425:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3411:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3419:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3408:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3408:14:75"
                      },
                      "nodeType": "YulIf",
                      "src": "3405:34:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3448:32:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3462:9:75"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3473:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3458:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3458:22:75"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "3452:2:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3528:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3537:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3540:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3530:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3530:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3530:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3507:2:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3511:4:75",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3503:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3503:13:75"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3518:7:75"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3499:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3499:27:75"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3492:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3492:35:75"
                      },
                      "nodeType": "YulIf",
                      "src": "3489:55:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3553:30:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3580:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3567:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3567:16:75"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "3557:6:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3610:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3619:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3622:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3612:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3612:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3612:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3598:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3606:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3595:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3595:14:75"
                      },
                      "nodeType": "YulIf",
                      "src": "3592:34:75"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3676:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3685:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3688:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3678:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3678:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3678:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3649:2:75"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3653:6:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3645:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3645:15:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3662:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3641:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3641:24:75"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3667:7:75"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3638:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3638:37:75"
                      },
                      "nodeType": "YulIf",
                      "src": "3635:57:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3701:21:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3715:2:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3719:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3711:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3711:11:75"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3701:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3731:16:75",
                      "value": {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3741:6:75"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3731:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3756:45:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3786:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3797:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3782:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3782:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3769:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3769:32:75"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3760:5:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3832:5:75"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3810:21:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3810:28:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3810:28:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3847:15:75",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3857:5:75"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3847:6:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_string_calldata_ptrt_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3142:9:75",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3153:7:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3165:6:75",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3173:6:75",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "3181:6:75",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "3189:6:75",
                    "type": ""
                  }
                ],
                "src": "3052:816:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4065:63:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4082:3:75"
                          },
                          {
                            "hexValue": "312e302e30",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4087:7:75",
                            "type": "",
                            "value": "1.0.0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4075:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4075:20:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4075:20:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4104:18:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4115:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4120:1:75",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4111:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4111:11:75"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4104:3:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4049:3:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4057:3:75",
                    "type": ""
                  }
                ],
                "src": "3873:255:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4188:325:75",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4198:22:75",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4212:1:75",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "4215:4:75"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "4208:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4208:12:75"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "4198:6:75"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4229:38:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "4259:4:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4265:1:75",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4255:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4255:12:75"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "4233:18:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4306:31:75",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4308:27:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4322:6:75"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4330:4:75",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4318:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4318:17:75"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4308:6:75"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "4286:18:75"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4279:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4279:26:75"
                      },
                      "nodeType": "YulIf",
                      "src": "4276:61:75"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4396:111:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4417:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4424:3:75",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4429:10:75",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "4420:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4420:20:75"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4410:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4410:31:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4410:31:75"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4461:1:75",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4464:4:75",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4454:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4454:15:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4454:15:75"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4489:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4492:4:75",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4482:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4482:15:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4482:15:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "4352:18:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4375:6:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4383:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4372:2:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4372:14:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4349:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:38:75"
                      },
                      "nodeType": "YulIf",
                      "src": "4346:161:75"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "4168:4:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "4177:6:75",
                    "type": ""
                  }
                ],
                "src": "4133:380:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4596:167:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4642:16:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4651:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4654:1:75",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4644:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4644:12:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4644:12:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4617:7:75"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4626:9:75"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4613:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4613:23:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4638:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4609:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4609:32:75"
                      },
                      "nodeType": "YulIf",
                      "src": "4606:52:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4667:29:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4686:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4680:5:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4680:16:75"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "4671:5:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4727:5:75"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4705:21:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4705:28:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4705:28:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4742:15:75",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4752:5:75"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4742:6:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4562:9:75",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4573:7:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4585:6:75",
                    "type": ""
                  }
                ],
                "src": "4518:245:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4942:173:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4959:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4970:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4952:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4952:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4952:21:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4993:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5004:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4989:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4989:18:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5009:2:75",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4982:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:30:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4982:30:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5032:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5043:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5028:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5028:18:75"
                          },
                          {
                            "hexValue": "536166654d6f64653a2043616c6c2052656a6563746564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5048:25:75",
                            "type": "",
                            "value": "SafeMode: Call Rejected"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5021:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5021:53:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5021:53:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5083:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5095:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5106:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5091:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5091:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5083:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_d2cfdc489448cdcbb4af0483f9a19686c950133ed5508983f3178c4eee112762__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4919:9:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4933:4:75",
                    "type": ""
                  }
                ],
                "src": "4768:347:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5312:79:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5329:3:75"
                          },
                          {
                            "hexValue": "4c4956454c595f47454e4552414c5f47524f5550",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5334:22:75",
                            "type": "",
                            "value": "LIVELY_GENERAL_GROUP"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5322:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5322:35:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5322:35:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5366:19:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5377:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5382:2:75",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5373:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5373:12:75"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5366:3:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5296:3:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5304:3:75",
                    "type": ""
                  }
                ],
                "src": "5120:271:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5428:95:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5445:1:75",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5452:3:75",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5457:10:75",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5448:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5448:20:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5438:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5438:31:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5438:31:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5485:1:75",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5488:4:75",
                            "type": "",
                            "value": "0x21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5478:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5478:15:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5478:15:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5509:1:75",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5512:4:75",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5502:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5502:15:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5502:15:75"
                    }
                  ]
                },
                "name": "panic_error_0x21",
                "nodeType": "YulFunctionDefinition",
                "src": "5396:127:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5702:178:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5719:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5730:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5712:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5712:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5712:21:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5753:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5764:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5749:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5749:18:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5769:2:75",
                            "type": "",
                            "value": "28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5742:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5742:30:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5742:30:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5792:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5803:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5788:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5788:18:75"
                          },
                          {
                            "hexValue": "53657447726f7570537461747573204163636573732044656e696564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5808:30:75",
                            "type": "",
                            "value": "SetGroupStatus Access Denied"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5781:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5781:58:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5781:58:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5848:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5860:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5871:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5856:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5856:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5848:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_d7151ee8c6297cbfba313020000d136579003427e7632d0e43cacd657afc786c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5679:9:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5693:4:75",
                    "type": ""
                  }
                ],
                "src": "5528:352:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6103:259:75",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6113:27:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6125:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6136:3:75",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6121:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6121:19:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6113:4:75"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6156:9:75"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6167:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6149:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6149:25:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6149:25:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6194:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6205:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6190:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6190:18:75"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6210:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6183:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6183:34:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6183:34:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6237:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6248:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6233:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6233:18:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "6257:6:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6273:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6278:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6269:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6269:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6282:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6265:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6265:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6253:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6253:32:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6226:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6226:60:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6226:60:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6306:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6317:2:75",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6302:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6302:18:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "6326:6:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6338:3:75",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6343:10:75",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6334:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6334:20:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6322:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6322:33:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6295:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6295:61:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6295:61:75"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_struct$_DataMaps_$9701_storage_ptr_t_bytes32_t_address_t_bytes4__to_t_uint256_t_bytes32_t_address_t_bytes4__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6048:9:75",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "6059:6:75",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "6067:6:75",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6075:6:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6083:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6094:4:75",
                    "type": ""
                  }
                ],
                "src": "5885:477:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6541:165:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6558:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6569:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6551:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6551:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6551:21:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6592:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6603:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6588:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6588:18:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6608:2:75",
                            "type": "",
                            "value": "15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6581:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6581:30:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6581:30:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6631:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6642:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6627:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6627:18:75"
                          },
                          {
                            "hexValue": "47726f7570204e6f7420466f756e64",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6647:17:75",
                            "type": "",
                            "value": "Group Not Found"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6620:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6620:45:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6620:45:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6674:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6686:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6697:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6682:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6682:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6674:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_623ca22438b7e63cf751f5695054a014ba5be645e2c34f5587f83a8d5fdc180a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6518:9:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6532:4:75",
                    "type": ""
                  }
                ],
                "src": "6367:339:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6903:75:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6920:3:75"
                          },
                          {
                            "hexValue": "4c47726f75704d616e6167656d656e74",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6925:18:75",
                            "type": "",
                            "value": "LGroupManagement"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6913:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6913:31:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6913:31:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6953:19:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6964:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6969:2:75",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6960:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6960:12:75"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "6953:3:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_stringliteral_facfe3a836b8da93909855ce96d044c07f603d2cd6b21ac9ee7f4ec223c71bad__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "6887:3:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "6895:3:75",
                    "type": ""
                  }
                ],
                "src": "6711:267:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7157:177:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7174:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7185:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7167:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7167:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7167:21:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7208:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7219:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7204:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7204:18:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7224:2:75",
                            "type": "",
                            "value": "27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7197:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7197:30:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7197:30:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7247:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7258:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7243:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7243:18:75"
                          },
                          {
                            "hexValue": "526567697374657247726f7570204163636573732044656e696564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7263:29:75",
                            "type": "",
                            "value": "RegisterGroup Access Denied"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7236:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7236:57:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7236:57:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7302:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7314:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7325:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7310:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7310:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7302:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_ca4c5458764dbfae8cb2f02d35b4cc270e11a5bbeb5064172509a7e047c90dc8__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7134:9:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7148:4:75",
                    "type": ""
                  }
                ],
                "src": "6983:351:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7513:168:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7530:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7541:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7523:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7523:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7523:21:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7564:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7575:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7560:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7560:18:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7580:2:75",
                            "type": "",
                            "value": "18"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7553:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7553:30:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7553:30:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7603:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7614:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7599:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7599:18:75"
                          },
                          {
                            "hexValue": "47726f7570204e616d6520496e76616c6964",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7619:20:75",
                            "type": "",
                            "value": "Group Name Invalid"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7592:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7592:48:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7592:48:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7649:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7661:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7672:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7657:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7657:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7649:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_965c0a4d0a7bb3293b874ae7b5d8096228ffd5cad1ff7d3174076844258236b5__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7490:9:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7504:4:75",
                    "type": ""
                  }
                ],
                "src": "7339:342:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7835:124:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7858:3:75"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7863:6:75"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7871:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "7845:12:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7845:33:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7845:33:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7887:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7901:3:75"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7906:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7897:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7897:16:75"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "7891:2:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7929:2:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7933:1:75",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7922:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7922:13:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7922:13:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7944:9:75",
                      "value": {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7951:2:75"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "7944:3:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "7803:3:75",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7808:6:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7816:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "7827:3:75",
                    "type": ""
                  }
                ],
                "src": "7686:273:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8138:174:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8155:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8166:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8148:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8148:21:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8148:21:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8189:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8200:2:75",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8185:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8185:18:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8205:2:75",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8178:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8178:30:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8178:30:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8228:9:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8239:2:75",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8224:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8224:18:75"
                          },
                          {
                            "hexValue": "47726f757020416c72656164792052656769737465726564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8244:26:75",
                            "type": "",
                            "value": "Group Already Registered"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8217:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8217:54:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8217:54:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8280:26:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8292:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8303:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8288:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8288:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8280:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_604680a11c7cfd9761104e5a80e077fcacfd56f1b2eb5688a405895a1f1d9352__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8115:9:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8129:4:75",
                    "type": ""
                  }
                ],
                "src": "7964:348:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8349:95:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8366:1:75",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8373:3:75",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8378:10:75",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8369:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8369:20:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8359:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8359:31:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8359:31:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8406:1:75",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8409:4:75",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8399:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8399:15:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8399:15:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8430:1:75",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8433:4:75",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "8423:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8423:15:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8423:15:75"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "8317:127:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8505:65:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8522:1:75",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulIdentifier",
                            "src": "8525:3:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8515:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8515:14:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8515:14:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8538:26:75",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8556:1:75",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8559:4:75",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "keccak256",
                          "nodeType": "YulIdentifier",
                          "src": "8546:9:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8546:18:75"
                      },
                      "variableNames": [
                        {
                          "name": "data",
                          "nodeType": "YulIdentifier",
                          "src": "8538:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "array_dataslot_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "ptr",
                    "nodeType": "YulTypedName",
                    "src": "8488:3:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "8496:4:75",
                    "type": ""
                  }
                ],
                "src": "8449:121:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8656:464:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8689:425:75",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8703:11:75",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8713:1:75",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "8707:2:75",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8734:2:75"
                                },
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "8738:5:75"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "8727:6:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8727:17:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8727:17:75"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8757:31:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8779:2:75"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8783:4:75",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "keccak256",
                                "nodeType": "YulIdentifier",
                                "src": "8769:9:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8769:19:75"
                            },
                            "variables": [
                              {
                                "name": "data",
                                "nodeType": "YulTypedName",
                                "src": "8761:4:75",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8801:57:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8824:4:75"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8834:1:75",
                                      "type": "",
                                      "value": "5"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "8841:10:75"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8853:2:75",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8837:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8837:19:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8830:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8830:27:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8820:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8820:38:75"
                            },
                            "variables": [
                              {
                                "name": "deleteStart",
                                "nodeType": "YulTypedName",
                                "src": "8805:11:75",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "8895:23:75",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8897:19:75",
                                  "value": {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "8912:4:75"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "8897:11:75"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "startIndex",
                                  "nodeType": "YulIdentifier",
                                  "src": "8877:10:75"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8889:4:75",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "8874:2:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8874:20:75"
                            },
                            "nodeType": "YulIf",
                            "src": "8871:47:75"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8931:41:75",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8945:4:75"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8955:1:75",
                                      "type": "",
                                      "value": "5"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "len",
                                          "nodeType": "YulIdentifier",
                                          "src": "8962:3:75"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8967:2:75",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8958:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8958:12:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8951:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8951:20:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8941:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8941:31:75"
                            },
                            "variables": [
                              {
                                "name": "_2",
                                "nodeType": "YulTypedName",
                                "src": "8935:2:75",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8985:24:75",
                            "value": {
                              "name": "deleteStart",
                              "nodeType": "YulIdentifier",
                              "src": "8998:11:75"
                            },
                            "variables": [
                              {
                                "name": "start",
                                "nodeType": "YulTypedName",
                                "src": "8989:5:75",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9083:21:75",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "9092:5:75"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9099:2:75"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "9085:6:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9085:17:75"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9085:17:75"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "9033:5:75"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "9040:2:75"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "9030:2:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9030:13:75"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "9044:26:75",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9046:22:75",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "9059:5:75"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9066:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9055:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9055:13:75"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "9046:5:75"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "9026:3:75",
                              "statements": []
                            },
                            "src": "9022:82:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "8672:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8677:2:75",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8669:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8669:11:75"
                      },
                      "nodeType": "YulIf",
                      "src": "8666:448:75"
                    }
                  ]
                },
                "name": "clean_up_bytearray_end_slots_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "8628:5:75",
                    "type": ""
                  },
                  {
                    "name": "len",
                    "nodeType": "YulTypedName",
                    "src": "8635:3:75",
                    "type": ""
                  },
                  {
                    "name": "startIndex",
                    "nodeType": "YulTypedName",
                    "src": "8640:10:75",
                    "type": ""
                  }
                ],
                "src": "8575:545:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9210:81:75",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "9220:65:75",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "9235:4:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9253:1:75",
                                            "type": "",
                                            "value": "3"
                                          },
                                          {
                                            "name": "len",
                                            "nodeType": "YulIdentifier",
                                            "src": "9256:3:75"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "9249:3:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9249:11:75"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9266:1:75",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "9262:3:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9262:6:75"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9245:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9245:24:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9241:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9241:29:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9231:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9231:40:75"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9277:1:75",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "len",
                                "nodeType": "YulIdentifier",
                                "src": "9280:3:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9273:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9273:11:75"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "9228:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9228:57:75"
                      },
                      "variableNames": [
                        {
                          "name": "used",
                          "nodeType": "YulIdentifier",
                          "src": "9220:4:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "extract_used_part_and_set_length_of_short_byte_array",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "9187:4:75",
                    "type": ""
                  },
                  {
                    "name": "len",
                    "nodeType": "YulTypedName",
                    "src": "9193:3:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "used",
                    "nodeType": "YulTypedName",
                    "src": "9201:4:75",
                    "type": ""
                  }
                ],
                "src": "9125:166:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9399:1103:75",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9440:22:75",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "9442:16:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9442:18:75"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9442:18:75"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "9415:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9420:18:75",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9412:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9412:27:75"
                      },
                      "nodeType": "YulIf",
                      "src": "9409:53:75"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "slot",
                            "nodeType": "YulIdentifier",
                            "src": "9515:4:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "9553:4:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9547:5:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9547:11:75"
                              }
                            ],
                            "functionName": {
                              "name": "extract_byte_array_length",
                              "nodeType": "YulIdentifier",
                              "src": "9521:25:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9521:38:75"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "9561:3:75"
                          }
                        ],
                        "functionName": {
                          "name": "clean_up_bytearray_end_slots_string_storage",
                          "nodeType": "YulIdentifier",
                          "src": "9471:43:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9471:94:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9471:94:75"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9574:18:75",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9591:1:75",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "srcOffset",
                          "nodeType": "YulTypedName",
                          "src": "9578:9:75",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "cases": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9635:609:75",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "9649:32:75",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "9668:3:75"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9677:2:75",
                                          "type": "",
                                          "value": "31"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "9673:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9673:7:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "9664:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9664:17:75"
                                },
                                "variables": [
                                  {
                                    "name": "loopEnd",
                                    "nodeType": "YulTypedName",
                                    "src": "9653:7:75",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "9694:49:75",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "9738:4:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_string_storage",
                                    "nodeType": "YulIdentifier",
                                    "src": "9708:29:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9708:35:75"
                                },
                                "variables": [
                                  {
                                    "name": "dstPtr",
                                    "nodeType": "YulTypedName",
                                    "src": "9698:6:75",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "9756:18:75",
                                "value": {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "9765:9:75"
                                },
                                "variables": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulTypedName",
                                    "src": "9760:1:75",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "9844:172:75",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "9869:6:75"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9894:3:75"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9899:9:75"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9890:3:75"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "9890:19:75"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "calldataload",
                                              "nodeType": "YulIdentifier",
                                              "src": "9877:12:75"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9877:33:75"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "9862:6:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9862:49:75"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "9862:49:75"
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "9928:24:75",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "9942:6:75"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9950:1:75",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9938:3:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9938:14:75"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "dstPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "9928:6:75"
                                        }
                                      ]
                                    },
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "9969:33:75",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9986:9:75"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9997:4:75",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9982:3:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9982:20:75"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "srcOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "9969:9:75"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9798:1:75"
                                    },
                                    {
                                      "name": "loopEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "9801:7:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "9795:2:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9795:14:75"
                                },
                                "nodeType": "YulForLoop",
                                "post": {
                                  "nodeType": "YulBlock",
                                  "src": "9810:21:75",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "9812:17:75",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "9821:1:75"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9824:4:75",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9817:3:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9817:12:75"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "9812:1:75"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "pre": {
                                  "nodeType": "YulBlock",
                                  "src": "9791:3:75",
                                  "statements": []
                                },
                                "src": "9787:229:75"
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "10061:127:75",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "10086:6:75"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10115:3:75"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "10120:9:75"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10111:3:75"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10111:19:75"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "calldataload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10098:12:75"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10098:33:75"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "kind": "number",
                                                                "nodeType": "YulLiteral",
                                                                "src": "10149:1:75",
                                                                "type": "",
                                                                "value": "3"
                                                              },
                                                              {
                                                                "name": "len",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "10152:3:75"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shl",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "10145:3:75"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "10145:11:75"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "10158:3:75",
                                                            "type": "",
                                                            "value": "248"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "and",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "10141:3:75"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "10141:21:75"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "10168:1:75",
                                                            "type": "",
                                                            "value": "0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "10164:3:75"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "10164:6:75"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "shr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10137:3:75"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10137:34:75"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10133:3:75"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10133:39:75"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "10094:3:75"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10094:79:75"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "10079:6:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10079:95:75"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "10079:95:75"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "loopEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "10035:7:75"
                                    },
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "10044:3:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "10032:2:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10032:16:75"
                                },
                                "nodeType": "YulIf",
                                "src": "10029:159:75"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "10208:4:75"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10222:1:75",
                                              "type": "",
                                              "value": "1"
                                            },
                                            {
                                              "name": "len",
                                              "nodeType": "YulIdentifier",
                                              "src": "10225:3:75"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "10218:3:75"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10218:11:75"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10231:1:75",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10214:3:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10214:19:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10201:6:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10201:33:75"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10201:33:75"
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "9628:616:75",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9633:1:75",
                            "type": "",
                            "value": "1"
                          }
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10261:235:75",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "10275:14:75",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10288:1:75",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulTypedName",
                                    "src": "10279:5:75",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "10321:74:75",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "10339:42:75",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "10365:3:75"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "10370:9:75"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "10361:3:75"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10361:19:75"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "calldataload",
                                          "nodeType": "YulIdentifier",
                                          "src": "10348:12:75"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10348:33:75"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "10339:5:75"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "name": "len",
                                  "nodeType": "YulIdentifier",
                                  "src": "10305:3:75"
                                },
                                "nodeType": "YulIf",
                                "src": "10302:93:75"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "10415:4:75"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "10474:5:75"
                                        },
                                        {
                                          "name": "len",
                                          "nodeType": "YulIdentifier",
                                          "src": "10481:3:75"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                                        "nodeType": "YulIdentifier",
                                        "src": "10421:52:75"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10421:64:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10408:6:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10408:78:75"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10408:78:75"
                              }
                            ]
                          },
                          "nodeType": "YulCase",
                          "src": "10253:243:75",
                          "value": "default"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "9611:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9616:2:75",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9608:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9608:11:75"
                      },
                      "nodeType": "YulSwitch",
                      "src": "9601:895:75"
                    }
                  ]
                },
                "name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "slot",
                    "nodeType": "YulTypedName",
                    "src": "9379:4:75",
                    "type": ""
                  },
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "9385:3:75",
                    "type": ""
                  },
                  {
                    "name": "len",
                    "nodeType": "YulTypedName",
                    "src": "9390:3:75",
                    "type": ""
                  }
                ],
                "src": "9296:1206:75"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10626:110:75",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10643:3:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10656:2:75",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10660:6:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10652:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10652:15:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10673:26:75",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10669:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10669:31:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10648:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10648:53:75"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10636:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10636:66:75"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10636:66:75"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10711:19:75",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10722:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10727:2:75",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10718:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10718:12:75"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "10711:3:75"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "10602:3:75",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "10607:6:75",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "10618:3:75",
                    "type": ""
                  }
                ],
                "src": "10507:229:75"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value0, i), 0x20)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_bytes32t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_struct$_DataMaps_$9701_storage_ptrt_string_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value3 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"1.0.0\")\n        end := add(pos, 5)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d2cfdc489448cdcbb4af0483f9a19686c950133ed5508983f3178c4eee112762__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"SafeMode: Call Rejected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_48117d1cd940f65967837dae78ce33f9f42297a05714bbdb122e1eb03d980ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LIVELY_GENERAL_GROUP\")\n        end := add(pos, 20)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_d7151ee8c6297cbfba313020000d136579003427e7632d0e43cacd657afc786c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"SetGroupStatus Access Denied\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_DataMaps_$9701_storage_ptr_t_bytes32_t_address_t_bytes4__to_t_uint256_t_bytes32_t_address_t_bytes4__fromStack_library_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_stringliteral_623ca22438b7e63cf751f5695054a014ba5be645e2c34f5587f83a8d5fdc180a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Group Not Found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_facfe3a836b8da93909855ce96d044c07f603d2cd6b21ac9ee7f4ec223c71bad__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"LGroupManagement\")\n        end := add(pos, 16)\n    }\n    function abi_encode_tuple_t_stringliteral_ca4c5458764dbfae8cb2f02d35b4cc270e11a5bbeb5064172509a7e047c90dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"RegisterGroup Access Denied\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_965c0a4d0a7bb3293b874ae7b5d8096228ffd5cad1ff7d3174076844258236b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Group Name Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_604680a11c7cfd9761104e5a80e077fcacfd56f1b2eb5688a405895a1f1d9352__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Group Already Registered\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n}",
          "id": 75,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {
        "src/contracts/lib/acl/LAccessControl.sol": {
          "LAccessControl": [
            {
              "length": 20,
              "start": 295
            },
            {
              "length": 20,
              "start": 1317
            },
            {
              "length": 20,
              "start": 1883
            }
          ]
        }
      },
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7678922E GT PUSH2 0x65 JUMPI DUP1 PUSH4 0x7678922E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x7C95BCDF EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xBEC94751 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xF728A0F5 EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13EE7302 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2466209B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x4BA84563 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x745311F8 EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP3 SWAP2 SWAP1 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH20 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x68A JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x1AC SWAP1 PUSH1 0x2 ADD PUSH2 0x94E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1FC SWAP1 PUSH2 0xBD4 JUMP JUMPDEST ISZERO DUP1 ISZERO SWAP2 POP PUSH2 0x223 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x223 SWAP1 PUSH1 0x2 ADD DUP4 PUSH2 0x95F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x60 SWAP4 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP3 SWAP1 PUSH2 0x256 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE22465D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST ISZERO PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14D85999535BD9194E8810D85B1B0814995A9958DD1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH20 0x4C4956454C595F47454E4552414C5F47524F555 PUSH1 0x64 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 SUB PUSH2 0x523 JUMPI PUSH1 0x0 PUSH2 0x3DB ADDRESS PUSH2 0x977 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP8 DUP2 ADD PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH4 0x22DF6F5B PUSH1 0xE2 SHL DUP1 DUP8 MSTORE PUSH1 0x2 DUP3 ADD DUP5 MSTORE SWAP2 DUP7 KECCAK256 SLOAD SWAP6 DUP8 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x469 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 DUP11 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND DUP6 MSTORE PUSH1 0x2 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x467 JUMPI PUSH2 0x467 PUSH2 0xC2B JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP12 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0xC2B JUMP JUMPDEST EQ JUMPDEST PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53657447726F7570537461747573204163636573732044656E69656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST POP POP POP PUSH2 0x601 JUMP JUMPDEST PUSH20 0x0 PUSH4 0x487C6960 DUP6 PUSH2 0x547 ADDRESS PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x574 SWAP3 SWAP2 SWAP1 CALLER SWAP1 PUSH4 0xB6C03F03 PUSH1 0xE0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x591 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53657447726F7570537461747573204163636573732044656E69656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x61C SWAP1 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x11DC9BDD5C08139BDD08119BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH16 0x1311DC9BDD5C13585B9859D95B595B9D PUSH1 0x82 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x30 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE22465D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x712 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST ISZERO PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x14D85999535BD9194E8810D85B1B0814995A9958DD1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH20 0x0 PUSH4 0x487C6960 DUP7 PUSH2 0x77D ADDRESS PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x7AA SWAP3 SWAP2 SWAP1 CALLER SWAP1 PUSH4 0x7E99337 PUSH1 0xE3 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374657247726F7570204163636573732044656E6965640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11DC9BDD5C0813985B5948125B9D985B1A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x892 SWAP3 SWAP2 SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP11 ADD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x8C7 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47726F757020416C726561647920526567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 PUSH2 0x932 DUP7 DUP9 DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD DUP5 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x959 DUP3 PUSH2 0x9B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA06 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9F2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA6C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA50 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xAB5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xB3A DUP2 PUSH2 0xAFB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 POP DUP1 SWAP5 POP POP POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xBC9 DUP2 PUSH2 0xAFB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xBE8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1AC DUP2 PUSH2 0xAFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xCBC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCC8 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFC PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xD10 DUP4 PUSH2 0xD0A DUP4 SLOAD PUSH2 0xBD4 JUMP JUMPDEST DUP4 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD44 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0xD2C JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD75 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xD55 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x73688B28936BC826EDD73B07 OR ORIGIN 0xA6 DUP4 CALLDATALOAD DUP2 0xE6 POP SWAP13 0xAC DUP6 EQ 0xCE 0xE1 SWAP2 0xC1 GT PUSH20 0x64736F6C634300081100330000000000000000 ",
      "sourceMap": "245:3137:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3089:192;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;469:74;;;:::i;:::-;;;1093:25:75;;;1081:2;1066:18;469:74:20;939:185:75;2616:249:20;;;;;;:::i;:::-;;:::i;:::-;;;1650:14:75;;1643:22;1625:41;;1613:2;1598:18;2616:249:20;1477:195:75;2869:216:20;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3285:95::-;;;-1:-1:-1;;;;;3352:23:20;2476:32:75;2458:51;;2446:2;2431:18;3285:95:20;2304:211:75;1372:1240:20;;;;;;;;;;-1:-1:-1;1372:1240:20;;;;;:::i;:::-;;:::i;383:82::-;;;:::i;548:820::-;;;;;;;;;;-1:-1:-1;548:820:20;;;;;:::i;:::-;;:::i;3089:192::-;3239:20;;;;:13;;;:20;;;;;3206:16;;3239:37;;:28;;:35;:37::i;:::-;3232:44;3089:192;-1:-1:-1;;;3089:192:20:o;469:74::-;517:25;;-1:-1:-1;;;517:25:20;;;4075:20:75;4111:11;;517:25:20;;;;;;;;;;;;;507:36;;;;;;469:74;:::o;2616:249::-;2750:4;2775:20;;;:13;;;:20;;;;;2769:39;;;;;:::i;:::-;:44;;;;-1:-1:-1;2769:91:20;;-1:-1:-1;2817:20:20;;;;:13;;;:20;;;;;:43;;:28;;2855:4;2817:37;:43::i;:::-;2762:98;2616:249;-1:-1:-1;;;;2616:249:20:o;2869:216::-;3000:4;3022:20;;;:13;;;:20;;;;;3049:30;;;;3014:66;;2985:13;;3000:4;3022:20;3049:30;;;3022:20;;3014:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2869:216;;;;;:::o;1372:1240::-;1502:4;1538;-1:-1:-1;;;;;1523:32:20;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1522:35;1514:71;;;;-1:-1:-1;;;1514:71:20;;4970:2:75;1514:71:20;;;4952:21:75;5009:2;4989:18;;;4982:30;-1:-1:-1;;;5028:18:75;;;5021:53;5091:18;;1514:71:20;;;;;;;;;928:40:18;;-1:-1:-1;;;928:40:18;;;5322:35:75;5373:12;;928:40:18;;;;;;;;;;;;918:51;;;;;;1596:5:20;:44;1592:876;;1650:15;1668:40;1702:4;1668:25;:40::i;:::-;1716:16;1798:20;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;1798:41:20;;;:30;;;:41;;;;;:46;1869:20;;;;;;;;:30;;;1798:20;;-1:-1:-1;1735:40:20;-1:-1:-1;;;1869:30:20;;;;:131;;;;-1:-1:-1;1965:35:20;1913:20;;;;:11;;;;:20;;;;;;;;-1:-1:-1;;;;;;1913:41:20;;;;:30;;;;:41;;;;;;:48;;;;;:87;;;;;;;:::i;:::-;;1869:131;:196;;;;-1:-1:-1;2014:41:20;2028:20;;;:11;;;;:20;;;;;;;;:26;2014:41;;:13;;;:41;;;;;;:51;;;;1869:196;:282;;;;-1:-1:-1;2116:35:20;2095:10;2079:15;:27;;;;;;;;;;;:33;;;;;;;;;;;:72;;;;;;;;:::i;:::-;;1869:282;1852:347;;;;-1:-1:-1;;;1852:347:20;;5730:2:75;1852:347:20;;;5712:21:75;5769:2;5749:18;;;5742:30;5808;5788:18;;;5781:58;5856:18;;1852:347:20;5528:352:75;1852:347:20;1642:564;;;1592:876;;;2237:14;:24;2273:4;2289:40;2323:4;2289:25;:40::i;:::-;2237:176;;-1:-1:-1;;;;;;2363:40:20;2237:176;;;;;;;;;;2341:10;;-1:-1:-1;;;2363:40:20;2237:176;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2220:241;;;;-1:-1:-1;;;2220:241:20;;5730:2:75;2220:241:20;;;5712:21:75;5769:2;5749:18;;;5742:30;5808;5788:18;;;5781:58;5856:18;;2220:241:20;5528:352:75;2220:241:20;2487:20;;;;:13;;;:20;;;;;2481:39;;;;;:::i;:::-;;;2524:1;2481:44;2473:72;;;;-1:-1:-1;;;2473:72:20;;6569:2:75;2473:72:20;;;6551:21:75;6608:2;6588:18;;;6581:30;-1:-1:-1;;;6627:18:75;;;6620:45;6682:18;;2473:72:20;6367:339:75;2473:72:20;-1:-1:-1;2551:20:20;;;;:13;;;:20;;;;;:30;;;;:39;;;;;-1:-1:-1;;2551:39:20;;;;;;1372:1240;;;;;:::o;383:82::-;428:36;;-1:-1:-1;;;428:36:20;;;6913:31:75;6960:12;;428:36:20;6711:267:75;548:820:20;684:7;723:4;-1:-1:-1;;;;;708:32:20;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;707:35;699:71;;;;-1:-1:-1;;;699:71:20;;4970:2:75;699:71:20;;;4952:21:75;5009:2;4989:18;;;4982:30;-1:-1:-1;;;5028:18:75;;;5021:53;5091:18;;699:71:20;4768:347:75;699:71:20;791:14;:24;825:4;839:40;873:4;839:25;:40::i;:::-;791:165;;-1:-1:-1;;;;;;909:39:20;791:165;;;;;;;;;;889:10;;-1:-1:-1;;;909:39:20;791:165;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;776:223;;;;-1:-1:-1;;;776:223:20;;7185:2:75;776:223:20;;;7167:21:75;7224:2;7204:18;;;7197:30;7263:29;7243:18;;;7236:57;7310:18;;776:223:20;6983:351:75;776:223:20;1035:1;1013:23;;;1005:54;;;;-1:-1:-1;;;1005:54:20;;7541:2:75;1005:54:20;;;7523:21:75;7580:2;7560:18;;;7553:30;-1:-1:-1;;;7599:18:75;;;7592:48;7657:18;;1005:54:20;7339:342:75;1005:54:20;1065:16;1111:4;;1094:22;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1094:22:20;;;;;;;;;1084:33;;1094:22;1084:33;;;;1137:23;;;;:13;;;:23;;;;;1131:42;;1084:33;;-1:-1:-1;1137:23:20;1131:42;;;:::i;:::-;:47;;-1:-1:-1;1123:84:20;;;;-1:-1:-1;;;1123:84:20;;8166:2:75;1123:84:20;;;8148:21:75;8205:2;8185:18;;;8178:30;8244:26;8224:18;;;8217:54;8288:18;;1123:84:20;7964:348:75;1123:84:20;1214:43;1260:23;;;:13;;;:23;;;;;;1289:20;1305:4;;1260:23;1289:20;:::i;:::-;-1:-1:-1;1315:18:20;;:27;;;;;-1:-1:-1;;1315:27:20;;;;;;1355:8;-1:-1:-1;548:820:20;;;;;;:::o;6699:118:36:-;6762:16;6793:19;6801:3;6793:7;:19::i;:::-;6786:26;6699:118;-1:-1:-1;;6699:118:36:o;5420:132::-;5500:4;3477:19;;;:12;;;:19;;;;;;:24;;5519:28;3385:121;146:130:12;242:28;;-1:-1:-1;;10656:2:75;10652:15;;;10648:53;242:28:12;;;10636:66:75;210:7:12;;10718:12:75;;242:28:12;;;;;;;;;;;;232:39;;;;;;225:46;;146:130;;;:::o;4634:103:36:-;4690:16;4721:3;:11;;4714:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4634:103;;;:::o;14:275:75:-;109:6;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;-1:-1:-1;;209:23:75;;;279:2;264:18;;;251:32;;-1:-1:-1;14:275:75:o;294:640::-;473:2;525:21;;;595:13;;498:18;;;617:22;;;444:4;;473:2;696:15;;;;670:2;655:18;;;444:4;739:169;753:6;750:1;747:13;739:169;;;814:13;;802:26;;883:15;;;;848:12;;;;775:1;768:9;739:169;;;-1:-1:-1;925:3:75;;294:640;-1:-1:-1;;;;;;294:640:75:o;1129:343::-;1233:6;1241;1249;1302:2;1290:9;1281:7;1277:23;1273:32;1270:52;;;1318:1;1315;1308:12;1270:52;-1:-1:-1;;1341:23:75;;;1411:2;1396:18;;1383:32;;-1:-1:-1;1462:2:75;1447:18;;;1434:32;;1129:343;-1:-1:-1;1129:343:75:o;1677:622::-;1856:2;1845:9;1838:21;1819:4;1888:6;1882:13;1931:6;1926:2;1915:9;1911:18;1904:34;1956:1;1966:144;1980:6;1977:1;1974:13;1966:144;;;2093:4;2077:14;;;2073:25;;2067:32;2062:2;2043:17;;;2039:26;2032:68;1995:12;1966:144;;;1970:3;2159:1;2154:2;2145:6;2134:9;2130:22;2126:31;2119:42;2229:2;2222;2218:7;2213:2;2205:6;2201:15;2197:29;2186:9;2182:45;2178:54;2170:62;;;2284:6;2277:14;2270:22;2263:4;2252:9;2248:20;2241:52;1677:622;;;;;:::o;2520:118::-;2606:5;2599:13;2592:21;2585:5;2582:32;2572:60;;2628:1;2625;2618:12;2572:60;2520:118;:::o;2643:404::-;2744:6;2752;2760;2813:2;2801:9;2792:7;2788:23;2784:32;2781:52;;;2829:1;2826;2819:12;2781:52;2865:9;2852:23;2842:33;;2922:2;2911:9;2907:18;2894:32;2884:42;;2976:2;2965:9;2961:18;2948:32;2989:28;3011:5;2989:28;:::i;:::-;3036:5;3026:15;;;2643:404;;;;;:::o;3052:816::-;3165:6;3173;3181;3189;3242:2;3230:9;3221:7;3217:23;3213:32;3210:52;;;3258:1;3255;3248:12;3210:52;3294:9;3281:23;3271:33;;3355:2;3344:9;3340:18;3327:32;3378:18;3419:2;3411:6;3408:14;3405:34;;;3435:1;3432;3425:12;3405:34;3473:6;3462:9;3458:22;3448:32;;3518:7;3511:4;3507:2;3503:13;3499:27;3489:55;;3540:1;3537;3530:12;3489:55;3580:2;3567:16;3606:2;3598:6;3595:14;3592:34;;;3622:1;3619;3612:12;3592:34;3667:7;3662:2;3653:6;3649:2;3645:15;3641:24;3638:37;3635:57;;;3688:1;3685;3678:12;3635:57;3719:2;3715;3711:11;3701:21;;3741:6;3731:16;;;;;3797:2;3786:9;3782:18;3769:32;3810:28;3832:5;3810:28;:::i;:::-;3052:816;;;;-1:-1:-1;3052:816:75;;-1:-1:-1;;3052:816:75:o;4133:380::-;4212:1;4208:12;;;;4255;;;4276:61;;4330:4;4322:6;4318:17;4308:27;;4276:61;4383:2;4375:6;4372:14;4352:18;4349:38;4346:161;;4429:10;4424:3;4420:20;4417:1;4410:31;4464:4;4461:1;4454:15;4492:4;4489:1;4482:15;4346:161;;4133:380;;;:::o;4518:245::-;4585:6;4638:2;4626:9;4617:7;4613:23;4609:32;4606:52;;;4654:1;4651;4644:12;4606:52;4686:9;4680:16;4705:28;4727:5;4705:28;:::i;5396:127::-;5457:10;5452:3;5448:20;5445:1;5438:31;5488:4;5485:1;5478:15;5512:4;5509:1;5502:15;5885:477;6149:25;;;6205:2;6190:18;;6183:34;;;;-1:-1:-1;;;;;6253:32:75;6248:2;6233:18;;6226:60;-1:-1:-1;;;;;;6322:33:75;6317:2;6302:18;;6295:61;6136:3;6121:19;;5885:477::o;7686:273::-;7871:6;7863;7858:3;7845:33;7827:3;7897:16;;7922:13;;;7897:16;7686:273;-1:-1:-1;7686:273:75:o;8317:127::-;8378:10;8373:3;8369:20;8366:1;8359:31;8409:4;8406:1;8399:15;8433:4;8430:1;8423:15;8575:545;8677:2;8672:3;8669:11;8666:448;;;8713:1;8738:5;8734:2;8727:17;8783:4;8779:2;8769:19;8853:2;8841:10;8837:19;8834:1;8830:27;8824:4;8820:38;8889:4;8877:10;8874:20;8871:47;;;-1:-1:-1;8912:4:75;8871:47;8967:2;8962:3;8958:12;8955:1;8951:20;8945:4;8941:31;8931:41;;9022:82;9040:2;9033:5;9030:13;9022:82;;;9085:17;;;9066:1;9055:13;9022:82;;;9026:3;;;8666:448;8575:545;;;:::o;9296:1206::-;9420:18;9415:3;9412:27;9409:53;;;9442:18;;:::i;:::-;9471:94;9561:3;9521:38;9553:4;9547:11;9521:38;:::i;:::-;9515:4;9471:94;:::i;:::-;9591:1;9616:2;9611:3;9608:11;9633:1;9628:616;;;;10288:1;10305:3;10302:93;;;-1:-1:-1;10361:19:75;;;10348:33;10302:93;-1:-1:-1;;9253:1:75;9249:11;;;9245:24;9241:29;9231:40;9277:1;9273:11;;;9228:57;10408:78;;9601:895;;9628:616;8522:1;8515:14;;;8559:4;8546:18;;-1:-1:-1;;9664:17:75;;;9765:9;9787:229;9801:7;9798:1;9795:14;9787:229;;;9890:19;;;9877:33;9862:49;;9997:4;9982:20;;;;9950:1;9938:14;;;;9817:12;9787:229;;;9791:3;10044;10035:7;10032:16;10029:159;;;10168:1;10164:6;10158:3;10152;10149:1;10145:11;10141:21;10137:34;10133:39;10120:9;10115:3;10111:19;10098:33;10094:79;10086:6;10079:95;10029:159;;;10231:1;10225:3;10222:1;10218:11;10214:19;10208:4;10201:33;9601:895;;;9296:1206;;;:::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "709400",
        "executionCost": "775",
        "totalCost": "710175"
      },
      "external": {
        "LIB_NAME()": "370",
        "LIB_VERSION()": "338",
        "getGroupInfo(AccessControlStorage.DataMaps storage,bytes32)": "infinite",
        "getGroupRoles(AccessControlStorage.DataMaps storage,bytes32)": "infinite",
        "getLibrary()": "179",
        "hasGroupRole(AccessControlStorage.DataMaps storage,bytes32,bytes32)": "5014",
        "registerGroup(AccessControlStorage.DataMaps storage,string,bool)": "infinite",
        "setGroupStatus(AccessControlStorage.DataMaps storage,bytes32,bool)": "infinite"
      }
    },
    "methodIdentifiers": {
      "LIB_NAME()": "bec94751",
      "LIB_VERSION()": "2466209b",
      "getGroupInfo(AccessControlStorage.DataMaps storage,bytes32)": "745311f8",
      "getGroupRoles(AccessControlStorage.DataMaps storage,bytes32)": "13ee7302",
      "getLibrary()": "7678922e",
      "hasGroupRole(AccessControlStorage.DataMaps storage,bytes32,bytes32)": "4ba84563",
      "registerGroup(AccessControlStorage.DataMaps storage,string,bool)": "f728a0f5",
      "setGroupStatus(AccessControlStorage.DataMaps storage,bytes32,bool)": "7c95bcdf"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LIB_NAME\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIB_VERSION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/lib/acl/LGroupManagement.sol\":\"LGroupManagement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/acl/AccessControlStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"../lib/struct/LEnumerableSet.sol\\\";\\nimport \\\"../lib/struct/LEnumerableMap.sol\\\";\\nimport \\\"../proxy/BaseUUPSStorage.sol\\\";\\n\\nabstract contract AccessControlStorage is BaseUUPSStorage {\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n  using LEnumerableMap for LEnumerableMap.Bytes32ToBytes32Map;\\n  using LEnumerableMap for LEnumerableMap.AddressToUintMap;\\n\\n  enum Status {\\n    NONE,\\n    ENABLED,\\n    DISABLED\\n  }\\n\\n  struct RoleStat {\\n    bytes32 role;\\n    Status status;\\n  }\\n\\n  struct Context {\\n    bytes32 realm;\\n    address contractId;\\n    bool isEnabled;\\n    mapping(bytes4 => RoleStat) resources; // function selector => RoleStat\\n    LEnumerableSet.Bytes32Set funcSet;\\n  }\\n\\n  struct Role {\\n    string name;\\n    bytes32 group;\\n    bool isEnabled;\\n    LEnumerableSet.AddressSet accountSet;\\n  }\\n\\n  struct Realm {\\n    string name;\\n    bool isEnabled;\\n    bool isUpgradable;\\n    LEnumerableSet.Bytes32Set ctxSet;\\n  }\\n\\n  struct Group {\\n    string name;\\n    bool isEnabled;\\n    LEnumerableSet.Bytes32Set roleSet;\\n  }\\n\\n  struct DataMaps {\\n    mapping(address => mapping(bytes32 => Status)) accountMap;\\n    mapping(bytes32 => Context) ctxMap;\\n    mapping(bytes32 => Role) roleMap;\\n    mapping(bytes32 => Realm) realmMap;\\n    mapping(bytes32 => Group) groupMap;\\n  }\\n\\n  DataMaps internal _dataMaps;\\n}\\n\",\"keccak256\":\"0xc5e4ec7a55d2f136e8c7e552a6f0cb24d3c5f2223fe230b2356dc708dc6c97b1\",\"license\":\"MIT\"},\"src/contracts/acl/IContextManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IContextManagement {\\n  enum UpdateContextStatus {\\n    DISABLE,\\n    ENABLE,\\n    REMOVE\\n  }\\n\\n  struct RequestContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    address contractId;\\n    bool status;\\n  }\\n\\n   struct RequestPredictContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    bytes32 salt;\\n    address subject;\\n    address deployer;\\n    bool status;\\n  }\\n\\n  struct RequestRegisterContext {\\n    bytes32 role;\\n    bytes4[] funcSelectors;\\n    bool isEnabled;\\n  }\\n\\n  struct RequestUpdateContext {\\n    bytes32 role;\\n    bytes4[] funcSelectors;\\n    UpdateContextStatus updateStatus;\\n  }\\n\\n  struct ResponseContext {\\n    bytes32 name;\\n    bytes32 version;\\n    bytes32 realm;\\n    address contractId;\\n    bool isSafeMode;\\n    bool isUpgradable;\\n  }\\n\\n  event ContextRegistered(bytes32 indexed context, address indexed contractId, address indexed sender, address signer, bytes32 realm);\\n\\n  event PredictContextRegistered(bytes32 indexed context, address indexed contractId, address indexed sender, address signer, address deployer, address subject, bytes32 realm);\\n\\n  event ContextUpdated(bytes32 indexed context, address indexed contractId, address indexed sender, bytes32 realm);\\n\\n  event ContextStatusChanged(bytes32 indexed context, address indexed sender, bytes32 indexed realm, bool status);\\n\\n  event ContextFuncRoleAdded(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextFuncRemoved(bytes32 indexed context, address indexed sender, bytes4 functionSelector, bytes32 realm);\\n\\n  event ContextRoleGranted(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextRoleRevoked(\\n    bytes32 indexed context,\\n    bytes32 indexed role,\\n    address indexed sender,\\n    bytes4 functionSelector,\\n    bytes32 realm\\n  );\\n\\n  event ContextRealmChanged(bytes32 indexed context, address indexed sender, bytes32 indexed realm, bytes32 oldRealm);\\n\\n  function registerContext(\\n    bytes memory signature,\\n    RequestContext calldata rc,\\n    RequestRegisterContext[] calldata rcr\\n  ) external returns (bytes32);\\n\\n  function registerPredictContext(\\n    bytes memory signature,\\n    RequestPredictContext calldata rpc,\\n    RequestRegisterContext[] calldata rrc\\n  ) external returns (bytes32);\\n\\n  function updateContext(\\n    bytes32 ctx,\\n    bytes memory signature,\\n    RequestContext calldata rc,\\n    RequestUpdateContext[] calldata ruc\\n  ) external returns (address);\\n\\n  function addContextFuncRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function removeContextFunc(bytes32 ctx, bytes4 functionSelector) external returns (bool);\\n\\n  function grantContextRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function revokeContextRole(\\n    bytes32 ctx,\\n    bytes4 functionSelector,\\n    bytes32 role\\n  ) external returns (bool);\\n\\n  function setContextRealm(bytes32 ctx, bytes32 realm) external returns (bool);\\n\\n  function setContextStatus(bytes32 ctx, bool status) external returns (bool);\\n\\n  function hasContextRole(\\n    bytes32 ctx,\\n    bytes32 role,\\n    bytes4 functionSelector\\n  ) external view returns (bool);\\n\\n  function getContextInfo(bytes32 ctx) external view returns (ResponseContext memory);\\n\\n  function getContextFuncs(bytes32 ctx) external view returns (bytes4[] memory);\\n}\\n\",\"keccak256\":\"0x4811f66509db07ea5b29faf433bf0209e8fd13a822ec371a0da2178289fce71b\",\"license\":\"MIT\"},\"src/contracts/acl/IGroupManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IGroupManagement {\\n  event GroupRegistered(bytes32 indexed group, address indexed sender, string name, bool status);\\n\\n  event GroupStatusChanged(bytes32 indexed group, address indexed sender, bool status);\\n\\n  function registerGroup(string calldata name, bool status) external returns (bytes32);\\n\\n  function setGroupStatus(bytes32 group, bool status) external returns (bool);\\n\\n  function hasGroupRole(bytes32 group, bytes32 role) external view returns (bool);\\n\\n  function getGroupInfo(bytes32 group) external view returns (string memory, bool);\\n\\n  function getGroupRoles(bytes32 group) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0xef419de7dcf0029fe7a05850895dc4ce569d743e695d7eb2d9d345d185b267f8\",\"license\":\"MIT\"},\"src/contracts/acl/IRealmManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IRealmManagement {\\n  event RealmRegistered(bytes32 indexed realm, address indexed sender, string name, bool status, bool isUpgradable);\\n\\n  event RealmStatusChanged(bytes32 indexed realm, address indexed sender, bool status);\\n\\n  event RealmUpgradeStatusChanged(bytes32 indexed realm, address indexed sender, bool status);\\n\\n  function registerRealm(\\n    string calldata name,\\n    bool status,\\n    bool isUpgradable\\n  ) external returns (bytes32);\\n\\n  function setRealmStatus(bytes32 realm, bool status) external returns (bool);\\n\\n  function setRealmUpgradeStatus(bytes32 realm, bool status) external returns (bool);\\n\\n  function hasRealmContext(bytes32 realm, bytes32 context) external view returns (bool);\\n\\n  function getRealmInfo(bytes32 realm)\\n    external\\n    view\\n    returns (\\n      string memory,\\n      bool,\\n      bool\\n    );\\n\\n  function getRealmContexts(bytes32 realm) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x7058ef3754e6c4b92a61e2e908df2708f1c110fc82100338abe2ce98f3b02c0f\",\"license\":\"MIT\"},\"src/contracts/acl/IRoleManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IRoleManagement {\\n\\n  struct RegiterRoleRequest {\\n    bytes32 group;\\n    string name;    \\n    bool status;\\n  }\\n\\n  struct UpdateRoleRequest {\\n    bytes32 role;\\n    address account;\\n  }\\n\\n  event RoleAccountGranted(address indexed sender, bytes32 indexed role, address indexed account);\\n\\n  event RoleAccountRevoked(address indexed sender, bytes32 indexed role, address indexed account);\\n\\n  event RoleRegistered(\\n    address indexed sender,\\n    bytes32 indexed role,\\n    string indexed name,\\n    bytes32 group,\\n    bool isEnabled\\n  );\\n\\n  event RoleStatusChanged(address indexed sender, bytes32 indexed role, bytes32 indexed group, bool status);\\n\\n  event RoleGroupChanged(address indexed sender, bytes32 indexed role, bytes32 indexed newGroup, bytes32 oldGroup);\\n\\n  function registerRole(\\n    string calldata name,\\n    bytes32 group,\\n    bool status\\n  ) external returns (bytes32);\\n\\n  function batchRegisterRole(RegiterRoleRequest[] calldata requests) external returns(bytes32[] memory);\\n\\n  function grantRoleAccount(bytes32 role, address account) external returns (bool);\\n\\n  function batchGrantRoleAccount(UpdateRoleRequest[] calldata requests) external returns (bool);\\n\\n  function revokeRoleAccount(bytes32 role, address account) external returns (bool);\\n\\n  function batchRevokeRoleAccount(UpdateRoleRequest[] calldata requests) external returns (bool);\\n\\n  function setRoleStatus(bytes32 role, bool status) external returns (bool);\\n\\n  function setRoleGroup(bytes32 role, bytes32 group) external returns (bool);\\n\\n  function getRoleInfo(bytes32 role)\\n    external\\n    view\\n    returns (\\n      string memory,\\n      bytes32,\\n      bool\\n    );\\n\\n  function getRoleAccounts(bytes32 role) external view returns (address[] memory);\\n\\n  function hasRoleAccount(bytes32 role, address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x18e7657fdde30362e8c0186ac84acfdbc161c4f8f06e1e3cb009021d8fe5ab58\",\"license\":\"MIT\"},\"src/contracts/lib/LContextUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Collection of functions related to the context\\n */\\nlibrary LContextUtils {\\n  function generateCtx(address contractId) internal pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(contractId));\\n  }\\n}\\n\",\"keccak256\":\"0x379d3f1670e48d86daed450ef0f5b75e59c592aa92b0d9ca2034d1888730969d\",\"license\":\"MIT\"},\"src/contracts/lib/acl/LAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"../../acl/IContextManagement.sol\\\";\\nimport \\\"../../acl/IRoleManagement.sol\\\";\\nimport \\\"../../acl/IGroupManagement.sol\\\";\\nimport \\\"../../acl/IRealmManagement.sol\\\";\\nimport \\\"../../acl/AccessControlStorage.sol\\\";\\nimport \\\"../struct/LEnumerableSet.sol\\\";\\nimport \\\"../../proxy/IProxy.sol\\\";\\nimport \\\"../LContextUtils.sol\\\";\\n\\nlibrary LAccessControl {\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n\\n  bytes32 public constant LIB_NAME = keccak256(abi.encodePacked(\\\"LAccessControl\\\"));\\n  bytes32 public constant LIB_VERSION = keccak256(abi.encodePacked(\\\"1.0.0\\\"));\\n\\n  bytes32 public constant LIVELY_GENERAL_REALM = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_REALM\\\"));\\n  bytes32 public constant LIVELY_ASSET_REALM = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_REALM\\\"));\\n\\n  bytes32 public constant LIVELY_GENERAL_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_GENERAL_GROUP\\\"));\\n  bytes32 public constant LIVELY_DAO_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_DAO_GROUP\\\"));\\n  bytes32 public constant LIVELY_ASSET_GROUP = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_GROUP\\\"));\\n\\n  bytes32 public constant LIVELY_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ADMIN_ROLE\\\"));\\n  bytes32 public constant LIVELY_SYSTEM_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_SYSTEM_ADMIN_ROLE\\\"));\\n  \\n  bytes32 public constant LIVELY_ASSET_MANAGER_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_MANAGER_ROLE\\\"));\\n  bytes32 public constant LIVELY_ASSET_ADMIN_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ASSET_ADMIN_ROLE\\\"));\\n  \\n  bytes32 public constant LIVELY_COMMUNITY_DAO_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_COMMUNITY_DAO_ROLE\\\"));  \\n  bytes32 public constant LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE\\\"));\\n  \\n  bytes32 public constant LIVELY_ANONYMOUS_ROLE = keccak256(abi.encodePacked(\\\"LIVELY_ANONYMOUS_ROLE\\\"));\\n\\n  function initializeContext(AccessControlStorage.DataMaps storage data) external {\\n    data.accountMap[msg.sender][LIVELY_ADMIN_ROLE] = AccessControlStorage.Status.ENABLED;\\n    data.accountMap[msg.sender][LIVELY_SYSTEM_ADMIN_ROLE] = AccessControlStorage.Status.ENABLED;\\n\\n    data.roleMap[LIVELY_ADMIN_ROLE].name = \\\"LIVELY_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ADMIN_ROLE].group = LIVELY_GENERAL_GROUP;\\n    data.roleMap[LIVELY_ADMIN_ROLE].accountSet.add(msg.sender);\\n\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].name = \\\"LIVELY_SYSTEM_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].group = LIVELY_GENERAL_GROUP;\\n    data.roleMap[LIVELY_SYSTEM_ADMIN_ROLE].accountSet.add(msg.sender);\\n\\n    data.roleMap[LIVELY_ASSET_MANAGER_ROLE].name = \\\"LIVELY_ASSET_MANAGER_ROLE\\\";\\n    data.roleMap[LIVELY_ASSET_MANAGER_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ASSET_MANAGER_ROLE].group = LIVELY_ASSET_GROUP;\\n\\n    data.roleMap[LIVELY_ASSET_ADMIN_ROLE].name = \\\"LIVELY_ASSET_ADMIN_ROLE\\\";\\n    data.roleMap[LIVELY_ASSET_ADMIN_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ASSET_ADMIN_ROLE].group = LIVELY_ASSET_GROUP;\\n\\n    data.roleMap[LIVELY_COMMUNITY_DAO_ROLE].name = \\\"LIVELY_COMMUNITY_DAO_ROLE\\\";\\n    data.roleMap[LIVELY_COMMUNITY_DAO_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_COMMUNITY_DAO_ROLE].group = LIVELY_DAO_GROUP;\\n\\n    data.roleMap[LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE].name = \\\"LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE\\\";\\n    data.roleMap[LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE].group = LIVELY_DAO_GROUP;\\n    \\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].name = \\\"LIVELY_ANONYMOUS_ROLE\\\";\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].isEnabled = true;\\n    data.roleMap[LIVELY_ANONYMOUS_ROLE].group = LIVELY_GENERAL_GROUP;\\n\\n    data.groupMap[LIVELY_GENERAL_GROUP].name = \\\"LIVELY_GENERAL_GROUP\\\";\\n    data.groupMap[LIVELY_GENERAL_GROUP].isEnabled = true;\\n    data.groupMap[LIVELY_GENERAL_GROUP].roleSet.add(LIVELY_ADMIN_ROLE);\\n    data.groupMap[LIVELY_GENERAL_GROUP].roleSet.add(LIVELY_SYSTEM_ADMIN_ROLE);\\n\\n    data.groupMap[LIVELY_DAO_GROUP].name = \\\"LIVELY_DAO_GROUP\\\";\\n    data.groupMap[LIVELY_DAO_GROUP].isEnabled = true;\\n    data.groupMap[LIVELY_DAO_GROUP].roleSet.add(LIVELY_COMMUNITY_DAO_ROLE);\\n    data.groupMap[LIVELY_DAO_GROUP].roleSet.add(LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE);\\n\\n    data.groupMap[LIVELY_ASSET_GROUP].name = \\\"LIVELY_ASSET_GROUP\\\";\\n    data.groupMap[LIVELY_ASSET_GROUP].isEnabled = true;\\n    data.groupMap[LIVELY_ASSET_GROUP].roleSet.add(LIVELY_ASSET_MANAGER_ROLE);\\n    data.groupMap[LIVELY_ASSET_GROUP].roleSet.add(LIVELY_ASSET_ADMIN_ROLE);\\n\\n    data.realmMap[LIVELY_GENERAL_REALM].name = \\\"LIVELY_GENERAL_REALM\\\";\\n    data.realmMap[LIVELY_GENERAL_REALM].isEnabled = true;\\n    data.realmMap[LIVELY_GENERAL_REALM].isUpgradable = true;\\n    data.realmMap[LIVELY_GENERAL_REALM].ctxSet.add(LContextUtils.generateCtx(address(this)));\\n\\n    data.realmMap[LIVELY_ASSET_REALM].name = \\\"LIVELY_ASSET_REALM\\\";\\n    data.realmMap[LIVELY_ASSET_REALM].isEnabled = true;\\n    data.realmMap[LIVELY_ASSET_REALM].isUpgradable = true;  \\n  }\\n\\n  function createRequestContext() external pure returns (IContextManagement.RequestRegisterContext[] memory) {\\n    IContextManagement.RequestRegisterContext[] memory rrc = new IContextManagement.RequestRegisterContext[](2);\\n    rrc[0].role = LIVELY_ADMIN_ROLE;\\n    rrc[0].isEnabled = true;\\n    rrc[0].funcSelectors = new bytes4[](22);\\n    rrc[0].funcSelectors[0] = IProxy.setUpgradeStatus.selector;\\n    rrc[0].funcSelectors[1] = IProxy.setSafeMode.selector;\\n    rrc[0].funcSelectors[2] = IContextManagement.addContextFuncRole.selector;\\n    rrc[0].funcSelectors[3] = IContextManagement.removeContextFunc.selector;\\n    rrc[0].funcSelectors[4] = IContextManagement.grantContextRole.selector;\\n    rrc[0].funcSelectors[5] = IContextManagement.revokeContextRole.selector;\\n    rrc[0].funcSelectors[6] = IContextManagement.setContextRealm.selector;\\n    rrc[0].funcSelectors[7] = IContextManagement.setContextStatus.selector;\\n    rrc[0].funcSelectors[8] = IRoleManagement.registerRole.selector;\\n    rrc[0].funcSelectors[9] = IRoleManagement.batchRegisterRole.selector;\\n    rrc[0].funcSelectors[10] = IRoleManagement.grantRoleAccount.selector;\\n    rrc[0].funcSelectors[11] = IRoleManagement.batchGrantRoleAccount.selector;\\n    rrc[0].funcSelectors[12] = IRoleManagement.revokeRoleAccount.selector;\\n    rrc[0].funcSelectors[13] = IRoleManagement.batchRevokeRoleAccount.selector;\\n    rrc[0].funcSelectors[14] = IRoleManagement.setRoleStatus.selector;\\n    rrc[0].funcSelectors[15] = IRoleManagement.setRoleGroup.selector;\\n    rrc[0].funcSelectors[16] = IGroupManagement.registerGroup.selector;\\n    rrc[0].funcSelectors[17] = IGroupManagement.setGroupStatus.selector;\\n    rrc[0].funcSelectors[18] = IRealmManagement.registerRealm.selector;\\n    rrc[0].funcSelectors[19] = IRealmManagement.setRealmStatus.selector;\\n    rrc[0].funcSelectors[20] = IRealmManagement.setRealmUpgradeStatus.selector;\\n    rrc[0].funcSelectors[21] = bytes4(keccak256(\\\"withdrawBalance(address)\\\"));\\n\\n    rrc[1].role = LIVELY_SYSTEM_ADMIN_ROLE;\\n    rrc[1].isEnabled = true;\\n    rrc[1].funcSelectors = new bytes4[](4);\\n    rrc[1].funcSelectors[0] = IProxy.setLocalAdmin.selector;\\n    rrc[1].funcSelectors[1] = IProxy.upgradeTo.selector;\\n    rrc[1].funcSelectors[2] = IContextManagement.registerContext.selector;\\n    rrc[1].funcSelectors[3] = IContextManagement.updateContext.selector;\\n\\n    return rrc;\\n  }\\n\\n  function hasAccess(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 context,\\n    address account,\\n    bytes4 signature\\n  ) external view returns (bool) {\\n    bytes32 role = data.ctxMap[context].resources[signature].role;\\n    // console.log(\\\"hasAccess called, address: %s\\\", account);\\n\\n    // console.log(\\\"data.ctxMap[context].smca: %s\\\", data.ctxMap[context].smca);\\n    // console.log(\\\"data.ctxMap[context].isEnabled:\\\");\\n    // console.logBool(data.ctxMap[context].isEnabled);\\n    // console.log(\\\"data.ctxMap[context].realm: \\\");\\n    // console.logBytes32(data.ctxMap[context].realm);\\n    // console.log(\\\"data.ctxMap[context].resources[signature].status: \\\");\\n    // console.logBytes1(bytes1(uint8(data.ctxMap[context].resources[signature].status)));\\n    // console.log(\\\"data.ctxMap[context].resources[signature].role: \\\");\\n    // console.logBytes32(data.ctxMap[context].resources[signature].role);\\n\\n    // console.log(\\\"data.realmMap[data.ctxMap[context].realm].name: %s\\\", data.realmMap[data.ctxMap[context].realm].name);\\n    // console.log(\\\"data.realmMap[data.ctxMap[context].realm].isEnabled: \\\");\\n    // console.logBool(data.realmMap[data.ctxMap[context].realm].isEnabled);\\n\\n    // console.log(\\\"data.groupMap[data.roleMap[role].group].name: %s\\\", data.groupMap[data.roleMap[role].group].name);\\n    // console.log(\\\"data.groupMap[data.roleMap[role].group].isEnabled: \\\");\\n    // console.logBool(data.groupMap[data.roleMap[role].group].isEnabled);\\n\\n    // console.log(\\\"data.accountMap[account][role]: \\\");\\n    // console.logBytes1(bytes1(uint8(data.accountMap[account][role])));\\n\\n    if (role == LIVELY_ANONYMOUS_ROLE) {\\n      return\\n        data.ctxMap[context].isEnabled &&\\n        data.ctxMap[context].resources[signature].status == AccessControlStorage.Status.ENABLED;\\n    } else {\\n      return\\n        data.ctxMap[context].isEnabled &&\\n        data.ctxMap[context].resources[signature].status == AccessControlStorage.Status.ENABLED &&\\n        data.realmMap[data.ctxMap[context].realm].isEnabled &&\\n        data.groupMap[data.roleMap[role].group].isEnabled &&\\n        data.accountMap[account][role] == AccessControlStorage.Status.ENABLED;\\n    }\\n  }\\n\\n  function isLivelySystemAdminRole(AccessControlStorage.DataMaps storage data, address account)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.accountMap[account][LIVELY_SYSTEM_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyAdminRole(AccessControlStorage.DataMaps storage data, address account) external view returns (bool) {\\n    return data.accountMap[account][LIVELY_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyAssetManagerRole(AccessControlStorage.DataMaps storage data, address account) external view returns (bool) {\\n    return data.accountMap[account][LIVELY_ASSET_MANAGER_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyAssetAdminRole(AccessControlStorage.DataMaps storage data, address account) external view returns (bool) {\\n    return data.accountMap[account][LIVELY_ASSET_ADMIN_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyCommunityDaoRole(AccessControlStorage.DataMaps storage data, address account) external view returns (bool) {\\n    return data.accountMap[account][LIVELY_COMMUNITY_DAO_ROLE] == AccessControlStorage.Status.ENABLED;  \\n  }\\n\\n  function isLivelyCommunityDaoExecutorRole(AccessControlStorage.DataMaps storage data, address account) external view returns (bool) {\\n    return data.accountMap[account][LIVELY_COMMUNITY_DAO_EXECUTOR_ROLE] == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isLivelyGeneralGroup(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return data.groupMap[LIVELY_GENERAL_GROUP].roleSet.contains(role);\\n  }\\n\\n  function isLivelyAssetGroup(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return data.groupMap[LIVELY_ASSET_GROUP].roleSet.contains(role);\\n  }\\n\\n  function isLivelyDaoGroup(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return data.groupMap[LIVELY_DAO_GROUP].roleSet.contains(role);\\n  }\\n\\n  function isLivelyGeneralRealm(AccessControlStorage.DataMaps storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.realmMap[LIVELY_GENERAL_REALM].ctxSet.contains(context);\\n  }\\n\\n  function isLivelyAssetRealm(AccessControlStorage.DataMaps storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return data.realmMap[LIVELY_ASSET_REALM].ctxSet.contains(context);\\n  }\\n\\n\\n  function isContextSafeMode(AccessControlStorage.DataMaps storage data, bytes32 context) external view returns (bool) {\\n    return IProxy(data.ctxMap[context].contractId).isSafeMode();\\n  }\\n\\n  function isContextUpgradable(AccessControlStorage.DataMaps storage data, bytes32 context)\\n    external\\n    view\\n    returns (bool)\\n  {\\n    return IProxy(data.ctxMap[context].contractId).isUpgradable();\\n  }\\n\\n  function isRealmUpgradable(AccessControlStorage.DataMaps storage data, bytes32 realm) external view returns (bool) {\\n    if (bytes(data.realmMap[realm].name).length == 0) return false;\\n    return data.realmMap[realm].isUpgradable;\\n  }\\n\\n  function isGroupExists(AccessControlStorage.DataMaps storage data, bytes32 group) external view returns (bool) {\\n    return bytes(data.groupMap[group].name).length > 0;\\n  }\\n\\n  function isGroupEnabled(AccessControlStorage.DataMaps storage data, bytes32 group) external view returns (bool) {\\n    return bytes(data.groupMap[group].name).length > 0 && data.groupMap[group].isEnabled;\\n  }\\n\\n  function isContextExists(AccessControlStorage.DataMaps storage data, bytes32 context) external view returns (bool) {\\n    return data.ctxMap[context].contractId != address(0);\\n  }\\n\\n  function isContextFunctionExists(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 context,\\n    bytes4 functionSelector\\n  ) external view returns (bool) {\\n    return data.ctxMap[context].contractId != address(0) && data.ctxMap[context].funcSet.contains(functionSelector);\\n  }\\n\\n  function isContextFunctionEnabled(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 context,\\n    bytes4 functionSelector\\n  ) external view returns (bool) {\\n    return\\n      data.ctxMap[context].contractId != address(0) &&\\n      data.ctxMap[context].resources[functionSelector].status == AccessControlStorage.Status.ENABLED;\\n  }\\n\\n  function isContextEnabled(AccessControlStorage.DataMaps storage data, bytes32 context) external view returns (bool) {\\n    return data.ctxMap[context].contractId != address(0) && data.ctxMap[context].isEnabled;\\n  }\\n\\n  function isRoleExists(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return bytes(data.roleMap[role].name).length > 0;\\n  }\\n\\n  function isRoleEnabled(AccessControlStorage.DataMaps storage data, bytes32 role) external view returns (bool) {\\n    return bytes(data.roleMap[role].name).length > 0 && data.roleMap[role].isEnabled;\\n  }\\n\\n  function isRealmExists(AccessControlStorage.DataMaps storage data, bytes32 realm) external view returns (bool) {\\n    return bytes(data.realmMap[realm].name).length > 0;\\n  }\\n\\n  function isRealmEnabled(AccessControlStorage.DataMaps storage data, bytes32 realm) external view returns (bool) {\\n    return bytes(data.realmMap[realm].name).length > 0 && data.realmMap[realm].isEnabled;\\n  }\\n}\\n\",\"keccak256\":\"0x196565a06675a25c0183de8f2b2b24b9fb5540e2417b9ce094f52be521b9b384\",\"license\":\"MIT\"},\"src/contracts/lib/acl/LGroupManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"../../acl/AccessControlStorage.sol\\\";\\nimport \\\"../../acl/IGroupManagement.sol\\\";\\nimport \\\"../struct/LEnumerableSet.sol\\\";\\nimport \\\"../LContextUtils.sol\\\";\\nimport \\\"./LAccessControl.sol\\\";\\n\\nlibrary LGroupManagement {\\n  using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n  using LEnumerableSet for LEnumerableSet.AddressSet;\\n\\n  bytes32 public constant LIB_NAME = keccak256(abi.encodePacked(\\\"LGroupManagement\\\"));\\n  bytes32 public constant LIB_VERSION = keccak256(abi.encodePacked(\\\"1.0.0\\\"));\\n\\n  function registerGroup(\\n    AccessControlStorage.DataMaps storage data,\\n    string calldata name,\\n    bool status\\n  ) external returns (bytes32) {\\n    require(!IProxy(address(this)).isSafeMode(), \\\"SafeMode: Call Rejected\\\");\\n    require(\\n      LAccessControl.hasAccess(\\n        data,\\n        LContextUtils.generateCtx(address(this)),\\n        msg.sender,\\n        IGroupManagement.registerGroup.selector\\n      ),\\n      \\\"RegisterGroup Access Denied\\\"\\n    );\\n    require(bytes(name).length != 0, \\\"Group Name Invalid\\\");\\n    bytes32 groupKey = keccak256(abi.encodePacked(name));\\n    require(bytes(data.groupMap[groupKey].name).length == 0, \\\"Group Already Registered\\\");\\n\\n    AccessControlStorage.Group storage newGroup = data.groupMap[groupKey];\\n    newGroup.name = name;\\n    newGroup.isEnabled = status;\\n    return groupKey;\\n  }\\n\\n  function setGroupStatus(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 group,\\n    bool status\\n  ) external returns (bool) {\\n    require(!IProxy(address(this)).isSafeMode(), \\\"SafeMode: Call Rejected\\\");\\n\\n    if (group == LAccessControl.LIVELY_GENERAL_GROUP) {\\n      bytes32 context = LContextUtils.generateCtx(address(this));\\n      bytes4 signature = IRealmManagement.setRealmStatus.selector;\\n      bytes32 role = data.ctxMap[context].resources[signature].role;\\n      require(\\n        data.ctxMap[context].isEnabled &&\\n          data.ctxMap[context].resources[signature].status == AccessControlStorage.Status.ENABLED &&\\n          data.realmMap[data.ctxMap[context].realm].isEnabled &&\\n          data.accountMap[msg.sender][role] == AccessControlStorage.Status.ENABLED,\\n        \\\"SetGroupStatus Access Denied\\\"\\n      );\\n    } else {\\n      require(\\n        LAccessControl.hasAccess(\\n          data,\\n          LContextUtils.generateCtx(address(this)),\\n          msg.sender,\\n          IGroupManagement.setGroupStatus.selector\\n        ),\\n        \\\"SetGroupStatus Access Denied\\\"\\n      );\\n    }\\n    require(bytes(data.groupMap[group].name).length != 0, \\\"Group Not Found\\\");\\n    data.groupMap[group].isEnabled = status;\\n    return true;\\n  }\\n\\n  function hasGroupRole(\\n    AccessControlStorage.DataMaps storage data,\\n    bytes32 group,\\n    bytes32 role\\n  ) external view returns (bool) {\\n    return bytes(data.groupMap[group].name).length != 0 && data.groupMap[group].roleSet.contains(role);\\n  }\\n\\n  function getGroupInfo(AccessControlStorage.DataMaps storage data, bytes32 group)\\n    external\\n    view\\n    returns (string memory, bool)\\n  {\\n    return (data.groupMap[group].name, data.groupMap[group].isEnabled);\\n  }\\n\\n  function getGroupRoles(AccessControlStorage.DataMaps storage data, bytes32 group)\\n    external\\n    view\\n    returns (bytes32[] memory)\\n  {\\n    return data.groupMap[group].roleSet.values();\\n  }\\n\\n  function getLibrary() external pure returns (address) {\\n    return address(LAccessControl);\\n  }\\n}\\n\",\"keccak256\":\"0x9def5541bbd17b66d6bedf9ab8fa75932add34176e9840a5be4fd693d2d20771\",\"license\":\"MIT\"},\"src/contracts/lib/struct/LEnumerableMap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"./LEnumerableSet.sol\\\";\\n\\n/**\\n * @dev Library for managing an enumerable variant of Solidity's\\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\n * type.\\n *\\n * Maps have the following properties:\\n *\\n * - Entries are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\\n *\\n *     // Declare a set state variable\\n *     EnumerableMap.UintToAddressMap private myMap;\\n * }\\n * ```\\n *\\n * The following map types are supported:\\n *\\n * - `uint256 -> address` (`UintToAddressMap`) \\n * - `address -> uint256` (`AddressToUintMap`) \\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32`) \\n * - `uint256 -> uint256` (`UintToUintMap`) \\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) \\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\\n * ====\\n */\\nlibrary LEnumerableMap {\\n    using LEnumerableSet for LEnumerableSet.Bytes32Set;\\n\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Map type with\\n    // bytes32 keys and values.\\n    // The Map implementation uses private functions, and user-facing\\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\\n    // the underlying Map.\\n    // This means that we can only create new EnumerableMaps for types that fit\\n    // in bytes32.\\n\\n    struct Bytes32ToBytes32Map {\\n        // Storage of keys\\n        LEnumerableSet.Bytes32Set _keys;\\n        mapping(bytes32 => bytes32) _values;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        Bytes32ToBytes32Map storage map,\\n        bytes32 key,\\n        bytes32 value\\n    ) internal returns (bool) {\\n        map._values[key] = value;\\n        return map._keys.add(key);\\n    }\\n\\n    /**\\n     * @dev Removes a key-value pair from a map. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\\n        delete map._values[key];\\n        return map._keys.remove(key);\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\\n        return map._keys.contains(key);\\n    }\\n\\n    /**\\n     * @dev Returns the number of key-value pairs in the map. O(1).\\n     */\\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\\n        return map._keys.length();\\n    }\\n\\n    /**\\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of entries inside the\\n     * array, and it may change when more entries are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\\n        bytes32 key = map._keys.at(index);\\n        return (key, map._values[key]);\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\\n        bytes32 value = map._values[key];\\n        if (value == bytes32(0)) {\\n            return (contains(map, key), bytes32(0));\\n        } else {\\n            return (true, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || contains(map, key), \\\"EnumerableMap: nonexistent key\\\");\\n        return value;\\n    }\\n\\n    /**\\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\\n     */\\n    function get(\\n        Bytes32ToBytes32Map storage map,\\n        bytes32 key,\\n        string memory errorMessage\\n    ) internal view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || contains(map, key), errorMessage);\\n        return value;\\n    }\\n\\n    // UintToUintMap\\n\\n    struct UintToUintMap {\\n        Bytes32ToBytes32Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        UintToUintMap storage map,\\n        uint256 key,\\n        uint256 value\\n    ) internal returns (bool) {\\n        return set(map._inner, bytes32(key), bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\\n        return remove(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\\n        return contains(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(UintToUintMap storage map) internal view returns (uint256) {\\n        return length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\\n        (bytes32 key, bytes32 value) = at(map._inner, index);\\n        return (uint256(key), uint256(value));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\\n        return (success, uint256(value));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\\n        return uint256(get(map._inner, bytes32(key)));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        UintToUintMap storage map,\\n        uint256 key,\\n        string memory errorMessage\\n    ) internal view returns (uint256) {\\n        return uint256(get(map._inner, bytes32(key), errorMessage));\\n    }\\n\\n    // UintToAddressMap\\n\\n    struct UintToAddressMap {\\n        Bytes32ToBytes32Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        address value\\n    ) internal returns (bool) {\\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\\n        return remove(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\\n        return contains(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\\n        return length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\\n        (bytes32 key, bytes32 value) = at(map._inner, index);\\n        return (uint256(key), address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\\n        return (success, address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        string memory errorMessage\\n    ) internal view returns (address) {\\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\\n    }\\n\\n    // AddressToUintMap\\n\\n    struct AddressToUintMap {\\n        Bytes32ToBytes32Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        AddressToUintMap storage map,\\n        address key,\\n        uint256 value\\n    ) internal returns (bool) {\\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\\n        return remove(map._inner, bytes32(uint256(uint160(key))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\\n        return contains(map._inner, bytes32(uint256(uint160(key))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\\n        return length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\\n        (bytes32 key, bytes32 value) = at(map._inner, index);\\n        return (address(uint160(uint256(key))), uint256(value));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\\n        return (success, uint256(value));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        AddressToUintMap storage map,\\n        address key,\\n        string memory errorMessage\\n    ) internal view returns (uint256) {\\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\\n    }\\n\\n    // Bytes32ToUintMap\\n\\n    struct Bytes32ToUintMap {\\n        Bytes32ToBytes32Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        Bytes32ToUintMap storage map,\\n        bytes32 key,\\n        uint256 value\\n    ) internal returns (bool) {\\n        return set(map._inner, key, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\\n        return remove(map._inner, key);\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\\n        return contains(map._inner, key);\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\\n        return length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\\n        (bytes32 key, bytes32 value) = at(map._inner, index);\\n        return (key, uint256(value));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\\n        (bool success, bytes32 value) = tryGet(map._inner, key);\\n        return (success, uint256(value));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\\n        return uint256(get(map._inner, key));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        Bytes32ToUintMap storage map,\\n        bytes32 key,\\n        string memory errorMessage\\n    ) internal view returns (uint256) {\\n        return uint256(get(map._inner, key, errorMessage));\\n    }\\n}\\n\",\"keccak256\":\"0x902b2d606e688f51f33d0a1db574be9cc049c20e7c8fd43cde744e2ec3743eb6\",\"license\":\"MIT\"},\"src/contracts/lib/struct/LEnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary LEnumerableSet {\\n  // To implement this library for multiple types with as little code\\n  // repetition as possible, we write it in terms of a generic Set type with\\n  // bytes32 values.\\n  // The Set implementation uses private functions, and user-facing\\n  // implementations (such as AddressSet) are just wrappers around the\\n  // underlying Set.\\n  // This means that we can only create new EnumerableSets for types that fit\\n  // in bytes32.\\n\\n  struct Set {\\n    // Storage of set values\\n    bytes32[] _values;\\n    // Position of the value in the `values` array, plus 1 because index 0\\n    // means a value is not in the set.\\n    mapping(bytes32 => uint256) _indexes;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function _add(Set storage set, bytes32 value) private returns (bool) {\\n    if (!_contains(set, value)) {\\n      set._values.push(value);\\n      // The value is stored at length-1, but we add 1 to all indexes\\n      // and use 0 as a sentinel value\\n      set._indexes[value] = set._values.length;\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function _remove(Set storage set, bytes32 value) private returns (bool) {\\n    // We read and store the value's index to prevent multiple reads from the same storage slot\\n    uint256 valueIndex = set._indexes[value];\\n\\n    if (valueIndex != 0) {\\n      // Equivalent to contains(set, value)\\n      // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n      // the array, and then remove the last element (sometimes called as 'swap and pop').\\n      // This modifies the order of the array, as noted in {at}.\\n\\n      uint256 toDeleteIndex = valueIndex - 1;\\n      uint256 lastIndex = set._values.length - 1;\\n\\n      if (lastIndex != toDeleteIndex) {\\n        bytes32 lastValue = set._values[lastIndex];\\n\\n        // Move the last value to the index where the value to delete is\\n        set._values[toDeleteIndex] = lastValue;\\n        // Update the index for the moved value\\n        set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n      }\\n\\n      // Delete the slot where the moved value was stored\\n      set._values.pop();\\n\\n      // Delete the index for the deleted slot\\n      delete set._indexes[value];\\n\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n    return set._indexes[value] != 0;\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function _length(Set storage set) private view returns (uint256) {\\n    return set._values.length;\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n    return set._values[index];\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function _values(Set storage set) private view returns (bytes32[] memory) {\\n    return set._values;\\n  }\\n\\n  // Bytes32Set\\n\\n  struct Bytes32Set {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _add(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n    return _remove(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n    return _contains(set._inner, value);\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(Bytes32Set storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n    return _at(set._inner, index);\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n    return _values(set._inner);\\n  }\\n\\n  // AddressSet\\n\\n  struct AddressSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(AddressSet storage set, address value) internal returns (bool) {\\n    return _add(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(AddressSet storage set, address value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(AddressSet storage set, address value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(uint256(uint160(value))));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values in the set. O(1).\\n   */\\n  function length(AddressSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n    return address(uint160(uint256(_at(set._inner, index))));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(AddressSet storage set) internal view returns (address[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    address[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n\\n  // UintSet\\n\\n  struct UintSet {\\n    Set _inner;\\n  }\\n\\n  /**\\n   * @dev Add a value to a set. O(1).\\n   *\\n   * Returns true if the value was added to the set, that is if it was not\\n   * already present.\\n   */\\n  function add(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _add(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Removes a value from a set. O(1).\\n   *\\n   * Returns true if the value was removed from the set, that is if it was\\n   * present.\\n   */\\n  function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n    return _remove(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns true if the value is in the set. O(1).\\n   */\\n  function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n    return _contains(set._inner, bytes32(value));\\n  }\\n\\n  /**\\n   * @dev Returns the number of values on the set. O(1).\\n   */\\n  function length(UintSet storage set) internal view returns (uint256) {\\n    return _length(set._inner);\\n  }\\n\\n  /**\\n   * @dev Returns the value stored at position `index` in the set. O(1).\\n   *\\n   * Note that there are no guarantees on the ordering of values inside the\\n   * array, and it may change when more values are added or removed.\\n   *\\n   * Requirements:\\n   *\\n   * - `index` must be strictly less than {length}.\\n   */\\n  function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n    return uint256(_at(set._inner, index));\\n  }\\n\\n  /**\\n   * @dev Return the entire set in an array\\n   *\\n   * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n   * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n   * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n   * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n   */\\n  function values(UintSet storage set) internal view returns (uint256[] memory) {\\n    bytes32[] memory store = _values(set._inner);\\n    uint256[] memory result;\\n\\n    assembly {\\n      result := store\\n    }\\n\\n    return result;\\n  }\\n}\\n\",\"keccak256\":\"0xeb49909b77ba631382c48e9fead2e49f8b4c72f3325f7685d4bddfce32d7528b\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseUUPSStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n */\\n\\nabstract contract BaseUUPSStorage {\\n  // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n  bytes32 internal constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n  /**\\n   * @dev Storage slot with the address of the current implementation.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n  /**\\n   * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n   * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n   */\\n  bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n  /**\\n   * @dev Storage slot with the admin of the contract.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  bytes32 internal constant _TYPE_HASH =\\n    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n\\n  /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n  address internal immutable __self = address(this);\\n  address internal _accessControlManager;\\n  bytes32 internal _domainName;\\n  bytes32 internal _domainVersion;\\n  bytes32 internal _domainRealm;\\n  bool internal _isSafeMode;\\n  bool internal _isUpgradable;\\n\\n  /**\\n   * @dev This empty reserved space is put in place to allow future versions to add new\\n   * variables without shifting down storage in the inheritance chain.\\n   */\\n  uint256[64] private __gap;\\n}\\n\",\"keccak256\":\"0xf6c16a3c2228a761ae6c955c6db7b8341a16eeb72a48896b5555623d155fb80a\",\"license\":\"MIT\"},\"src/contracts/proxy/IBaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IBaseProxy {\\n  event Upgraded(address indexed sender, address indexed proxy, address indexed newImplementation);\\n}\\n\",\"keccak256\":\"0x719d13ceb21e3fda10fc0ba5fb1b167b8736919d6c6a99f6268667acb8b4d062\",\"license\":\"MIT\"},\"src/contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"./IBaseProxy.sol\\\";\\n\\ninterface IProxy is IBaseProxy {\\n  /**\\n   * @dev Emitted when the admin account has changed.\\n   */\\n  event LocalAdminChanged(address indexed sender, address indexed proxy, address newAdmin);\\n\\n  event SafeModeChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  event UpgradeStatusChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  /**\\n   * @dev Triggered when the contract has been initialized or reinitialized.\\n   */\\n  event Initialized(\\n    address indexed sender,\\n    address indexed proxy,\\n    address indexed subject,\\n    string name,\\n    string version,\\n    bytes32 realm,\\n    uint16 initCount\\n  );\\n\\n  function upgradeTo(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) external returns (bytes memory);\\n\\n  function setSafeMode(bool status) external returns (bool);\\n\\n  function setUpgradeStatus(bool status) external returns (bool);\\n\\n  function setLocalAdmin(address newAdmin) external returns (bool);\\n\\n  function contractName() external view returns (bytes32);\\n\\n  function contractVersion() external view returns (bytes32);\\n\\n  function contractRealm() external view returns (bytes32);\\n\\n  function contractContext() external view returns (bytes32);\\n\\n  function accessControlManager() external view returns (address);\\n\\n  function subjectAddress() external view returns (address);\\n\\n  function isSafeMode() external view returns (bool);\\n\\n  function isUpgradable() external view returns (bool);\\n\\n  function localAdmin() external view returns (address);\\n\\n  function domainSeparator() external view returns (bytes32);\\n\\n  function initVersion() external view returns (uint16);\\n\\n}\\n\",\"keccak256\":\"0x93bf3ccb33a8616fba3379b096e79e88ae3249882af81d1dc808eec6688800a7\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}