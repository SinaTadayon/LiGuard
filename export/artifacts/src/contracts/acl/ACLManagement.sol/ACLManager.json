{
  "contractName": "ACLManager",
  "sourceName": "src/contracts/acl/ACLManagement.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "realm",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "ActivityChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "version",
          "type": "uint16"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "ProxyAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newVersion",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldVersion",
          "type": "string"
        }
      ],
      "name": "ProxyUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "realm",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "UpgradablilityChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "getProxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActivated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUpgradable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setActivity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setProxyAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setUpgradability",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectContext",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectRealm",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "forceInitCall",
          "type": "bool"
        }
      ],
      "name": "upgradeTo",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x60a0604052306080523480156200001557600080fd5b506200002062000031565b6200002b3362000041565b62000296565b6200003e61ffff62000136565b50565b6001600160a01b0381166200009d5760405162461bcd60e51b815260206004820152601d60248201527f6e65772061646d696e20697320746865207a65726f206164647265737300000060448201526064015b60405180910390fd5b30337f6dd9a711c71f2384e1a3f1ab85a1d06eee5c81ec1e377a10e6b672052116362d620000ca6200024b565b604080516001600160a01b03928316815291861660208301520160405180910390a38062000115600080516020620014d783398151915260001b6200028460201b6200060e1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60455460009062010000900460ff1615620001cf578161ffff16600114801562000173575062000171306200028760201b620006111760201c565b155b620001c75760405162461bcd60e51b815260206004820152602e6024820152600080516020620014b783398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000094565b506000919050565b60455461ffff8084169116106200022f5760405162461bcd60e51b815260206004820152602e6024820152600080516020620014b783398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000094565b506045805461ffff191661ffff92909216919091179055600190565b600062000275600080516020620014d783398151915260001b6200028460201b6200060e1760201c565b546001600160a01b0316919050565b90565b6001600160a01b03163b151590565b6080516111f7620002c060003960008181610322015281816103d3015261045801526111f76000f3fe6080604052600436106100c65760003560e01c80635c60da1b1161007f5780638b3240a0116100595780638b3240a014610229578063900574a51461023e5780639dd0725414610253578063cf891e2b14610273576100d5565b80635c60da1b146101ba5780637147855d146101e7578063886ddb5214610214576100d5565b8063133899f5146100dd57806347c02661146101125780634a8c1fb4146101325780634bce20dd1461014a57806352d1902d146101885780635479d9401461019d576100d5565b366100d5576100d3610288565b005b6100d3610288565b3480156100e957600080fd5b506100fd6100f8366004610e32565b61029a565b60405190151581526020015b60405180910390f35b34801561011e57600080fd5b506100fd61012d366004610e6b565b6102fd565b34801561013e57600080fd5b5060045460ff166100fd565b34801561015657600080fd5b50604080513060208083019190915282518083038201815291830190925280519101205b604051908152602001610109565b34801561019457600080fd5b5061017a610315565b3480156101a957600080fd5b50600454610100900460ff166100fd565b3480156101c657600080fd5b506101cf6103bd565b6040516001600160a01b039091168152602001610109565b3480156101f357600080fd5b50610207610202366004610ef5565b6103c7565b6040516101099190610ff6565b34801561022057600080fd5b5060035461017a565b34801561023557600080fd5b506101cf610511565b34801561024a57600080fd5b5061020761051b565b34801561025f57600080fd5b506100fd61026e366004610e32565b6105ad565b34801561027f57600080fd5b506102076105ff565b610298610293610620565b610641565b565b6004805461ff0019166101008315150217905560035460009030336001600160a01b03167fbcecca91f4cd073bcfd7630ef1a39f42ce6cc45c2ca12324e82e1d9021e71c9b856040516102f1911515815260200190565b60405180910390a45090565b600061030882610665565b506001919050565b905090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103aa5760405162461bcd60e51b815260206004820152602d60248201527f555550533a206d757374206e6f742062652063616c6c6564207468726f75676860448201526c0819195b1959d85d1958d85b1b609a1b60648201526084015b60405180910390fd5b5060008051602061117b83398151915290565b6000610310610620565b60606001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104565760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016103a1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610488610620565b6001600160a01b0316146104f35760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016103a1565b6104fc8461074c565b610507848484610802565b90505b9392505050565b600061031061098b565b60606001805461052a90611009565b80601f016020809104026020016040519081016040528092919081815260200182805461055690611009565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050905090565b6004805460ff191682151517905560035460009030336001600160a01b03167f139c91c652708a87d9a40a2cbfb6d5d37c20d1dcd2a75b2d0c09b59a214474bc856040516102f1911515815260200190565b60606002805461052a90611009565b90565b6001600160a01b03163b151590565b600060008051602061117b8339815191525b546001600160a01b0316919050565b3660008037600080366000845af43d6000803e808015610660573d6000f35b3d6000fd5b6001600160a01b0381166106bb5760405162461bcd60e51b815260206004820152601d60248201527f6e65772061646d696e20697320746865207a65726f206164647265737300000060448201526064016103a1565b30337f6dd9a711c71f2384e1a3f1ab85a1d06eee5c81ec1e377a10e6b672052116362d6106e661098b565b604080516001600160a01b03928316815291861660208301520160405180910390a3807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b61075c637147855d60e01b6109b3565b6107a85760405162461bcd60e51b815260206004820152601f60248201527f436f6e74657874205570677261646162696c69747920466f7262696464656e0060448201526064016103a1565b600454610100900460ff166107ff5760405162461bcd60e51b815260206004820152601960248201527f436f6e74657874204973204e6f742055706772616461626c650000000000000060448201526064016103a1565b50565b60607f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561084c5761083784610a60565b5060408051600081526020810190915261050a565b836001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156108a6575060408051601f3d908101601f191682019092526108a391810190611043565b60015b6109095760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103a1565b60008051602061117b83398151915281146109785760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103a1565b50610984848484610b04565b905061050a565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610632565b60008054604080513060208083019190915282518083038201815291830190925280519101206001600160a01b039091169063c7ab39e6906040516001600160e01b031960e084901b8116825260048201929092523360248201529085166044820152606401602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a919061105c565b92915050565b60045460ff16610a825760405162461bcd60e51b81526004016103a190611079565b6001600160a01b0381163b610aef5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103a1565b8060008051602061117b83398151915261072b565b6060610b0f84610b42565b600083511180610b1c5750815b15610b2b576109848484610cd4565b505060408051600081526020810190915292915050565b60045460ff16610b645760405162461bcd60e51b81526004016103a190611079565b6000610b6e610620565b6040519091506001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2816001600160a01b0316306001600160a01b0316336001600160a01b03167ebe01838f727d9b6a4cc703cad7dd0426a7dd3a2ad8bbc1aae8e61a5f7fdd3684866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c4a91908101906110b0565b866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c88573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb091908101906110b0565b604051610cbf9392919061111e565b60405180910390a4610cd082610a60565b5050565b60045460609060ff16610cf95760405162461bcd60e51b81526004016103a190611079565b6001600160a01b0383163b610d5f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103a1565b600080846001600160a01b031684604051610d7a919061115e565b600060405180830381855af49150503d8060008114610db5576040519150601f19603f3d011682016040523d82523d6000602084013e610dba565b606091505b5091509150610de2828260405180606001604052806027815260200161119b60279139610deb565b95945050505050565b60608315610dfa57508161050a565b825115610e0a5782518084602001fd5b8160405162461bcd60e51b81526004016103a19190610ff6565b80151581146107ff57600080fd5b600060208284031215610e4457600080fd5b813561050a81610e24565b80356001600160a01b0381168114610e6657600080fd5b919050565b600060208284031215610e7d57600080fd5b61050a82610e4f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ec557610ec5610e86565b604052919050565b600067ffffffffffffffff821115610ee757610ee7610e86565b50601f01601f191660200190565b600080600060608486031215610f0a57600080fd5b610f1384610e4f565b9250602084013567ffffffffffffffff811115610f2f57600080fd5b8401601f81018613610f4057600080fd5b8035610f53610f4e82610ecd565b610e9c565b818152876020838501011115610f6857600080fd5b816020840160208301376000602083830101528094505050506040840135610f8f81610e24565b809150509250925092565b60005b83811015610fb5578181015183820152602001610f9d565b83811115610fc4576000848401525b50505050565b60008151808452610fe2816020860160208601610f9a565b601f01601f19169290920160200192915050565b60208152600061050a6020830184610fca565b600181811c9082168061101d57607f821691505b60208210810361103d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561105557600080fd5b5051919050565b60006020828403121561106e57600080fd5b815161050a81610e24565b60208082526018908201527f436f6e74657874204973204e6f74204163746976617465640000000000000000604082015260600190565b6000602082840312156110c257600080fd5b815167ffffffffffffffff8111156110d957600080fd5b8201601f810184136110ea57600080fd5b80516110f8610f4e82610ecd565b81815285602083850101111561110d57600080fd5b610de2826020830160208601610f9a565b6001600160a01b038416815260606020820181905260009061114290830185610fca565b82810360408401526111548185610fca565b9695505050505050565b60008251611170818460208701610f9a565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220045a294cee6591528e9b74f7dbd4a95438b931c89ae18cc0dff7026f0ff142e964736f6c634300080f0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
  "deployedBytecode": "",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_115": {
          "entryPoint": null,
          "id": 115,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_1989": {
          "entryPoint": null,
          "id": 1989,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_disableInitializers_2808": {
          "entryPoint": 49,
          "id": 2808,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_getProxyAdmin_2372": {
          "entryPoint": 587,
          "id": 2372,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_msgSender_3150": {
          "entryPoint": null,
          "id": 3150,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setInitializedVersion_2851": {
          "entryPoint": 310,
          "id": 2851,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_setProxyAdmin_2410": {
          "entryPoint": 65,
          "id": 2410,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@getAddressSlot_461": {
          "entryPoint": 644,
          "id": 461,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_191": {
          "entryPoint": 647,
          "id": 191,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7d282dfd84e14a6ca4881e1a89a526f959bf908d227ce553a2f4223d5939ee72__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1093:15",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:15",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "188:179:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "205:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "216:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "198:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "198:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "198:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "239:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "250:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "235:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "235:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "255:2:15",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "228:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "228:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "278:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "289:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "274:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "274:18:15"
                          },
                          {
                            "hexValue": "6e65772061646d696e20697320746865207a65726f2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "294:31:15",
                            "type": "",
                            "value": "new admin is the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "267:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "267:59:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "267:59:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "335:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "347:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "358:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "343:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "343:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "335:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7d282dfd84e14a6ca4881e1a89a526f959bf908d227ce553a2f4223d5939ee72__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "165:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "179:4:15",
                    "type": ""
                  }
                ],
                "src": "14:353:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "501:175:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "511:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "523:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "534:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "511:4:15"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "546:29:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "564:3:15",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "569:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "560:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "560:11:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "573:1:15",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:19:15"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "550:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "591:9:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "614:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:15:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "584:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "584:34:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "584:34:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "638:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "649:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "634:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "634:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "658:6:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "666:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "654:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "654:15:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "627:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "627:43:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "627:43:15"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "462:9:15",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "473:6:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "481:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "492:4:15",
                    "type": ""
                  }
                ],
                "src": "372:304:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "855:236:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "872:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "883:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "865:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "865:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "865:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "906:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "917:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "902:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "902:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "922:2:15",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "895:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "895:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "945:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "956:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "941:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "941:18:15"
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "961:34:15",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "934:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "934:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "934:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1016:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1027:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1012:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1012:18:15"
                          },
                          {
                            "hexValue": "647920696e697469616c697a6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1032:16:15",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1005:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1005:44:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1005:44:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1058:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1070:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1081:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1066:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1058:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "832:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "846:4:15",
                    "type": ""
                  }
                ],
                "src": "681:410:15"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_7d282dfd84e14a6ca4881e1a89a526f959bf908d227ce553a2f4223d5939ee72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"new admin is the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n}",
          "id": 15,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x20 PUSH3 0x31 JUMP JUMPDEST PUSH3 0x2B CALLER PUSH3 0x41 JUMP JUMPDEST PUSH3 0x296 JUMP JUMPDEST PUSH3 0x3E PUSH2 0xFFFF PUSH3 0x136 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E65772061646D696E20697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS CALLER PUSH32 0x6DD9A711C71F2384E1A3F1AB85A1D06EEE5C81EC1E377A10E6B672052116362D PUSH3 0xCA PUSH3 0x24B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH3 0x115 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x14D7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH3 0x284 PUSH1 0x20 SHL PUSH3 0x60E OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x45 SLOAD PUSH1 0x0 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1CF JUMPI DUP2 PUSH2 0xFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH3 0x173 JUMPI POP PUSH3 0x171 ADDRESS PUSH3 0x287 PUSH1 0x20 SHL PUSH3 0x611 OR PUSH1 0x20 SHR JUMP JUMPDEST ISZERO JUMPDEST PUSH3 0x1C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x14B7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x94 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x45 SLOAD PUSH2 0xFFFF DUP1 DUP5 AND SWAP2 AND LT PUSH3 0x22F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x14B7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x94 JUMP JUMPDEST POP PUSH1 0x45 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x275 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x14D7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH3 0x284 PUSH1 0x20 SHL PUSH3 0x60E OR PUSH1 0x20 SHR JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x11F7 PUSH3 0x2C0 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x322 ADD MSTORE DUP2 DUP2 PUSH2 0x3D3 ADD MSTORE PUSH2 0x458 ADD MSTORE PUSH2 0x11F7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x8B3240A0 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8B3240A0 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x900574A5 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x9DD07254 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xCF891E2B EQ PUSH2 0x273 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x7147855D EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x886DDB52 EQ PUSH2 0x214 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x133899F5 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x47C02661 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4A8C1FB4 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x4BCE20DD EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x5479D940 EQ PUSH2 0x19D JUMPI PUSH2 0xD5 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD5 JUMPI PUSH2 0xD3 PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0x288 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x17A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x511 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x51B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x298 PUSH2 0x293 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBCECCA91F4CD073BCFD7630EF1A39F42CE6CC45C2CA12324E82E1D9021E71C9B DUP6 PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 DUP3 PUSH2 0x665 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550533A206D757374206E6F742062652063616C6C6564207468726F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x819195B1959D85D1958D85B1B PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x488 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x4FC DUP5 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x507 DUP5 DUP5 DUP5 PUSH2 0x802 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x578 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x586 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x139C91C652708A87D9A40A2CBFB6D5D37C20D1DCD2A75B2D0C09B59A214474BC DUP6 PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1009 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E65772061646D696E20697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A1 JUMP JUMPDEST ADDRESS CALLER PUSH32 0x6DD9A711C71F2384E1A3F1AB85A1D06EEE5C81EC1E377A10E6B672052116362D PUSH2 0x6E6 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x75C PUSH4 0x7147855D PUSH1 0xE0 SHL PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74657874205570677261646162696C69747920466F7262696464656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74657874204973204E6F742055706772616461626C6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x84C JUMPI PUSH2 0x837 DUP5 PUSH2 0xA60 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x50A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8A3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST POP PUSH2 0x984 DUP5 DUP5 DUP5 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH2 0x50A JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC7AB39E6 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL DUP2 AND DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x72B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB0F DUP5 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0xB1C JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0xB2B JUMPI PUSH2 0x984 DUP5 DUP5 PUSH2 0xCD4 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6E PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH31 0xBE01838F727D9B6A4CC703CAD7DD0426A7DD3A2AD8BBC1AAE8E61A5F7FDD36 DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF891E2B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC4A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10B0 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF891E2B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCB0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCD0 DUP3 PUSH2 0xA60 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xDE2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119B PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDEB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xDFA JUMPI POP DUP2 PUSH2 0x50A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xE0A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x50A DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50A DUP3 PUSH2 0xE4F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC5 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE7 PUSH2 0xE86 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF13 DUP5 PUSH2 0xE4F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xF53 PUSH2 0xF4E DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xF8F DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF9D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFE2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x50A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x101D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x103D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x50A DUP2 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E74657874204973204E6F74204163746976617465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x10EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x10F8 PUSH2 0xF4E DUP3 PUSH2 0xECD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x110D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE2 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1142 SWAP1 DUP4 ADD DUP6 PUSH2 0xFCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1154 DUP2 DUP6 PUSH2 0xFCA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1170 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122004 GAS 0x29 0x4C 0xEE PUSH6 0x91528E9B74F7 0xDB 0xD4 0xA9 SLOAD CODESIZE 0xB9 BALANCE 0xC8 SWAP11 0xE1 DUP13 0xC0 0xDF 0xF7 MUL PUSH16 0xFF142E964736F6C634300080F003349 PUSH15 0x697469616C697A61626C653A20636F PUSH15 0x747261637420697320616C726561B5 BALANCE 0x27 PUSH9 0x4A568B3173AE13B9F8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB ",
      "sourceMap": "237:1942:0:-:0;;;2688:4:9;2644:49;;1836:22:0;;;;;;;;;-1:-1:-1;3274:22:8;:20;:22::i;:::-;3304:28;707:10:14;3304:14:8;:28::i;:::-;237:1942:0;;5034:106:12;5093:40;5116:16;5093:22;:40::i;:::-;;5034:106::o;10675:294:8:-;-1:-1:-1;;;;;10743:22:8;;10735:64;;;;-1:-1:-1;;;10735:64:8;;216:2:15;10735:64:8;;;198:21:15;255:2;235:18;;;228:30;294:31;274:18;;;267:59;343:18;;10735:64:8;;;;;;;;;10854:4;707:10:14;10814:74:8;10861:16;:14;:16::i;:::-;10814:74;;;-1:-1:-1;;;;;602:15:15;;;584:34;;654:15;;;649:2;634:18;;627:43;519:18;10814:74:8;;;;;;;10946:8;10898:39;-1:-1:-1;;;;;;;;;;;10925:11:8;;10898:26;;;;;:39;;:::i;:::-;:56;;-1:-1:-1;;;;;;10898:56:8;-1:-1:-1;;;;;10898:56:8;;;;;;;;;;-1:-1:-1;10675:294:8:o;5146:798:12:-;5544:13;;5211:4;;5544:13;;;;;5540:398;;;5598:7;:12;;5609:1;5598:12;:50;;;;;5615:33;5642:4;5615:18;;;;;:33;;:::i;:::-;5614:34;5598:50;5573:155;;;;-1:-1:-1;;;5573:155:12;;883:2:15;5573:155:12;;;865:21:15;922:2;902:18;;;895:30;-1:-1:-1;;;;;;;;;;;941:18:15;;;934:62;-1:-1:-1;;;1012:18:15;;;1005:44;1066:19;;5573:155:12;681:410:15;5573:155:12;-1:-1:-1;5749:5:12;;5146:798;-1:-1:-1;5146:798:12:o;5540:398::-;5793:12;;:22;;;;:12;;:22;5785:81;;;;-1:-1:-1;;;5785:81:12;;883:2:15;5785:81:12;;;865:21:15;922:2;902:18;;;895:30;-1:-1:-1;;;;;;;;;;;941:18:15;;;934:62;-1:-1:-1;;;1012:18:15;;;1005:44;1066:19;;5785:81:12;681:410:15;5785:81:12;-1:-1:-1;5880:12:12;:22;;-1:-1:-1;;5880:22:12;;;;;;;;;;;;-1:-1:-1;;5146:798:12:o;10466:127:8:-;10515:7;10541:39;-1:-1:-1;;;;;;;;;;;10568:11:8;;10541:26;;;;;:39;;:::i;:::-;:45;-1:-1:-1;;;;;10541:45:8;;10466:127;-1:-1:-1;10466:127:8:o;1602:147:4:-;1729:4;1602:147::o;1110:320:2:-;-1:-1:-1;;;;;1400:19:2;;:23;;;1110:320::o;681:410:15:-;237:1942:0;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_1861": {
          "entryPoint": null,
          "id": 1861,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_1869": {
          "entryPoint": null,
          "id": 1869,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_authorizeUpgrade_2336": {
          "entryPoint": 1868,
          "id": 2336,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_beforeFallback_1874": {
          "entryPoint": null,
          "id": 1874,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_delegate_1834": {
          "entryPoint": 1601,
          "id": 1834,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_fallback_1853": {
          "entryPoint": 648,
          "id": 1853,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_functionDelegateCall_2279": {
          "entryPoint": 3284,
          "id": 2279,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@_getProxyAdmin_2372": {
          "entryPoint": 2443,
          "id": 2372,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_hasPermission_1976": {
          "entryPoint": 2483,
          "id": 1976,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_implementation_2069": {
          "entryPoint": 1568,
          "id": 2069,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_msgSender_3150": {
          "entryPoint": null,
          "id": 3150,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setImplementation_2098": {
          "entryPoint": 2656,
          "id": 2098,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_setProxyAdmin_2410": {
          "entryPoint": 1637,
          "id": 2410,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_upgradeToAndCallUUPS_2239": {
          "entryPoint": 2050,
          "id": 2239,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_upgradeToAndCall_2179": {
          "entryPoint": 2820,
          "id": 2179,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_upgradeTo_2144": {
          "entryPoint": 2882,
          "id": 2144,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@generateCtx_434": {
          "entryPoint": null,
          "id": 434,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getAddressSlot_461": {
          "entryPoint": 1550,
          "id": 461,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getBooleanSlot_472": {
          "entryPoint": null,
          "id": 472,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getProxyAdmin_2345": {
          "entryPoint": 1297,
          "id": 2345,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@implementation_2507": {
          "entryPoint": 957,
          "id": 2507,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@isActivated_2515": {
          "entryPoint": null,
          "id": 2515,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@isContract_191": {
          "entryPoint": 1553,
          "id": 191,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isUpgradable_2523": {
          "entryPoint": null,
          "id": 2523,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@proxiableUUID_2291": {
          "entryPoint": 789,
          "id": 2291,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@setActivity_2435": {
          "entryPoint": 1453,
          "id": 2435,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@setProxyAdmin_2359": {
          "entryPoint": 765,
          "id": 2359,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@setUpgradability_2460": {
          "entryPoint": 666,
          "id": 2460,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@subjectContext_2498": {
          "entryPoint": null,
          "id": 2498,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@subjectName_2468": {
          "entryPoint": 1307,
          "id": 2468,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@subjectRealm_2484": {
          "entryPoint": null,
          "id": 2484,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@subjectVersion_2476": {
          "entryPoint": 1535,
          "id": 2476,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@upgradeTo_2315": {
          "entryPoint": 967,
          "id": 2315,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@verifyCallResult_415": {
          "entryPoint": 3563,
          "id": 415,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_address": {
          "entryPoint": 3663,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 3691,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_bytes_memory_ptrt_bool": {
          "entryPoint": 3829,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_bool": {
          "entryPoint": 3634,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 4188,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": 4163,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_string_memory_ptr_fromMemory": {
          "entryPoint": 4272,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_bytes": {
          "entryPoint": 4042,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 4446,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 4382,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32_t_address_t_bytes4__to_t_bytes32_t_address_t_bytes4__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 4086,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_54bc6b0dcc7aaa5f447395dc6099050577a48784ca581f03c496695e4d94d558__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 4217,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_6fe5addd6ece62d7460778fb1439987320824260d0e81d0d4972e18159bf9be3__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7d282dfd84e14a6ca4881e1a89a526f959bf908d227ce553a2f4223d5939ee72__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_cb43e960845ccd56bc04bcc3cb9780423b1f82f5709f765fd5fed7a2a877dc3e__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_f07ae4a81de0747ef6d715728595b1355713b8cb7e2d926cbdc3ce8a55c8b29d__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "allocate_memory": {
          "entryPoint": 3740,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "array_allocation_size_bytes": {
          "entryPoint": 3789,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "copy_memory_to_memory": {
          "entryPoint": 3994,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "extract_byte_array_length": {
          "entryPoint": 4105,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x41": {
          "entryPoint": 3718,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_bool": {
          "entryPoint": 3620,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:11005:15",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:15",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "56:76:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "110:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "119:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "122:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "112:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "112:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "112:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "79:5:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "100:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "93:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "93:13:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "86:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "86:21:15"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "76:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "76:32:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "69:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "69:40:15"
                      },
                      "nodeType": "YulIf",
                      "src": "66:60:15"
                    }
                  ]
                },
                "name": "validator_revert_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "45:5:15",
                    "type": ""
                  }
                ],
                "src": "14:118:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "204:174:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "250:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "259:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "262:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "252:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "252:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "252:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "225:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "234:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "221:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "246:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "217:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "217:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "214:52:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "275:36:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "301:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "288:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "288:23:15"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "279:5:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "342:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bool",
                          "nodeType": "YulIdentifier",
                          "src": "320:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "320:28:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "320:28:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "357:15:15",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "367:5:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "357:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "170:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "181:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "193:6:15",
                    "type": ""
                  }
                ],
                "src": "137:241:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "478:92:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "488:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "511:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "496:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "496:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "488:4:15"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "530:9:15"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "555:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "548:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "548:14:15"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "541:6:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "541:22:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "523:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "523:41:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "523:41:15"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "447:9:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "458:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "469:4:15",
                    "type": ""
                  }
                ],
                "src": "383:187:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "624:124:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "634:29:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "656:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "643:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "643:20:15"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "634:5:15"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "726:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "735:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "738:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "728:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "728:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "728:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "685:5:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "696:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "711:3:15",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "716:1:15",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "707:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "707:11:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "720:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "703:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "703:19:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "692:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "692:31:15"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "682:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "682:42:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "675:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "675:50:15"
                      },
                      "nodeType": "YulIf",
                      "src": "672:70:15"
                    }
                  ]
                },
                "name": "abi_decode_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "603:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "614:5:15",
                    "type": ""
                  }
                ],
                "src": "575:173:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "823:116:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "869:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "878:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "881:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "871:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "871:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "871:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "844:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "853:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "840:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "840:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "865:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "836:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "836:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "833:52:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "894:39:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "923:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "904:18:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "904:29:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "894:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "789:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "800:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "812:6:15",
                    "type": ""
                  }
                ],
                "src": "753:186:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1045:76:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1055:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1067:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1078:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1063:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1063:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1055:4:15"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1097:9:15"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1108:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:25:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1090:25:15"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1014:9:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1025:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1036:4:15",
                    "type": ""
                  }
                ],
                "src": "944:177:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1227:102:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1237:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1249:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1260:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1245:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1237:4:15"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1279:9:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1294:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1310:3:15",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1315:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1306:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1306:11:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1319:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1302:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1302:19:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1290:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1290:32:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1272:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1272:51:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1272:51:15"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1196:9:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1207:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1218:4:15",
                    "type": ""
                  }
                ],
                "src": "1126:203:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1366:95:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1383:1:15",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1390:3:15",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1395:10:15",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1386:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1386:20:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1376:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1376:31:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1376:31:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1423:1:15",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1426:4:15",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1416:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1416:15:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1416:15:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1447:1:15",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1450:4:15",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "1440:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1440:15:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1440:15:15"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "1334:127:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1511:230:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1521:19:15",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1537:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1531:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1531:9:15"
                      },
                      "variableNames": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulIdentifier",
                          "src": "1521:6:15"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1549:58:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1571:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "1587:4:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1593:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1583:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1583:13:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1602:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1598:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1598:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1579:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1579:27:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1567:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1567:40:15"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "1553:10:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1682:22:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1684:16:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1684:18:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1684:18:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1625:10:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1637:18:15",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1622:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:34:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1661:10:15"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1673:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1658:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1658:22:15"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "1619:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1619:62:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1616:88:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1720:2:15",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1724:10:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1713:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1713:22:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1713:22:15"
                    }
                  ]
                },
                "name": "allocate_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "size",
                    "nodeType": "YulTypedName",
                    "src": "1491:4:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "memPtr",
                    "nodeType": "YulTypedName",
                    "src": "1500:6:15",
                    "type": ""
                  }
                ],
                "src": "1466:275:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1803:129:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1847:22:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1849:16:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1849:18:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1849:18:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1827:18:15",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1816:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1816:30:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1813:56:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1878:48:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1898:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1906:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1894:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1894:15:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1915:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1911:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1911:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1890:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1890:29:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1921:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1886:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1886:40:15"
                      },
                      "variableNames": [
                        {
                          "name": "size",
                          "nodeType": "YulIdentifier",
                          "src": "1878:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "array_allocation_size_bytes",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "1783:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "size",
                    "nodeType": "YulTypedName",
                    "src": "1794:4:15",
                    "type": ""
                  }
                ],
                "src": "1746:186:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2047:764:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2093:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2102:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2105:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2095:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2095:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2095:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2068:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2077:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2064:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2064:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2089:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2060:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2060:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "2057:52:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2118:39:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2147:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2128:18:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2128:29:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2118:6:15"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2166:46:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2197:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2208:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2193:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2193:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2180:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2180:32:15"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2170:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2255:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2264:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2267:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2257:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2257:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2257:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2227:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2235:18:15",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2224:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2224:30:15"
                      },
                      "nodeType": "YulIf",
                      "src": "2221:50:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2280:32:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2294:9:15"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2305:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2290:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2290:22:15"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2284:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2360:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2369:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2372:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2362:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2362:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2362:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2339:2:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2343:4:15",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2335:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2335:13:15"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2350:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2331:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2331:27:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2324:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2324:35:15"
                      },
                      "nodeType": "YulIf",
                      "src": "2321:55:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2385:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2408:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2395:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2395:16:15"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "2389:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2420:61:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2477:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_allocation_size_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "2449:27:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2449:31:15"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "2433:15:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2433:48:15"
                      },
                      "variables": [
                        {
                          "name": "array",
                          "nodeType": "YulTypedName",
                          "src": "2424:5:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "2497:5:15"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2504:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2490:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2490:17:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2490:17:15"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2553:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2562:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2565:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2555:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2555:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2555:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2530:2:15"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2534:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2526:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2526:11:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2539:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2522:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2522:20:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2544:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2519:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2519:33:15"
                      },
                      "nodeType": "YulIf",
                      "src": "2516:53:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2595:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2602:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2591:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2591:14:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2611:2:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2615:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2607:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2607:11:15"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2620:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "2578:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2578:45:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2578:45:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "2647:5:15"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2654:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2643:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2643:14:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2659:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2639:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2639:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2664:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2632:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2632:34:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2632:34:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2675:15:15",
                      "value": {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2685:5:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2675:6:15"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2699:45:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2729:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2740:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2725:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2725:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2712:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2712:32:15"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2703:5:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2775:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2753:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2753:28:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2753:28:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2790:15:15",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2800:5:15"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2790:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1997:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2008:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2020:6:15",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2028:6:15",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2036:6:15",
                    "type": ""
                  }
                ],
                "src": "1937:874:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2869:205:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2879:10:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2888:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "2883:1:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2948:63:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "2973:3:15"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2978:1:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2969:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2969:11:15"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "2992:3:15"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2997:1:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2988:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2988:11:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2982:5:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2982:18:15"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2962:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2962:39:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2962:39:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2909:1:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2912:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2906:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2906:13:15"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "2920:19:15",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2922:15:15",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2931:1:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2934:2:15",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2927:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2927:10:15"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "2922:1:15"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "2902:3:15",
                        "statements": []
                      },
                      "src": "2898:113:15"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3037:31:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "3050:3:15"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3055:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3046:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3046:16:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3064:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3039:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3039:27:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3039:27:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3026:1:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3029:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3023:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3023:13:15"
                      },
                      "nodeType": "YulIf",
                      "src": "3020:48:15"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "2847:3:15",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "2852:3:15",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "2857:6:15",
                    "type": ""
                  }
                ],
                "src": "2816:258:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3128:208:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3138:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3158:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3152:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3152:12:15"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "3142:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3180:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3185:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3173:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3173:19:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3173:19:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3227:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3234:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3223:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3223:16:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3245:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3250:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3241:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3241:14:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3257:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "3201:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3201:63:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3201:63:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3273:57:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3288:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3301:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3309:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3297:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3297:15:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3318:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3314:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3314:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3293:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3293:29:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3284:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3284:39:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3325:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3280:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3280:50:15"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "3273:3:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_bytes",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "3105:5:15",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "3112:3:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "3120:3:15",
                    "type": ""
                  }
                ],
                "src": "3079:257:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3460:98:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3477:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3488:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3470:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3470:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3470:21:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3500:52:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3525:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3537:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3548:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3533:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3533:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "3508:16:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3508:44:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3500:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3429:9:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3440:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3451:4:15",
                    "type": ""
                  }
                ],
                "src": "3341:217:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3684:98:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3701:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3712:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3694:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3694:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3694:21:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3724:52:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3749:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3761:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3772:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3757:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3757:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "3732:16:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3732:44:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3724:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3653:9:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3664:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3675:4:15",
                    "type": ""
                  }
                ],
                "src": "3563:219:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3961:235:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3978:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3989:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3971:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3971:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3971:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4012:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4023:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4008:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4008:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4028:2:15",
                            "type": "",
                            "value": "45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4001:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4001:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4001:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4051:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4062:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4047:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4047:18:15"
                          },
                          {
                            "hexValue": "555550533a206d757374206e6f742062652063616c6c6564207468726f756768",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4067:34:15",
                            "type": "",
                            "value": "UUPS: must not be called through"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4040:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4040:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4040:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4122:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4133:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4118:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4118:18:15"
                          },
                          {
                            "hexValue": "2064656c656761746563616c6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4138:15:15",
                            "type": "",
                            "value": " delegatecall"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4111:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4111:43:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4111:43:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4163:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4175:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4186:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4171:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4171:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4163:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_6fe5addd6ece62d7460778fb1439987320824260d0e81d0d4972e18159bf9be3__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3938:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3952:4:15",
                    "type": ""
                  }
                ],
                "src": "3787:409:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4375:234:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4392:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4403:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4385:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4385:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4385:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4426:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4437:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4422:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4422:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4442:2:15",
                            "type": "",
                            "value": "44"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4415:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4415:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4415:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4465:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4476:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4461:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4461:18:15"
                          },
                          {
                            "hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4481:34:15",
                            "type": "",
                            "value": "Function must be called through "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4454:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4454:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4454:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4536:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4547:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4532:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4532:18:15"
                          },
                          {
                            "hexValue": "64656c656761746563616c6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4552:14:15",
                            "type": "",
                            "value": "delegatecall"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4525:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4525:42:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4525:42:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4576:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4588:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4599:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4584:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4584:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4576:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4352:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4366:4:15",
                    "type": ""
                  }
                ],
                "src": "4201:408:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4788:234:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4805:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4816:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4798:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4798:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4798:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4839:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4850:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4835:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4835:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4855:2:15",
                            "type": "",
                            "value": "44"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4828:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4828:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4828:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4878:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4889:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4874:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4874:18:15"
                          },
                          {
                            "hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4894:34:15",
                            "type": "",
                            "value": "Function must be called through "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4867:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4867:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4867:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4949:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4960:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4945:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4945:18:15"
                          },
                          {
                            "hexValue": "6163746976652070726f7879",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4965:14:15",
                            "type": "",
                            "value": "active proxy"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4938:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4938:42:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4938:42:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4989:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5001:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5012:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4997:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4997:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4989:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4765:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4779:4:15",
                    "type": ""
                  }
                ],
                "src": "4614:408:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5082:325:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5092:22:15",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5106:1:15",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "5109:4:15"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "5102:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5102:12:15"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "5092:6:15"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5123:38:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "5153:4:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5159:1:15",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5149:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5149:12:15"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "5127:18:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5200:31:15",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "5202:27:15",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5216:6:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5224:4:15",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5212:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5212:17:15"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5202:6:15"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "5180:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5173:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5173:26:15"
                      },
                      "nodeType": "YulIf",
                      "src": "5170:61:15"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5290:111:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5311:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5318:3:15",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5323:10:15",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "5314:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5314:20:15"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5304:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5304:31:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5304:31:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5355:1:15",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5358:4:15",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5348:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5348:15:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5348:15:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5383:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5386:4:15",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5376:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5376:15:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5376:15:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "5246:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5269:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5277:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "5266:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5266:14:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5243:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5243:38:15"
                      },
                      "nodeType": "YulIf",
                      "src": "5240:161:15"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "5062:4:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "5071:6:15",
                    "type": ""
                  }
                ],
                "src": "5027:380:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5586:179:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5603:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5614:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5596:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5596:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5596:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5637:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5648:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5633:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5633:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5653:2:15",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5626:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5626:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5626:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5676:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5687:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5672:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5672:18:15"
                          },
                          {
                            "hexValue": "6e65772061646d696e20697320746865207a65726f2061646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5692:31:15",
                            "type": "",
                            "value": "new admin is the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5665:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5665:59:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5665:59:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5733:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5745:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5756:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5741:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5741:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5733:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7d282dfd84e14a6ca4881e1a89a526f959bf908d227ce553a2f4223d5939ee72__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5563:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5577:4:15",
                    "type": ""
                  }
                ],
                "src": "5412:353:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5899:175:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5909:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5921:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5932:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5917:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5917:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5909:4:15"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5944:29:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5962:3:15",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5967:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5958:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5958:11:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5971:1:15",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5954:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5954:19:15"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "5948:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5989:9:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6004:6:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "6012:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6000:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6000:15:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5982:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5982:34:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5982:34:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6036:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6047:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6032:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6032:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6056:6:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "6064:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6052:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6052:15:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6025:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6025:43:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6025:43:15"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5860:9:15",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5871:6:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5879:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5890:4:15",
                    "type": ""
                  }
                ],
                "src": "5770:304:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6253:181:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6270:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6281:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6263:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6263:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6263:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6304:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6315:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6300:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6300:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6320:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6293:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6293:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6293:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6343:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6354:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6339:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6339:18:15"
                          },
                          {
                            "hexValue": "436f6e74657874205570677261646162696c69747920466f7262696464656e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6359:33:15",
                            "type": "",
                            "value": "Context Upgradability Forbidden"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6332:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6332:61:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6332:61:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6402:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6414:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6425:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6410:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6410:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6402:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_cb43e960845ccd56bc04bcc3cb9780423b1f82f5709f765fd5fed7a2a877dc3e__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6230:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6244:4:15",
                    "type": ""
                  }
                ],
                "src": "6079:355:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6613:175:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6630:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6641:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6623:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6623:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6623:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6664:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6675:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6660:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6660:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6680:2:15",
                            "type": "",
                            "value": "25"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6653:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6653:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6653:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6703:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6714:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6699:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6699:18:15"
                          },
                          {
                            "hexValue": "436f6e74657874204973204e6f742055706772616461626c65",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6719:27:15",
                            "type": "",
                            "value": "Context Is Not Upgradable"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6692:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6692:55:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6692:55:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6756:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6768:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6779:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6764:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6764:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6756:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_f07ae4a81de0747ef6d715728595b1355713b8cb7e2d926cbdc3ce8a55c8b29d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6590:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6604:4:15",
                    "type": ""
                  }
                ],
                "src": "6439:349:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6874:103:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6920:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6929:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6932:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6922:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6922:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6922:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6895:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6904:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6891:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6891:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6916:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6887:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6887:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "6884:52:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6945:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6961:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6955:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6955:16:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6945:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6840:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6851:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6863:6:15",
                    "type": ""
                  }
                ],
                "src": "6793:184:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7156:236:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7173:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7184:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7166:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7166:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7166:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7207:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7218:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7203:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7203:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7223:2:15",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7196:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7196:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7196:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7246:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7257:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7242:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7242:18:15"
                          },
                          {
                            "hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7262:34:15",
                            "type": "",
                            "value": "ERC1967Upgrade: new implementati"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7235:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7235:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7235:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7317:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7328:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7313:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7313:18:15"
                          },
                          {
                            "hexValue": "6f6e206973206e6f742055555053",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7333:16:15",
                            "type": "",
                            "value": "on is not UUPS"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7306:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7306:44:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7306:44:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7359:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7371:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7382:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7367:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7367:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7359:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7133:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7147:4:15",
                    "type": ""
                  }
                ],
                "src": "6982:410:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7571:231:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7588:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7599:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7581:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7581:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7581:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7622:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7633:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7618:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7618:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7638:2:15",
                            "type": "",
                            "value": "41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7611:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7611:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7611:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7661:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7672:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7657:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7657:18:15"
                          },
                          {
                            "hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7677:34:15",
                            "type": "",
                            "value": "ERC1967Upgrade: unsupported prox"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7650:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7650:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7650:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7732:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7743:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7728:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7728:18:15"
                          },
                          {
                            "hexValue": "6961626c6555554944",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7748:11:15",
                            "type": "",
                            "value": "iableUUID"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7721:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7721:39:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7721:39:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7769:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7781:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7792:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7777:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7777:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7769:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7548:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7562:4:15",
                    "type": ""
                  }
                ],
                "src": "7397:405:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7962:215:15",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "7972:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7984:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7995:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7980:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7980:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7972:4:15"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8014:9:15"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8025:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8007:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8007:25:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8007:25:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8052:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8063:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8048:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8048:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "8072:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8088:3:15",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8093:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8084:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8084:11:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8097:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8080:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8080:19:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8068:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8068:32:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8041:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8041:60:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8041:60:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8121:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8132:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8117:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8117:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "8141:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8153:3:15",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8158:10:15",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8149:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8149:20:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8137:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8137:33:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8110:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8110:61:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8110:61:15"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32_t_address_t_bytes4__to_t_bytes32_t_address_t_bytes4__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7915:9:15",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "7926:6:15",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7934:6:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7942:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7953:4:15",
                    "type": ""
                  }
                ],
                "src": "7807:370:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8260:167:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8306:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8315:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8318:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8308:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8308:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8308:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8281:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8290:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8277:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8277:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8302:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8273:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8273:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "8270:52:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8331:29:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8350:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8344:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8344:16:15"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8335:5:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8391:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bool",
                          "nodeType": "YulIdentifier",
                          "src": "8369:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8369:28:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8369:28:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8406:15:15",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8416:5:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8406:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8226:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8237:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8249:6:15",
                    "type": ""
                  }
                ],
                "src": "8182:245:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8606:174:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8623:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8634:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8616:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8616:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8616:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8657:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8668:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8653:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8653:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8673:2:15",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8646:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8646:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8646:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8696:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8707:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8692:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8692:18:15"
                          },
                          {
                            "hexValue": "436f6e74657874204973204e6f7420416374697661746564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8712:26:15",
                            "type": "",
                            "value": "Context Is Not Activated"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8685:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8685:54:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8685:54:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8748:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8760:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8771:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8756:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8756:18:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8748:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_54bc6b0dcc7aaa5f447395dc6099050577a48784ca581f03c496695e4d94d558__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8583:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8597:4:15",
                    "type": ""
                  }
                ],
                "src": "8432:348:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8959:235:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8976:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8987:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8969:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8969:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8969:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9010:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9021:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9006:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9006:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9026:2:15",
                            "type": "",
                            "value": "45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8999:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8999:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8999:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9049:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9060:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9045:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9045:18:15"
                          },
                          {
                            "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9065:34:15",
                            "type": "",
                            "value": "ERC1967: new implementation is n"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9038:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9038:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9038:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9120:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9131:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9116:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9116:18:15"
                          },
                          {
                            "hexValue": "6f74206120636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9136:15:15",
                            "type": "",
                            "value": "ot a contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9109:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9109:43:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9109:43:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9161:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9173:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9184:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9169:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9169:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9161:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8936:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8950:4:15",
                    "type": ""
                  }
                ],
                "src": "8785:409:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9290:544:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9336:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9345:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9348:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9338:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9338:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9338:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "9311:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9320:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9307:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9307:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9332:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "9303:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9303:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "9300:52:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9361:30:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9381:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9375:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9375:16:15"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9365:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9434:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9443:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9446:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9436:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9436:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9436:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9406:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9414:18:15",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9403:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9403:30:15"
                      },
                      "nodeType": "YulIf",
                      "src": "9400:50:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9459:32:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9473:9:15"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9484:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9469:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9469:22:15"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "9463:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9539:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9548:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9551:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9541:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9541:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9541:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9518:2:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9522:4:15",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9514:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9514:13:15"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "9529:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "9510:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9510:27:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9503:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9503:35:15"
                      },
                      "nodeType": "YulIf",
                      "src": "9500:55:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9564:19:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9580:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9574:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9574:9:15"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "9568:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9592:61:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9649:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "array_allocation_size_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "9621:27:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9621:31:15"
                          }
                        ],
                        "functionName": {
                          "name": "allocate_memory",
                          "nodeType": "YulIdentifier",
                          "src": "9605:15:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9605:48:15"
                      },
                      "variables": [
                        {
                          "name": "array",
                          "nodeType": "YulTypedName",
                          "src": "9596:5:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "9669:5:15"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9676:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9662:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9662:17:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9662:17:15"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9725:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9734:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9737:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "9727:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9727:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9727:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9702:2:15"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9706:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9698:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9698:11:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9711:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9694:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9694:20:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9716:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9691:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9691:33:15"
                      },
                      "nodeType": "YulIf",
                      "src": "9688:53:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "9776:2:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9780:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9772:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9772:11:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "9789:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9796:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9785:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9785:14:15"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9801:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "9750:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9750:54:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9750:54:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9813:15:15",
                      "value": {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "9823:5:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9813:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9256:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "9267:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9279:6:15",
                    "type": ""
                  }
                ],
                "src": "9199:635:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10036:281:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10053:9:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10068:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10084:3:15",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10089:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10080:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10080:11:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10093:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10076:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10076:19:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10064:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10064:32:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10046:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10046:51:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10046:51:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10117:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10128:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10113:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10113:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10133:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10106:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10106:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10106:30:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10145:58:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10176:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10188:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10199:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10184:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10184:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "10159:16:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10159:44:15"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "10149:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10223:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10234:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10219:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10219:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "10243:6:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10251:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10239:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10239:22:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10212:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10212:50:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10212:50:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10271:40:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "10296:6:15"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "10304:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "10279:16:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10279:32:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10271:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9989:9:15",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "10000:6:15",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "10008:6:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "10016:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10027:4:15",
                    "type": ""
                  }
                ],
                "src": "9839:478:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10496:228:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10513:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10524:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10506:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10506:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10506:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10547:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10558:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10543:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10543:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10563:2:15",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10536:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10536:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10536:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10586:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10597:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10582:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10582:18:15"
                          },
                          {
                            "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10602:34:15",
                            "type": "",
                            "value": "Address: delegate call to non-co"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10575:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10575:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10575:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10657:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10668:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10653:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10653:18:15"
                          },
                          {
                            "hexValue": "6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10673:8:15",
                            "type": "",
                            "value": "ntract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10646:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10646:36:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10646:36:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10691:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10703:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10714:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10699:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10699:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10691:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10473:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10487:4:15",
                    "type": ""
                  }
                ],
                "src": "10322:402:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10866:137:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10876:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10896:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10890:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10890:13:15"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "10880:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10938:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10946:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10934:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10934:17:15"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10953:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10958:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "10912:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10912:53:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10912:53:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10974:23:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10985:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10990:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10981:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10981:16:15"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "10974:3:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "10842:3:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "10847:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "10858:3:15",
                    "type": ""
                  }
                ],
                "src": "10729:274:15"
              }
            ]
          },
          "contents": "{\n    { }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := calldataload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), _2)\n        mstore(add(add(array, _2), 32), 0)\n        value1 := array\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_6fe5addd6ece62d7460778fb1439987320824260d0e81d0d4972e18159bf9be3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"UUPS: must not be called through\")\n        mstore(add(headStart, 96), \" delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7d282dfd84e14a6ca4881e1a89a526f959bf908d227ce553a2f4223d5939ee72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"new admin is the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_cb43e960845ccd56bc04bcc3cb9780423b1f82f5709f765fd5fed7a2a877dc3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Context Upgradability Forbidden\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f07ae4a81de0747ef6d715728595b1355713b8cb7e2d926cbdc3ce8a55c8b29d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Context Is Not Upgradable\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_bytes4__to_t_bytes32_t_address_t_bytes4__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_54bc6b0dcc7aaa5f447395dc6099050577a48784ca581f03c496695e4d94d558__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Context Is Not Activated\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
          "id": 15,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "2558": [
          {
            "length": 32,
            "start": 802
          },
          {
            "length": 32,
            "start": 979
          },
          {
            "length": 32,
            "start": 1112
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x8B3240A0 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8B3240A0 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x900574A5 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x9DD07254 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xCF891E2B EQ PUSH2 0x273 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x7147855D EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x886DDB52 EQ PUSH2 0x214 JUMPI PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH4 0x133899F5 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x47C02661 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4A8C1FB4 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x4BCE20DD EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x5479D940 EQ PUSH2 0x19D JUMPI PUSH2 0xD5 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD5 JUMPI PUSH2 0xD3 PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0x288 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x17A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x511 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x51B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x207 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x298 PUSH2 0x293 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBCECCA91F4CD073BCFD7630EF1A39F42CE6CC45C2CA12324E82E1D9021E71C9B DUP6 PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 DUP3 PUSH2 0x665 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550533A206D757374206E6F742062652063616C6C6564207468726F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x819195B1959D85D1958D85B1B PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x488 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x4FC DUP5 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x507 DUP5 DUP5 DUP5 PUSH2 0x802 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1009 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1009 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x578 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x586 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x139C91C652708A87D9A40A2CBFB6D5D37C20D1DCD2A75B2D0C09B59A214474BC DUP6 PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1009 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E65772061646D696E20697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A1 JUMP JUMPDEST ADDRESS CALLER PUSH32 0x6DD9A711C71F2384E1A3F1AB85A1D06EEE5C81EC1E377A10E6B672052116362D PUSH2 0x6E6 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x75C PUSH4 0x7147855D PUSH1 0xE0 SHL PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74657874205570677261646162696C69747920466F7262696464656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74657874204973204E6F742055706772616461626C6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x84C JUMPI PUSH2 0x837 DUP5 PUSH2 0xA60 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x50A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8A3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST POP PUSH2 0x984 DUP5 DUP5 DUP5 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP PUSH2 0x50A JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC7AB39E6 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL DUP2 AND DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x117B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x72B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB0F DUP5 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0xB1C JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0xB2B JUMPI PUSH2 0x984 DUP5 DUP5 PUSH2 0xCD4 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6E PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH31 0xBE01838F727D9B6A4CC703CAD7DD0426A7DD3A2AD8BBC1AAE8E61A5F7FDD36 DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF891E2B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC4A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10B0 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF891E2B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCB0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCD0 DUP3 PUSH2 0xA60 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xDE2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119B PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDEB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xDFA JUMPI POP DUP2 PUSH2 0x50A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xE0A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x50A DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50A DUP3 PUSH2 0xE4F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC5 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE7 PUSH2 0xE86 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF13 DUP5 PUSH2 0xE4F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xF53 PUSH2 0xF4E DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xF8F DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF9D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFE2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x50A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x101D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x103D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x50A DUP2 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E74657874204973204E6F74204163746976617465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x10EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x10F8 PUSH2 0xF4E DUP3 PUSH2 0xECD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x110D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE2 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1142 SWAP1 DUP4 ADD DUP6 PUSH2 0xFCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1154 DUP2 DUP6 PUSH2 0xFCA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1170 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF9A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122004 GAS 0x29 0x4C 0xEE PUSH6 0x91528E9B74F7 0xDB 0xD4 0xA9 SLOAD CODESIZE 0xB9 BALANCE 0xC8 SWAP11 0xE1 DUP13 0xC0 0xDF 0xF7 MUL PUSH16 0xFF142E964736F6C634300080F003300 ",
      "sourceMap": "237:1942:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2844:11:7;:9;:11::i;:::-;237:1942:0;;2621:11:7;:9;:11::i;11180:212:8:-;;;;;;;;;;-1:-1:-1;11180:212:8;;;;;:::i;:::-;;:::i;:::-;;;548:14:15;;541:22;523:41;;511:2;496:18;11180:212:8;;;;;;;;10278:127;;;;;;;;;;-1:-1:-1;10278:127:8;;;;;:::i;:::-;;:::i;11937:86::-;;;;;;;;;;-1:-1:-1;12006:10:8;;;;11937:86;;11710:116;;;;;;;;;;-1:-1:-1;252:27:3;;;11813:4:8;252:27:3;;;;1272:51:15;;;;252:27:3;;;;;;;;;1245:18:15;;;252:27:3;;;242:38;;;;;11710:116:8;;;1090:25:15;;;1078:2;1063:18;11710:116:8;944:177:15;8191:131:8;;;;;;;;;;;;;:::i;12029:90::-;;;;;;;;;;-1:-1:-1;12099:13:8;;;;;;;12029:90;;11832:99;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1290:32:15;;;1272:51;;1260:2;1245:18;11832:99:8;1126:203:15;9245:283:8;;;;;;;;;;-1:-1:-1;9245:283:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11608:96::-;;;;;;;;;;-1:-1:-1;11681:16:8;;11608:96;;10175:97;;;;;;;;;;;;;:::i;11398:96::-;;;;;;;;;;;;;:::i;10976:198::-;;;;;;;;;;-1:-1:-1;10976:198:8;;;;;:::i;:::-;;:::i;11500:102::-;;;;;;;;;;;;;:::i;2268:110:7:-;2343:28;2353:17;:15;:17::i;:::-;2343:9;:28::i;:::-;2268:110::o;11180:212:8:-;11252:13;:21;;-1:-1:-1;;11252:21:8;;;;;;;;;11339:16;;-1:-1:-1;;11332:4:8;707:10:14;-1:-1:-1;;;;;11288:75:8;;11357:5;11288:75;;;;548:14:15;541:22;523:41;;511:2;496:18;;383:187;11288:75:8;;;;;;;;-1:-1:-1;11380:5:8;11180:212::o;10278:127::-;10337:4;10353:24;10368:8;10353:14;:24::i;:::-;-1:-1:-1;10394:4:8;;10278:127;-1:-1:-1;10278:127:8:o;11785:34::-;11778:41;;11710:116;:::o;8191:131::-;8269:7;2637:4;-1:-1:-1;;;;;2646:6:8;2629:23;;2621:81;;;;-1:-1:-1;;;2621:81:8;;3989:2:15;2621:81:8;;;3971:21:15;4028:2;4008:18;;;4001:30;4067:34;4047:18;;;4040:62;-1:-1:-1;;;4118:18:15;;;4111:43;4171:19;;2621:81:8;;;;;;;;;-1:-1:-1;;;;;;;;;;;;8191:131:8;:::o;11832:99::-;11881:7;11907:17;:15;:17::i;9245:283::-;9383:12;-1:-1:-1;;;;;2006:6:8;1989:23;1997:4;1989:23;1981:80;;;;-1:-1:-1;;;1981:80:8;;4403:2:15;1981:80:8;;;4385:21:15;4442:2;4422:18;;;4415:30;4481:34;4461:18;;;4454:62;-1:-1:-1;;;4532:18:15;;;4525:42;4584:19;;1981:80:8;4201:408:15;1981:80:8;2100:6;-1:-1:-1;;;;;2079:27:8;:17;:15;:17::i;:::-;-1:-1:-1;;;;;2079:27:8;;2071:84;;;;-1:-1:-1;;;2071:84:8;;4816:2:15;2071:84:8;;;4798:21:15;4855:2;4835:18;;;4828:30;4894:34;4874:18;;;4867:62;-1:-1:-1;;;4945:18:15;;;4938:42;4997:19;;2071:84:8;4614:408:15;2071:84:8;9407:36:::1;9425:17;9407;:36::i;:::-;9460:61;9482:17;9501:4;9507:13;9460:21;:61::i;:::-;9453:68;;2165:1;9245:283:::0;;;;;:::o;10175:97::-;10223:7;10249:16;:14;:16::i;11398:96::-;11444:13;11476:11;11469:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11398:96;:::o;10976:198::-;11043:10;:18;;-1:-1:-1;;11043:18:8;;;;;;;11121:16;;-1:-1:-1;;11114:4:8;707:10:14;-1:-1:-1;;;;;11076:69:8;;11139:5;11076:69;;;;548:14:15;541:22;523:41;;511:2;496:18;;383:187;11500:102:8;11549:13;11581:14;11574:21;;;;;:::i;1602:147:4:-;1729:4;1602:147::o;1110:320:2:-;-1:-1:-1;;;;;1400:19:2;;:23;;;1110:320::o;4073:146:8:-;4132:7;-1:-1:-1;;;;;;;;;;;4158:48:8;:54;-1:-1:-1;;;;;4158:54:8;;4073:146;-1:-1:-1;4073:146:8:o;894:895:7:-;1232:14;1229:1;1226;1213:34;1446:1;1443;1427:14;1424:1;1408:14;1401:5;1388:60;1522:16;1519:1;1516;1501:38;1560:6;1627:66;;;;1742:16;1739:1;1732:27;1627:66;1662:16;1659:1;1652:27;10675:294:8;-1:-1:-1;;;;;10743:22:8;;10735:64;;;;-1:-1:-1;;;10735:64:8;;5614:2:15;10735:64:8;;;5596:21:15;5653:2;5633:18;;;5626:30;5692:31;5672:18;;;5665:59;5741:18;;10735:64:8;5412:353:15;10735:64:8;10854:4;707:10:14;10814:74:8;10861:16;:14;:16::i;:::-;10814:74;;;-1:-1:-1;;;;;6000:15:15;;;5982:34;;6052:15;;;6047:2;6032:18;;6025:43;5917:18;10814:74:8;;;;;;;10946:8;2478:66:9;10898:39:8;:56;;-1:-1:-1;;;;;;10898:56:8;-1:-1:-1;;;;;10898:56:8;;;;;;;;;;-1:-1:-1;10675:294:8:o;9936:232::-;10025:39;-1:-1:-1;;;10025:14:8;:39::i;:::-;10017:83;;;;-1:-1:-1;;;10017:83:8;;6281:2:15;10017:83:8;;;6263:21:15;6320:2;6300:18;;;6293:30;6359:33;6339:18;;;6332:61;6410:18;;10017:83:8;6079:355:15;10017:83:8;10118:13;;;;;;;10110:51;;;;-1:-1:-1;;;10110:51:8;;6641:2:15;10110:51:8;;;6623:21:15;6680:2;6660:18;;;6653:30;6719:27;6699:18;;;6692:55;6764:18;;10110:51:8;6439:349:15;10110:51:8;9936:232;:::o;5944:1015::-;6085:12;1477:66:9;6413:48:8;;;6409:544;;;6477:37;6496:17;6477:18;:37::i;:::-;-1:-1:-1;6535:12:8;;;6545:1;6535:12;;;;;;;;6528:19;;6409:544;6600:17;-1:-1:-1;;;;;6582:50:8;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6582:52:8;;;;;;;;-1:-1:-1;;6582:52:8;;;;;;;;;;;;:::i;:::-;;;6578:291;;6798:56;;-1:-1:-1;;;6798:56:8;;7184:2:15;6798:56:8;;;7166:21:15;7223:2;7203:18;;;7196:30;7262:34;7242:18;;;7235:62;-1:-1:-1;;;7313:18:15;;;7306:44;7367:19;;6798:56:8;6982:410:15;6578:291:8;-1:-1:-1;;;;;;;;;;;6684:28:8;;6676:82;;;;-1:-1:-1;;;6676:82:8;;7599:2:15;6676:82:8;;;7581:21:15;7638:2;7618:18;;;7611:30;7677:34;7657:18;;;7650:62;-1:-1:-1;;;7728:18:15;;;7721:39;7777:19;;6676:82:8;7397:405:15;6676:82:8;6635:138;6889:53;6907:17;6926:4;6932:9;6889:17;:53::i;:::-;6882:60;;;;10466:127;10515:7;2478:66:9;10541:39:8;1602:147:4;2726:178:8;2790:4;2818:10;;252:27:3;;;2868:4:8;252:27:3;;;;1272:51:15;;;;252:27:3;;;;;;;;;1245:18:15;;;252:27:3;;;242:38;;;;;-1:-1:-1;;;;;2818:10:8;;;;2813:26;;:84;;-1:-1:-1;;;;;;2813:84:8;;;;;;;;;;;8007:25:15;;;;2876:10:8;8048:18:15;;;8041:60;8137:33;;;8117:18;;;8110:61;7980:18;;2813:84:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2806:91;2726:178;-1:-1:-1;;2726:178:8:o;4310:316::-;4391:10;;;;4383:47;;;;-1:-1:-1;;;4383:47:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;1400:19:2;;;4440:95:8;;;;-1:-1:-1;;;4440:95:8;;8987:2:15;4440:95:8;;;8969:21:15;9026:2;9006:18;;;8999:30;9065:34;9045:18;;;9038:62;-1:-1:-1;;;9116:18:15;;;9109:43;9169:19;;4440:95:8;8785:409:15;4440:95:8;4602:17;-1:-1:-1;;;;;;;;;;;4545:48:8;1602:147:4;5390:382:8;5527:12;5551:29;5562:17;5551:10;:29::i;:::-;5643:1;5629:4;:11;:15;:28;;;;5648:9;5629:28;5625:112;;;5680:46;5702:17;5721:4;5680:21;:46::i;5625:112::-;-1:-1:-1;;5753:12:8;;;5763:1;5753:12;;;;;;;;;5746:19;-1:-1:-1;;5390:382:8:o;4732:524::-;4806:10;;;;4798:47;;;;-1:-1:-1;;;4798:47:8;;;;;;;:::i;:::-;4855:29;4887:17;:15;:17::i;:::-;4919:27;;4855:49;;-1:-1:-1;;;;;;4919:27:8;;;;;;;;5032:17;-1:-1:-1;;;;;4991:195:8;5025:4;-1:-1:-1;;;;;4991:195:8;5005:10;-1:-1:-1;;;;;4991:195:8;;5051:21;5102:17;-1:-1:-1;;;;;5095:40:8;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5095:42:8;;;;;;;;;;;;:::i;:::-;5146:21;-1:-1:-1;;;;;5139:44:8;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5139:46:8;;;;;;;;;;;;:::i;:::-;4991:195;;;;;;;;:::i;:::-;;;;;;;;5196:37;5215:17;5196:18;:37::i;:::-;4788:468;4732:524;:::o;7115:490::-;7230:10;;7198:12;;7230:10;;7222:47;;;;-1:-1:-1;;;7222:47:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;1400:19:2;;;7279:77:8;;;;-1:-1:-1;;;7279:77:8;;10524:2:15;7279:77:8;;;10506:21:15;10563:2;10543:18;;;10536:30;10602:34;10582:18;;;10575:62;-1:-1:-1;;;10653:18:15;;;10646:36;10699:19;;7279:77:8;10322:402:15;7279:77:8;7427:12;7441:23;7468:6;-1:-1:-1;;;;;7468:19:8;7488:4;7468:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7426:67;;;;7510:88;7535:7;7544:10;7510:88;;;;;;;;;;;;;;;;;:24;:88::i;:::-;7503:95;7115:490;-1:-1:-1;;;;;7115:490:8:o;6515:692:2:-;6661:12;6689:7;6685:516;;;-1:-1:-1;6719:10:2;6712:17;;6685:516;6830:17;;:21;6826:365;;7024:10;7018:17;7084:15;7071:10;7067:2;7063:19;7056:44;6826:365;7163:12;7156:20;;-1:-1:-1;;;7156:20:2;;;;;;;;:::i;14:118:15:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;575:173::-;643:20;;-1:-1:-1;;;;;692:31:15;;682:42;;672:70;;738:1;735;728:12;672:70;575:173;;;:::o;753:186::-;812:6;865:2;853:9;844:7;840:23;836:32;833:52;;;881:1;878;871:12;833:52;904:29;923:9;904:29;:::i;1334:127::-;1395:10;1390:3;1386:20;1383:1;1376:31;1426:4;1423:1;1416:15;1450:4;1447:1;1440:15;1466:275;1537:2;1531:9;1602:2;1583:13;;-1:-1:-1;;1579:27:15;1567:40;;1637:18;1622:34;;1658:22;;;1619:62;1616:88;;;1684:18;;:::i;:::-;1720:2;1713:22;1466:275;;-1:-1:-1;1466:275:15:o;1746:186::-;1794:4;1827:18;1819:6;1816:30;1813:56;;;1849:18;;:::i;:::-;-1:-1:-1;1915:2:15;1894:15;-1:-1:-1;;1890:29:15;1921:4;1886:40;;1746:186::o;1937:874::-;2020:6;2028;2036;2089:2;2077:9;2068:7;2064:23;2060:32;2057:52;;;2105:1;2102;2095:12;2057:52;2128:29;2147:9;2128:29;:::i;:::-;2118:39;;2208:2;2197:9;2193:18;2180:32;2235:18;2227:6;2224:30;2221:50;;;2267:1;2264;2257:12;2221:50;2290:22;;2343:4;2335:13;;2331:27;-1:-1:-1;2321:55:15;;2372:1;2369;2362:12;2321:55;2408:2;2395:16;2433:48;2449:31;2477:2;2449:31;:::i;:::-;2433:48;:::i;:::-;2504:2;2497:5;2490:17;2544:7;2539:2;2534;2530;2526:11;2522:20;2519:33;2516:53;;;2565:1;2562;2555:12;2516:53;2620:2;2615;2611;2607:11;2602:2;2595:5;2591:14;2578:45;2664:1;2659:2;2654;2647:5;2643:14;2639:23;2632:34;2685:5;2675:15;;;;;2740:2;2729:9;2725:18;2712:32;2753:28;2775:5;2753:28;:::i;:::-;2800:5;2790:15;;;1937:874;;;;;:::o;2816:258::-;2888:1;2898:113;2912:6;2909:1;2906:13;2898:113;;;2988:11;;;2982:18;2969:11;;;2962:39;2934:2;2927:10;2898:113;;;3029:6;3026:1;3023:13;3020:48;;;3064:1;3055:6;3050:3;3046:16;3039:27;3020:48;;2816:258;;;:::o;3079:257::-;3120:3;3158:5;3152:12;3185:6;3180:3;3173:19;3201:63;3257:6;3250:4;3245:3;3241:14;3234:4;3227:5;3223:16;3201:63;:::i;:::-;3318:2;3297:15;-1:-1:-1;;3293:29:15;3284:39;;;;3325:4;3280:50;;3079:257;-1:-1:-1;;3079:257:15:o;3341:217::-;3488:2;3477:9;3470:21;3451:4;3508:44;3548:2;3537:9;3533:18;3525:6;3508:44;:::i;5027:380::-;5106:1;5102:12;;;;5149;;;5170:61;;5224:4;5216:6;5212:17;5202:27;;5170:61;5277:2;5269:6;5266:14;5246:18;5243:38;5240:161;;5323:10;5318:3;5314:20;5311:1;5304:31;5358:4;5355:1;5348:15;5386:4;5383:1;5376:15;5240:161;;5027:380;;;:::o;6793:184::-;6863:6;6916:2;6904:9;6895:7;6891:23;6887:32;6884:52;;;6932:1;6929;6922:12;6884:52;-1:-1:-1;6955:16:15;;6793:184;-1:-1:-1;6793:184:15:o;8182:245::-;8249:6;8302:2;8290:9;8281:7;8277:23;8273:32;8270:52;;;8318:1;8315;8308:12;8270:52;8350:9;8344:16;8369:28;8391:5;8369:28;:::i;8432:348::-;8634:2;8616:21;;;8673:2;8653:18;;;8646:30;8712:26;8707:2;8692:18;;8685:54;8771:2;8756:18;;8432:348::o;9199:635::-;9279:6;9332:2;9320:9;9311:7;9307:23;9303:32;9300:52;;;9348:1;9345;9338:12;9300:52;9381:9;9375:16;9414:18;9406:6;9403:30;9400:50;;;9446:1;9443;9436:12;9400:50;9469:22;;9522:4;9514:13;;9510:27;-1:-1:-1;9500:55:15;;9551:1;9548;9541:12;9500:55;9580:2;9574:9;9605:48;9621:31;9649:2;9621:31;:::i;9605:48::-;9676:2;9669:5;9662:17;9716:7;9711:2;9706;9702;9698:11;9694:20;9691:33;9688:53;;;9737:1;9734;9727:12;9688:53;9750:54;9801:2;9796;9789:5;9785:14;9780:2;9776;9772:11;9750:54;:::i;9839:478::-;-1:-1:-1;;;;;10064:32:15;;10046:51;;10133:2;10128;10113:18;;10106:30;;;-1:-1:-1;;10159:44:15;;10184:18;;10176:6;10159:44;:::i;:::-;10251:9;10243:6;10239:22;10234:2;10223:9;10219:18;10212:50;10279:32;10304:6;10296;10279:32;:::i;:::-;10271:40;9839:478;-1:-1:-1;;;;;;9839:478:15:o;10729:274::-;10858:3;10896:6;10890:13;10912:53;10958:6;10953:3;10946:4;10938:6;10934:17;10912:53;:::i;:::-;10981:16;;;;;10729:274;-1:-1:-1;;10729:274:15:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "919800",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "": "infinite",
        "getProxyAdmin()": "2423",
        "implementation()": "infinite",
        "isActivated()": "2338",
        "isUpgradable()": "2415",
        "proxiableUUID()": "infinite",
        "setActivity(bool)": "28965",
        "setProxyAdmin(address)": "29001",
        "setUpgradability(bool)": "28908",
        "subjectContext()": "379",
        "subjectName()": "infinite",
        "subjectRealm()": "2359",
        "subjectVersion()": "infinite",
        "upgradeTo(address,bytes,bool)": "infinite"
      }
    },
    "methodIdentifiers": {
      "getProxyAdmin()": "8b3240a0",
      "implementation()": "5c60da1b",
      "isActivated()": "4a8c1fb4",
      "isUpgradable()": "5479d940",
      "proxiableUUID()": "52d1902d",
      "setActivity(bool)": "9dd07254",
      "setProxyAdmin(address)": "47c02661",
      "setUpgradability(bool)": "133899f5",
      "subjectContext()": "4bce20dd",
      "subjectName()": "900574a5",
      "subjectRealm()": "886ddb52",
      "subjectVersion()": "cf891e2b",
      "upgradeTo(address,bytes,bool)": "7147855d"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"realm\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"ActivityChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"ProxyAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newVersion\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldVersion\",\"type\":\"string\"}],\"name\":\"ProxyUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"realm\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"UpgradablilityChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActivated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUpgradable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setActivity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setProxyAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setUpgradability\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectContext\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectRealm\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"forceInitCall\",\"type\":\"bool\"}],\"name\":\"upgradeTo\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/acl/ACLManagement.sol\":\"ACLManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/acl/ACLManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\nimport \\\"./IACL.sol\\\";\\nimport \\\"../lib/struct/EnumerableSet.sol\\\";\\nimport \\\"../lib/struct/EnumerableMap.sol\\\";\\nimport \\\"../proxy/Initializable.sol\\\";\\nimport \\\"../proxy/BaseUUPSLogic.sol\\\";\\n\\ncontract ACLManager is BaseUUPSLogic {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n    using EnumerableSet for EnumerableSet.Bytes32Set;\\n    using EnumerableMap for EnumerableMap.Bytes32ToBytes32Map;\\n    using EnumerableMap for EnumerableMap.AddressToUintMap;\\n\\n    enum Status {\\n        NONE,\\n        ENABLED,\\n        DISABLED\\n    }\\n\\n    struct Context {\\n        string name;\\n        string version;\\n        bytes32 realm;\\n        address smca;                    // smart contract address\\n        bool isEnabled;\\n        bool isUpgradable;\\n        mapping(bytes32 => mapping(bytes32 => Status)) resources;      // function selector  => Role => Status \\n        EnumerableSet.Bytes32Set funcSet; \\n    }\\n\\n    struct Role {\\n        string name;\\n        bytes32 group;\\n        bool isEnabled;\\n        EnumerableMap.AddressToUintMap userMap;\\n        // mapping(address => Status) userMap;        \\n        // EnumerableSet.AddressSet userSet;\\n        // EnumerableSet.Bytes32Set ctxSet;        // TODO check it if needed or no\\n    }\\n\\n    struct Realm {\\n        string name;\\n        bool isEnabled;\\n        bool isUpgradable;\\n        EnumerableSet.Bytes32Set ctxSet;        \\n    }\\n\\n    struct Group {\\n        string name;\\n        bool isEnabled;\\n        EnumerableSet.Bytes32Set roles;       \\n    }\\n\\n    mapping(bytes32 => Context) private _ctxMap;\\n    mapping(bytes32 => Role) private _roleMap;\\n    mapping(bytes32 => Realm) private _realmMap;\\n    mapping(bytes32 => Group) private _groupMap;\\n\\n    Realm LIVELY_REALM;\\n    Group LIVELY_GROUP;\\n    Role  LIVELY_ADMIN;\\n    Role  SYSTEM_ADMIN;\\n\\n    constructor() {\\n\\n    }\\n\\n    //  function _authorizeUpgrade(address newImplementation) internal override {\\n         \\n    //  }\\n\\n     /**\\n     * @dev Returns the current implementation address.\\n     */\\n    // function _implementation() internal view virtual override returns (address impl) {\\n    //     return _getImplementation();\\n    // }\\n\\n\\n\\n}\",\"keccak256\":\"0x7f41a5a02f74dc5ec08e04a3c2db4b3a8f51a2f7ed74afa33c3dc263824c9143\",\"license\":\"MIT\"},\"src/contracts/acl/IACL.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface IACL {\\n    /** \\n     * @dev Function called by apps to check ACL on kernel or to check permission status\\n     * @return boolean indicating whether the ACL allows the role or not\\n     */\\n    function hasAccess(bytes32 context, address account, bytes4 signature) external view returns (bool);\\n\\n    function hasSystemAdminRole(address account) external view returns (bool);\\n\\n    function hasLivelyAdminRole(address account) external view returns (bool);\\n\\n    function hasLivelyGroup(bytes32 role) external view returns (bool);\\n\\n    function hasLivelyRealm(bytes32 context) external view returns (bool);\\n\\n    function isEnabled(bytes32 context) external view returns (bool);\\n\\n    function isUpgradeEnabled(bytes32 context) external view returns (bool);\\n\\n}\",\"keccak256\":\"0xa6ff69d1e206041c9ed60dcce91c125258e8b70cb503ba89f14dbe4567b49fb8\",\"license\":\"MIT\"},\"src/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4db5a8ffa5e592fc435dd14acf1dc9984ffb27eb0c327482980ddcb9649bf3b7\",\"license\":\"MIT\"},\"src/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev Collection of functions related to the context\\n */\\nlibrary Context {\\n\\n    function generateCtx(address contractAddress) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(contractAddress));\\n    }\\n}\",\"keccak256\":\"0x6c62950dab8c47ed77030e389ae28b08b515ff8be2099d6be3011c12fabcf41d\",\"license\":\"MIT\"},\"src/contracts/lib/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb9011bb4b791581d5fd06cca09d0857ec87b43016f8e710a36c0cbe1022f792\",\"license\":\"MIT\"},\"src/contracts/lib/struct/EnumerableMap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\nimport \\\"./EnumerableSet.sol\\\";\\n\\n/**\\n * @dev Library for managing an enumerable variant of Solidity's\\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\n * type.\\n *\\n * Maps have the following properties:\\n *\\n * - Entries are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\\n *\\n *     // Declare a set state variable\\n *     EnumerableMap.UintToAddressMap private myMap;\\n * }\\n * ```\\n *\\n * The following map types are supported:\\n *\\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\\n */\\nlibrary EnumerableMap {\\n    using EnumerableSet for EnumerableSet.Bytes32Set;\\n\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Map type with\\n    // bytes32 keys and values.\\n    // The Map implementation uses private functions, and user-facing\\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\\n    // the underlying Map.\\n    // This means that we can only create new EnumerableMaps for types that fit\\n    // in bytes32.\\n\\n    struct Bytes32ToBytes32Map {\\n        // Storage of keys\\n        EnumerableSet.Bytes32Set _keys;\\n        mapping(bytes32 => bytes32) _values;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        Bytes32ToBytes32Map storage map,\\n        bytes32 key,\\n        bytes32 value\\n    ) internal returns (bool) {\\n        map._values[key] = value;\\n        return map._keys.add(key);\\n    }\\n\\n    /**\\n     * @dev Removes a key-value pair from a map. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\\n        delete map._values[key];\\n        return map._keys.remove(key);\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\\n        return map._keys.contains(key);\\n    }\\n\\n    /**\\n     * @dev Returns the number of key-value pairs in the map. O(1).\\n     */\\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\\n        return map._keys.length();\\n    }\\n\\n    /**\\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of entries inside the\\n     * array, and it may change when more entries are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\\n        bytes32 key = map._keys.at(index);\\n        return (key, map._values[key]);\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\\n        bytes32 value = map._values[key];\\n        if (value == bytes32(0)) {\\n            return (contains(map, key), bytes32(0));\\n        } else {\\n            return (true, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || contains(map, key), \\\"EnumerableMap: nonexistent key\\\");\\n        return value;\\n    }\\n\\n    /**\\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\\n     */\\n    function get(\\n        Bytes32ToBytes32Map storage map,\\n        bytes32 key,\\n        string memory errorMessage\\n    ) internal view returns (bytes32) {\\n        bytes32 value = map._values[key];\\n        require(value != 0 || contains(map, key), errorMessage);\\n        return value;\\n    }\\n\\n    // UintToAddressMap\\n\\n    struct UintToAddressMap {\\n        Bytes32ToBytes32Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        address value\\n    ) internal returns (bool) {\\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\\n        return remove(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\\n        return contains(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\\n        return length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\\n        (bytes32 key, bytes32 value) = at(map._inner, index);\\n        return (uint256(key), address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\\n        return (success, address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        UintToAddressMap storage map,\\n        uint256 key,\\n        string memory errorMessage\\n    ) internal view returns (address) {\\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\\n    }\\n\\n    // AddressToUintMap\\n\\n    struct AddressToUintMap {\\n        Bytes32ToBytes32Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(\\n        AddressToUintMap storage map,\\n        address key,\\n        uint256 value\\n    ) internal returns (bool) {\\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\\n        return remove(map._inner, bytes32(uint256(uint160(key))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\\n        return contains(map._inner, bytes32(uint256(uint160(key))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\\n        return length(map._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\\n        (bytes32 key, bytes32 value) = at(map._inner, index);\\n        return (address(uint160(uint256(key))), uint256(value));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\\n        return (success, uint256(value));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(\\n        AddressToUintMap storage map,\\n        address key,\\n        string memory errorMessage\\n    ) internal view returns (uint256) {\\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\\n    }\\n}\\n\",\"keccak256\":\"0x945530d5b3f07eb3d25a42414cf652bb744ae9f2e4c77c327584cafe6a156753\",\"license\":\"MIT\"},\"src/contracts/lib/struct/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xd093adb23ded844d69c960ac667c328da4f5d283f2e22e9f68f6a16dc56a2fc3\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract BaseProxy {\\n    \\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x54f7867c6f4d62957873c28ca81c2f5de2a02e720819fd90561e655ea2c8344a\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseUUPSLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\nimport \\\"./IERC1822.sol\\\";\\nimport \\\"./IProxy.sol\\\";\\nimport \\\"./BaseProxy.sol\\\";\\nimport \\\"./BaseUUPSStorage.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\nimport \\\"../lib/Address.sol\\\";\\nimport \\\"../lib/StorageSlot.sol\\\";\\nimport \\\"../acl/IACL.sol\\\";\\nimport \\\"../utils/Message.sol\\\";\\nimport \\\"../lib/Context.sol\\\";\\n\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n\\n * An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n */\\n\\nabstract contract BaseUUPSLogic is BaseUUPSStorage, BaseProxy, Initializable, IProxy, IERC1822Proxiable, Message {\\n \\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_implementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n      /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyAdmin() {\\n        require(_getProxyAdmin() == _msgSender(), \\\"caller is not the owner\\\");\\n        _;\\n    }\\n\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPS: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    function _hasPermission(bytes4 selector) internal view returns (bool) {\\n        return IACL(_livelyACL).hasAccess(Context.generateCtx(address(this)), msg.sender, selector);\\n    }\\n\\n\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n\\n    constructor() {\\n      _disableInitializers();\\n      _setProxyAdmin(_msgSender());\\n    }\\n\\n\\n    function __BASE_UUPS_init(string calldata domainName, string calldata domainVersion, string calldata domainRealm, address acl) internal onlyAdmin onlyInitializing {\\n        __BASE_UUPS_init_unchained(domainName, domainVersion, domainRealm, acl);\\n    }\\n\\n    function __BASE_UUPS_init_unchained(string calldata domainName, string calldata domainVersion, string calldata domainRealm, address acl) internal onlyInitializing {\\n        _domainName = domainName;\\n        _domainVersion = domainVersion;\\n        _domainRealmHash = keccak256(abi.encode(domainRealm));\\n        _livelyACL = acl;\\n        _isUpgradable = false;\\n        _isEnabled = true;\\n    }\\n\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(_isEnabled, \\\"Context Is Not Activated\\\");\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        require(_isEnabled, \\\"Context Is Not Activated\\\");\\n        address currentImplementation = _implementation();\\n        emit Upgraded(newImplementation);       // TODO Does it remove?\\n        emit ProxyUpgraded(msg.sender, address(this), newImplementation, currentImplementation, \\n                    IProxy(newImplementation).subjectVersion(), IProxy(currentImplementation).subjectVersion());\\n        _setImplementation(newImplementation);                \\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal returns (bytes memory) {\\n        _upgradeTo(newImplementation);\\n        // TODO return empty bytes\\n        if (data.length > 0 || forceCall) {\\n            return _functionDelegateCall(newImplementation, data);\\n        }\\n        return new bytes(0);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal returns (bytes memory) {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n            return new bytes(0);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            return _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     */\\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\\n        require(_isEnabled, \\\"Context Is Not Activated\\\");\\n        require(Address.isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return Address.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate that the this implementation remains valid after an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    // /**\\n    //  * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n    //  *\\n    //  * Calls {_authorizeUpgrade}.\\n    //  *\\n    //  * Emits an {Upgraded} event.\\n    //  */\\n    // function upgradeTo(address newImplementation) external virtual onlyProxy {\\n    //     _authorizeUpgrade(newImplementation);\\n    //     _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    // }\\n\\n    // /**\\n    //  * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n    //  * encoded in `data`.\\n    //  *\\n    //  * Calls {_authorizeUpgrade}.\\n    //  *\\n    //  * Emits an {Upgraded} event.\\n    //  */\\n    // function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\\n    //     _authorizeUpgrade(newImplementation);\\n    //     _upgradeToAndCallUUPS(newImplementation, data, true);\\n    // }\\n\\n    function upgradeTo(address newImplementation, bytes memory data, bool forceInitCall) \\n                external virtual onlyProxy returns (bytes memory) {\\n        _authorizeUpgrade(newImplementation);\\n        return _upgradeToAndCallUUPS(newImplementation, data, forceInitCall);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual {\\n        require(_hasPermission(this.upgradeTo.selector), \\\"Context Upgradability Forbidden\\\");\\n        require(_isUpgradable, \\\"Context Is Not Upgradable\\\");\\n    }\\n\\n\\n    function getProxyAdmin() external view returns (address) {\\n        return _getProxyAdmin();\\n    }\\n\\n    function setProxyAdmin(address newAdmin) external returns (bool) {\\n        _setProxyAdmin(newAdmin);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getProxyAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setProxyAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"new admin is the zero address\\\");\\n        emit ProxyAdminChanged(_msgSender(), address(this), _getProxyAdmin(), newAdmin);\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;        \\n    }\\n \\n    function setActivity(bool value) external returns (bool) {\\n        _isEnabled = value;\\n        emit ActivityChanged(_msgSender(), address(this), _domainRealmHash, value);\\n        return value;\\n    }\\n\\n    function setUpgradability(bool value) external returns (bool) {\\n        _isUpgradable = value;\\n        emit UpgradablilityChanged(_msgSender(), address(this), _domainRealmHash, value);\\n        return value;\\n    }\\n\\n    function subjectName() external view returns (string memory) {\\n        return _domainName;\\n    }\\n\\n    function subjectVersion() external view returns (string memory) {\\n        return _domainVersion;\\n    }\\n\\n    function subjectRealm() external view returns (bytes32) {\\n        return _domainRealmHash;\\n    }\\n\\n    function subjectContext() external view returns (bytes32) {\\n        return Context.generateCtx(address(this));\\n    }\\n\\n    function implementation() external view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function isActivated() external view returns (bool) {\\n        return _isEnabled;\\n    }\\n\\n    function isUpgradable() external view returns (bool) {\\n        return _isUpgradable;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xdccd27fe5e95f79ff661549739612ee9b5ab871bc15d4e6b407caa4d5f77568b\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseUUPSStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\nimport \\\"./IERC1822.sol\\\";\\nimport \\\"./IProxy.sol\\\";\\nimport \\\"./BaseProxy.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\nimport \\\"../lib/Address.sol\\\";\\nimport \\\"../lib/StorageSlot.sol\\\";\\nimport \\\"../acl/IACL.sol\\\";\\nimport \\\"../utils/Message.sol\\\";\\nimport \\\"../lib/Context.sol\\\";\\n\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\n\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n */\\n\\nabstract contract BaseUUPSStorage {\\n \\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 internal constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address internal immutable __self = address(this);\\n    address internal _livelyACL;\\n    string internal _domainName;\\n    string internal _domainVersion;\\n    bytes32 internal _domainRealmHash;\\n    bool internal _isEnabled;\\n    bool internal _isUpgradable;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     */     \\n    uint256[64] private __gap;\\n}\\n\",\"keccak256\":\"0xf8c27bd27f4354355f0cd5860440a1b3de688fd939594fd8c5f11aa0a01921f4\",\"license\":\"MIT\"},\"src/contracts/proxy/IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6499fc370056b9391b97f313f250e5f19e6e69d2c306ec0e14c5dc9bea1c4032\",\"license\":\"MIT\"},\"src/contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\ninterface IProxy {\\n\\n    event Upgraded(address indexed implementation);\\n\\n    event ProxyUpgraded(address indexed sender, address indexed proxy, address indexed newImplementation, \\n                    address oldImplementation, string newVersion, string oldVersion);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event ProxyAdminChanged(address indexed sender, address indexed proxy, address previousAdmin, address newAdmin);\\n                    \\n\\n    event ActivityChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool value);\\n\\n    event UpgradablilityChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool value);\\n\\n    function upgradeTo(address newImplementation, bytes memory data, bool forceInitCall) external returns (bytes memory);\\n\\n    function setActivity(bool value) external returns (bool);\\n\\n    function setUpgradability(bool value) external returns (bool);\\n\\n    function setProxyAdmin(address newAdmin) external returns (bool);\\n\\n    function subjectName() external view returns (string calldata);\\n\\n    function subjectVersion() external view returns (string calldata);\\n\\n    function subjectRealm() external view returns (bytes32);\\n\\n    function subjectContext() external view returns (bytes32);\\n\\n    function implementation() external view returns (address);\\n\\n    function isActivated() external view returns (bool);\\n\\n    function isUpgradable() external view returns (bool);\\n\\n    function getProxyAdmin() external view returns (address);\\n}\",\"keccak256\":\"0x95b751f6a08c3ec412697f23aa030e2ad62de2e43f4fcc8ea17a6b56d32f52d4\",\"license\":\"MIT\"},\"src/contracts/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\nimport \\\"../lib/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint16 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint16 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint16 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint16).max);\\n    }\\n\\n    function _setInitializedVersion(uint16 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !Address.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xacd42dfb445d8fd404957ffee12679bb125d60aa95d4bf8fecd816923fde3036\",\"license\":\"MIT\"},\"src/contracts/utils/Message.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Message {\\n\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     */\\n    uint256[64] private __gap;\\n}\\n\",\"keccak256\":\"0xf41251790b8d3d88d1e129cffafb85051ecea590017afaa287a6e738289c068a\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 2560,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_livelyACL",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2562,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_domainName",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 2564,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_domainVersion",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 2566,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_domainRealmHash",
        "offset": 0,
        "slot": "3",
        "type": "t_bytes32"
      },
      {
        "astId": 2568,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_isEnabled",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 2570,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_isUpgradable",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 2575,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "__gap",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_uint256)64_storage"
      },
      {
        "astId": 2717,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "69",
        "type": "t_uint16"
      },
      {
        "astId": 2720,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_initializing",
        "offset": 2,
        "slot": "69",
        "type": "t_bool"
      },
      {
        "astId": 3164,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "__gap",
        "offset": 0,
        "slot": "70",
        "type": "t_array(t_uint256)64_storage"
      },
      {
        "astId": 84,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_ctxMap",
        "offset": 0,
        "slot": "134",
        "type": "t_mapping(t_bytes32,t_struct(Context)51_storage)"
      },
      {
        "astId": 89,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_roleMap",
        "offset": 0,
        "slot": "135",
        "type": "t_mapping(t_bytes32,t_struct(Role)61_storage)"
      },
      {
        "astId": 94,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_realmMap",
        "offset": 0,
        "slot": "136",
        "type": "t_mapping(t_bytes32,t_struct(Realm)71_storage)"
      },
      {
        "astId": 99,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "_groupMap",
        "offset": 0,
        "slot": "137",
        "type": "t_mapping(t_bytes32,t_struct(Group)79_storage)"
      },
      {
        "astId": 102,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "LIVELY_REALM",
        "offset": 0,
        "slot": "138",
        "type": "t_struct(Realm)71_storage"
      },
      {
        "astId": 105,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "LIVELY_GROUP",
        "offset": 0,
        "slot": "142",
        "type": "t_struct(Group)79_storage"
      },
      {
        "astId": 108,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "LIVELY_ADMIN",
        "offset": 0,
        "slot": "146",
        "type": "t_struct(Role)61_storage"
      },
      {
        "astId": 111,
        "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
        "label": "SYSTEM_ADMIN",
        "offset": 0,
        "slot": "152",
        "type": "t_struct(Role)61_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)64_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[64]",
        "numberOfBytes": "2048"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Status)28": {
        "encoding": "inplace",
        "label": "enum ACLManager.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_enum(Status)28)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => enum ACLManager.Status)",
        "numberOfBytes": "32",
        "value": "t_enum(Status)28"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes32,t_enum(Status)28))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes32 => enum ACLManager.Status))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_enum(Status)28)"
      },
      "t_mapping(t_bytes32,t_struct(Context)51_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ACLManager.Context)",
        "numberOfBytes": "32",
        "value": "t_struct(Context)51_storage"
      },
      "t_mapping(t_bytes32,t_struct(Group)79_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ACLManager.Group)",
        "numberOfBytes": "32",
        "value": "t_struct(Group)79_storage"
      },
      "t_mapping(t_bytes32,t_struct(Realm)71_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ACLManager.Realm)",
        "numberOfBytes": "32",
        "value": "t_struct(Realm)71_storage"
      },
      "t_mapping(t_bytes32,t_struct(Role)61_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ACLManager.Role)",
        "numberOfBytes": "32",
        "value": "t_struct(Role)61_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AddressToUintMap)978_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableMap.AddressToUintMap",
        "members": [
          {
            "astId": 977,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Bytes32ToBytes32Map)511_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Bytes32Set)1429_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Bytes32Set",
        "members": [
          {
            "astId": 1428,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)1235_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Bytes32ToBytes32Map)511_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableMap.Bytes32ToBytes32Map",
        "members": [
          {
            "astId": 506,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "_keys",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Bytes32Set)1429_storage"
          },
          {
            "astId": 510,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "_values",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_bytes32)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Context)51_storage": {
        "encoding": "inplace",
        "label": "struct ACLManager.Context",
        "members": [
          {
            "astId": 30,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 32,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "version",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 34,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "realm",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 36,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "smca",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 38,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "isEnabled",
            "offset": 20,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 40,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "isUpgradable",
            "offset": 21,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 47,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "resources",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_enum(Status)28))"
          },
          {
            "astId": 50,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "funcSet",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Bytes32Set)1429_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Group)79_storage": {
        "encoding": "inplace",
        "label": "struct ACLManager.Group",
        "members": [
          {
            "astId": 73,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 75,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "isEnabled",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 78,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "roles",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Bytes32Set)1429_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Realm)71_storage": {
        "encoding": "inplace",
        "label": "struct ACLManager.Realm",
        "members": [
          {
            "astId": 63,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 65,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "isEnabled",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 67,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "isUpgradable",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 70,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "ctxSet",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Bytes32Set)1429_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Role)61_storage": {
        "encoding": "inplace",
        "label": "struct ACLManager.Role",
        "members": [
          {
            "astId": 53,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 55,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "group",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 57,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "isEnabled",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 60,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "userMap",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(AddressToUintMap)978_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Set)1235_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 1230,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 1234,
            "contract": "src/contracts/acl/ACLManagement.sol:ACLManager",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}