{
  "contractName": "ERC1967ProxyTest",
  "sourceName": "src/contracts/test/proxy/ERC1967ProxyTest.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x608060405260405161070138038061070183398101604081905261002291610339565b61002e82826000610035565b5050610456565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100fa565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100f383836040518060400160405280601481526020017f44656c65676174652043616c6c204661696c65640000000000000000000000008152506101cc60201b60201c565b9392505050565b61010d816102ac60201b6100691760201c565b6101745760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101ab7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6102bb60201b6100781760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606101e1846102ac60201b6100691760201c565b61022d5760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c20436f6e747261637420416464726573730000000000000000604482015260640161016b565b600080856001600160a01b0316856040516102489190610407565b600060405180830381855af49150503d8060008114610283576040519150601f19603f3d011682016040523d82523d6000602084013e610288565b606091505b50915091506102a28282866102be60201b61007b1760201c565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102cd5750816100f3565b8251156102dd5782518084602001fd5b8160405162461bcd60e51b815260040161016b9190610423565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610328578181015183820152602001610310565b838111156100645750506000910152565b6000806040838503121561034c57600080fd5b82516001600160a01b038116811461036357600080fd5b60208401519092506001600160401b038082111561038057600080fd5b818501915085601f83011261039457600080fd5b8151818111156103a6576103a66102f7565b604051601f8201601f19908116603f011681019083821181831017156103ce576103ce6102f7565b816040528281528860208487010111156103e757600080fd5b6103f883602083016020880161030d565b80955050505050509250929050565b6000825161041981846020870161030d565b9190910192915050565b602081526000825180602084015261044281604085016020870161030d565b601f01601f19169190910160400192915050565b61029c806104656000396000f3fe60806040523661001357610011610017565b005b6100115b6100276100226100bd565b6100f5565b565b606061006283836040518060400160405280601481526020017311195b1959d85d194810d85b1b0811985a5b195960621b815250610119565b9392505050565b6001600160a01b03163b151590565b90565b6060831561008a575081610062565b82511561009a5782518084602001fd5b8160405162461bcd60e51b81526004016100b49190610217565b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e808015610114573d6000f35b3d6000fd5b60606001600160a01b0384163b6101725760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c20436f6e74726163742041646472657373000000000000000060448201526064016100b4565b600080856001600160a01b03168560405161018d919061024a565b600060405180830381855af49150503d80600081146101c8576040519150601f19603f3d011682016040523d82523d6000602084013e6101cd565b606091505b50915091506101dd82828661007b565b9695505050505050565b60005b838110156102025781810151838201526020016101ea565b83811115610211576000848401525b50505050565b60208152600082518060208401526102368160408501602087016101e7565b601f01601f19169190910160400192915050565b6000825161025c8184602087016101e7565b919091019291505056fea264697066735822122070523ad68a33e77b115f7344a497f78d9b68632071d318d2dccfe90adf41685a64736f6c634300080f0033",
  "deployedBytecode": "0x60806040523661001357610011610017565b005b6100115b6100276100226100bd565b6100f5565b565b606061006283836040518060400160405280601481526020017311195b1959d85d194810d85b1b0811985a5b195960621b815250610119565b9392505050565b6001600160a01b03163b151590565b90565b6060831561008a575081610062565b82511561009a5782518084602001fd5b8160405162461bcd60e51b81526004016100b49190610217565b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e808015610114573d6000f35b3d6000fd5b60606001600160a01b0384163b6101725760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c20436f6e74726163742041646472657373000000000000000060448201526064016100b4565b600080856001600160a01b03168560405161018d919061024a565b600060405180830381855af49150503d80600081146101c8576040519150601f19603f3d011682016040523d82523d6000602084013e6101cd565b606091505b50915091506101dd82828661007b565b9695505050505050565b60005b838110156102025781810151838201526020016101ea565b83811115610211576000848401525b50505050565b60208152600082518060208401526102368160408501602087016101e7565b601f01601f19169190910160400192915050565b6000825161025c8184602087016101e7565b919091019291505056fea264697066735822122070523ad68a33e77b115f7344a497f78d9b68632071d318d2dccfe90adf41685a64736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_12387": {
          "entryPoint": null,
          "id": 12387,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_setImplementation_12451": {
          "entryPoint": 250,
          "id": 12451,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_upgradeToAndCall_12496": {
          "entryPoint": 53,
          "id": 12496,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@_upgradeTo_12466": {
          "entryPoint": 107,
          "id": 12466,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@functionDelegateCall_2296": {
          "entryPoint": 171,
          "id": 2296,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@functionDelegateCall_2333": {
          "entryPoint": 460,
          "id": 2333,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@getAddressSlot_2484": {
          "entryPoint": 699,
          "id": 2484,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_2084": {
          "entryPoint": 684,
          "id": 2084,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@verifyCallResult_2364": {
          "entryPoint": 702,
          "id": 2364,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
          "entryPoint": 825,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 1031,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1059,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "copy_memory_to_memory": {
          "entryPoint": 781,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 759,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:2895:45",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:45",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "46:95:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "63:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "70:3:45",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "75:10:45",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "66:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "66:20:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "56:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "56:31:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "56:31:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "103:1:45",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "106:4:45",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "96:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "96:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "96:15:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "127:1:45",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "130:4:45",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "120:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:15:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "120:15:45"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "14:127:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "199:205:45",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "209:10:45",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "218:1:45",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "213:1:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "278:63:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "303:3:45"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "308:1:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "299:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "299:11:45"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "322:3:45"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:45"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "318:11:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "312:5:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "312:18:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "292:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "292:39:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "292:39:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "239:1:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "242:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "236:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "236:13:45"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "250:19:45",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "252:15:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:1:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "264:2:45",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "257:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "257:10:45"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "252:1:45"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "232:3:45",
                        "statements": []
                      },
                      "src": "228:113:45"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "367:31:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "380:3:45"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "385:6:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "376:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "376:16:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "394:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "369:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "369:27:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "369:27:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "356:1:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "353:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "353:13:45"
                      },
                      "nodeType": "YulIf",
                      "src": "350:48:45"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "177:3:45",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "182:3:45",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "187:6:45",
                    "type": ""
                  }
                ],
                "src": "146:258:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "516:943:45",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "562:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "571:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "574:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "564:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "564:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "564:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "537:7:45"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "546:9:45"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "533:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "533:23:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "558:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "529:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "529:32:45"
                      },
                      "nodeType": "YulIf",
                      "src": "526:52:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "587:29:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "606:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "600:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:16:45"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "591:5:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "679:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "688:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "691:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "681:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "681:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "681:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "638:5:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "649:5:45"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "664:3:45",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "669:1:45",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "660:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "660:11:45"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "673:1:45",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "656:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "656:19:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:31:45"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "635:2:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "635:42:45"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "628:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "628:50:45"
                      },
                      "nodeType": "YulIf",
                      "src": "625:70:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "704:15:45",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "714:5:45"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "704:6:45"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "728:39:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "752:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "763:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "748:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "748:18:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "742:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:25:45"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "732:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "776:28:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "794:2:45",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "798:1:45",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "790:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "790:10:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "802:1:45",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:18:45"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "780:2:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "831:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "840:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "843:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "833:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "833:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "833:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "819:6:45"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "827:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "816:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "816:14:45"
                      },
                      "nodeType": "YulIf",
                      "src": "813:34:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "856:32:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "870:9:45"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "881:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:22:45"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "860:2:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "936:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "945:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "948:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "938:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "938:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "938:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "915:2:45"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "919:4:45",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "911:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "911:13:45"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "926:7:45"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "907:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "907:27:45"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "900:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "900:35:45"
                      },
                      "nodeType": "YulIf",
                      "src": "897:55:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "961:19:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "977:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "971:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:9:45"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "965:2:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1003:22:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1005:16:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1005:18:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1005:18:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "995:2:45"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "999:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "992:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "992:10:45"
                      },
                      "nodeType": "YulIf",
                      "src": "989:36:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1034:17:45",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1048:2:45",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1044:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1044:7:45"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "1038:2:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1060:23:45",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1080:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1074:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1074:9:45"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "1064:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1092:71:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1114:6:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1138:2:45"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1142:4:45",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1134:3:45"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1134:13:45"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1149:2:45"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1130:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1130:22:45"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1154:2:45",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1126:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1126:31:45"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1159:2:45"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1122:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1122:40:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1110:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1110:53:45"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "1096:10:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1222:22:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1224:16:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1224:18:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1224:18:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1181:10:45"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1193:2:45"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1178:2:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1178:18:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1201:10:45"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1213:6:45"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1198:2:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1198:22:45"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "1175:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1175:46:45"
                      },
                      "nodeType": "YulIf",
                      "src": "1172:72:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1260:2:45",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1264:10:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1253:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1253:22:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1253:22:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1291:6:45"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1299:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1284:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1284:18:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1284:18:45"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1348:16:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1357:1:45",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1360:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1350:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1350:12:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1350:12:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1325:2:45"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1329:2:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1321:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1321:11:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1334:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1317:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1317:20:45"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1339:7:45"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1314:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:33:45"
                      },
                      "nodeType": "YulIf",
                      "src": "1311:53:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1399:2:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1403:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1395:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1395:11:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1412:6:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1420:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1408:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1408:15:45"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1425:2:45"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "1373:21:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:55:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1373:55:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1437:16:45",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1447:6:45"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1437:6:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "474:9:45",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "485:7:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "497:6:45",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "505:6:45",
                    "type": ""
                  }
                ],
                "src": "409:1050:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1638:235:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1655:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1666:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1648:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1648:21:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1648:21:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1689:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1700:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1685:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1685:18:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1705:2:45",
                            "type": "",
                            "value": "45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1678:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:30:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1678:30:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1728:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1739:2:45",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1724:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1724:18:45"
                          },
                          {
                            "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1744:34:45",
                            "type": "",
                            "value": "ERC1967: new implementation is n"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1717:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1717:62:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1717:62:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1799:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1810:2:45",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1795:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1795:18:45"
                          },
                          {
                            "hexValue": "6f74206120636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1815:15:45",
                            "type": "",
                            "value": "ot a contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1788:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:43:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1788:43:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1840:27:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1852:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1863:3:45",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1848:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1848:19:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1840:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1615:9:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1629:4:45",
                    "type": ""
                  }
                ],
                "src": "1464:409:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2052:174:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2069:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2080:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2062:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2062:21:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2062:21:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2103:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2114:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2099:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2099:18:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2119:2:45",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2092:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2092:30:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2092:30:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2142:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2153:2:45",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2138:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2138:18:45"
                          },
                          {
                            "hexValue": "496c6c6567616c20436f6e74726163742041646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2158:26:45",
                            "type": "",
                            "value": "Illegal Contract Address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2131:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2131:54:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2131:54:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2194:26:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2206:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2217:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2202:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2202:18:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2194:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2029:9:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2043:4:45",
                    "type": ""
                  }
                ],
                "src": "1878:348:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2368:137:45",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2378:27:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2398:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2392:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2392:13:45"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "2382:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2440:6:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2448:4:45",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2436:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2436:17:45"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2455:3:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2460:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "2414:21:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2414:53:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2414:53:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2476:23:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2487:3:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2492:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2483:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2483:16:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "2476:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "2344:3:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2349:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "2360:3:45",
                    "type": ""
                  }
                ],
                "src": "2231:274:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2631:262:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2648:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2659:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2641:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2641:21:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2641:21:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2671:27:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2691:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2685:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2685:13:45"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "2675:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2718:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2729:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2714:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2714:18:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2734:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2707:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2707:34:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2707:34:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2776:6:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2784:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2772:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2772:15:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2793:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2804:2:45",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2789:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2789:18:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2809:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "2750:21:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2750:66:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2750:66:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2825:62:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2841:9:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2860:6:45"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2868:2:45",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2856:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2856:15:45"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2877:2:45",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2873:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2873:7:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2852:29:45"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2837:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2837:45:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2884:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2833:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2833:54:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2825:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2600:9:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2611:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2622:4:45",
                    "type": ""
                  }
                ],
                "src": "2510:383:45"
              }
            ]
          },
          "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Illegal Contract Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
          "id": 45,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x701 CODESIZE SUB DUP1 PUSH2 0x701 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x456 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44656C65676174652043616C6C204661696C6564000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1CC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10D DUP2 PUSH2 0x2AC PUSH1 0x20 SHL PUSH2 0x69 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1AB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2BB PUSH1 0x20 SHL PUSH2 0x78 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E1 DUP5 PUSH2 0x2AC PUSH1 0x20 SHL PUSH2 0x69 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C20436F6E747261637420416464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x283 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x288 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A2 DUP3 DUP3 DUP7 PUSH2 0x2BE PUSH1 0x20 SHL PUSH2 0x7B OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2CD JUMPI POP DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2DD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x328 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x310 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x64 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x3A6 JUMPI PUSH2 0x3A6 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3CE JUMPI PUSH2 0x3CE PUSH2 0x2F7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x30D JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x419 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x30D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x442 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29C DUP1 PUSH2 0x465 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0xBD JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x62 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x11195B1959D85D194810D85B1B0811985A5B1959 PUSH1 0x62 SHL DUP2 MSTORE POP PUSH2 0x119 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x8A JUMPI POP DUP2 PUSH2 0x62 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x9A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x114 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C20436F6E747261637420416464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DD DUP3 DUP3 DUP7 PUSH2 0x7B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x202 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x236 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x25C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x523AD68A33E77B115F7344A497F78D9B68 PUSH4 0x2071D318 0xD2 0xDC 0xCF 0xE9 EXP 0xDF COINBASE PUSH9 0x5A64736F6C63430008 0xF STOP CALLER ",
      "sourceMap": "139:705:32:-:0;;;528:106;;;;;;;;;;;;;;;;;;:::i;:::-;590:39;608:6;616:5;623;590:17;:39::i;:::-;528:106;;139:705;;1337:262:33;1457:29;1468:17;1457:10;:29::i;:::-;1510:1;1496:4;:11;:15;:28;;;;1515:9;1496:28;1492:103;;;1534:54;1564:17;1583:4;1534:29;;;;;:54;;:::i;:::-;;1492:103;1337:262;;;:::o;1073:142::-;1135:37;1154:17;1135:18;:37::i;:::-;1183:27;;-1:-1:-1;;;;;1183:27:33;;;;;;;;1073:142;:::o;5857:173:7:-;5940:12;5967:58;5988:6;5996:4;5967:58;;;;;;;;;;;;;;;;;:20;;;:58;;:::i;:::-;5960:65;5857:173;-1:-1:-1;;;5857:173:7:o;728:251:33:-;805:38;825:17;805:19;;;;;:38;;:::i;:::-;797:96;;;;-1:-1:-1;;;797:96:33;;1666:2:45;797:96:33;;;1648:21:45;1705:2;1685:18;;;1678:30;1744:34;1724:18;;;1717:62;-1:-1:-1;;;1795:18:45;;;1788:43;1848:19;;797:96:33;;;;;;;;;957:17;899:49;388:66;927:20;;899:27;;;;;:49;;:::i;:::-;:75;;-1:-1:-1;;;;;;899:75:33;-1:-1:-1;;;;;899:75:33;;;;;;;;;;-1:-1:-1;728:251:33:o;6168:408:7:-;6290:12;6318:27;6338:6;6318:19;;;;;:27;;:::i;:::-;6310:64;;;;-1:-1:-1;;;6310:64:7;;2080:2:45;6310:64:7;;;2062:21:45;2119:2;2099:18;;;2092:30;2158:26;2138:18;;;2131:54;2202:18;;6310:64:7;1878:348:45;6310:64:7;6437:12;6451:23;6478:6;-1:-1:-1;;;;;6478:19:7;6498:4;6478:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6436:67;;;;6516:55;6542:7;6551:10;6563:7;6516:25;;;;;:55;;:::i;:::-;6509:62;6168:408;-1:-1:-1;;;;;;6168:408:7:o;1130:302::-;-1:-1:-1;;;;;1404:19:7;;:23;;;1130:302::o;1489:131:10:-;1606:4;1489:131::o;6748:624:7:-;6880:12;6904:7;6900:468;;;-1:-1:-1;6928:10:7;6921:17;;6900:468;7023:17;;:21;7019:343;;7233:10;7227:17;7283:15;7270:10;7266:2;7262:19;7255:44;7019:343;7340:12;7333:20;;-1:-1:-1;;;7333:20:7;;;;;;;;:::i;14:127:45:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:258;218:1;228:113;242:6;239:1;236:13;228:113;;;318:11;;;312:18;299:11;;;292:39;264:2;257:10;228:113;;;359:6;356:1;353:13;350:48;;;-1:-1:-1;;394:1:45;376:16;;369:27;146:258::o;409:1050::-;497:6;505;558:2;546:9;537:7;533:23;529:32;526:52;;;574:1;571;564:12;526:52;600:16;;-1:-1:-1;;;;;645:31:45;;635:42;;625:70;;691:1;688;681:12;625:70;763:2;748:18;;742:25;714:5;;-1:-1:-1;;;;;;816:14:45;;;813:34;;;843:1;840;833:12;813:34;881:6;870:9;866:22;856:32;;926:7;919:4;915:2;911:13;907:27;897:55;;948:1;945;938:12;897:55;977:2;971:9;999:2;995;992:10;989:36;;;1005:18;;:::i;:::-;1080:2;1074:9;1048:2;1134:13;;-1:-1:-1;;1130:22:45;;;1154:2;1126:31;1122:40;1110:53;;;1178:18;;;1198:22;;;1175:46;1172:72;;;1224:18;;:::i;:::-;1264:10;1260:2;1253:22;1299:2;1291:6;1284:18;1339:7;1334:2;1329;1325;1321:11;1317:20;1314:33;1311:53;;;1360:1;1357;1350:12;1311:53;1373:55;1425:2;1420;1412:6;1408:15;1403:2;1399;1395:11;1373:55;:::i;:::-;1447:6;1437:16;;;;;;;409:1050;;;;;:::o;2231:274::-;2360:3;2398:6;2392:13;2414:53;2460:6;2455:3;2448:4;2440:6;2436:17;2414:53;:::i;:::-;2483:16;;;;;2231:274;-1:-1:-1;;2231:274:45:o;2510:383::-;2659:2;2648:9;2641:21;2622:4;2691:6;2685:13;2734:6;2729:2;2718:9;2714:18;2707:34;2750:66;2809:6;2804:2;2793:9;2789:18;2784:2;2776:6;2772:15;2750:66;:::i;:::-;2877:2;2856:15;-1:-1:-1;;2852:29:45;2837:45;;;;2884:2;2833:54;;2510:383;-1:-1:-1;;2510:383:45:o;:::-;139:705:32;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_9538": {
          "entryPoint": null,
          "id": 9538,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_9546": {
          "entryPoint": null,
          "id": 9546,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_beforeFallback_9551": {
          "entryPoint": null,
          "id": 9551,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_delegate_9511": {
          "entryPoint": 245,
          "id": 9511,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_fallback_9530": {
          "entryPoint": 23,
          "id": 9530,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_getImplementation_12427": {
          "entryPoint": null,
          "id": 12427,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_implementation_12399": {
          "entryPoint": 189,
          "id": 12399,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@functionDelegateCall_2296": {
          "entryPoint": 41,
          "id": 2296,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@functionDelegateCall_2333": {
          "entryPoint": 281,
          "id": 2333,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@getAddressSlot_2484": {
          "entryPoint": 120,
          "id": 2484,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_2084": {
          "entryPoint": 105,
          "id": 2084,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@verifyCallResult_2364": {
          "entryPoint": 123,
          "id": 2364,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 586,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 535,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "copy_memory_to_memory": {
          "entryPoint": 487,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1294:45",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:45",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "67:205:45",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "77:10:45",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "86:1:45",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "81:1:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "146:63:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "171:3:45"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "176:1:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "167:11:45"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "190:3:45"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "195:1:45"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "186:3:45"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "186:11:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:5:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "180:18:45"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "160:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "160:39:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "160:39:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "107:1:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "110:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "104:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "104:13:45"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "118:19:45",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "120:15:45",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "129:1:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "132:2:45",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "125:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "125:10:45"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "120:1:45"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "100:3:45",
                        "statements": []
                      },
                      "src": "96:113:45"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "235:31:45",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "248:3:45"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:6:45"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "244:3:45"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "244:16:45"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "262:1:45",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "237:6:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "237:27:45"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "237:27:45"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "224:1:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "227:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "221:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "221:13:45"
                      },
                      "nodeType": "YulIf",
                      "src": "218:48:45"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "45:3:45",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "50:3:45",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "55:6:45",
                    "type": ""
                  }
                ],
                "src": "14:258:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "398:262:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "408:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "408:21:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "408:21:45"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "438:27:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "458:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "452:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "452:13:45"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "442:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "485:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "496:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:18:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "501:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "474:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "474:34:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "474:34:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "543:6:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "551:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "539:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "539:15:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "560:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "571:2:45",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "556:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "556:18:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "576:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "517:21:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "517:66:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "517:66:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "592:62:45",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "608:9:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "627:6:45"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "635:2:45",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "623:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "623:15:45"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "644:2:45",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "640:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "640:7:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "619:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "619:29:45"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "604:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "604:45:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "651:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:54:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "592:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "367:9:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "378:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "389:4:45",
                    "type": ""
                  }
                ],
                "src": "277:383:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "839:174:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "856:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "867:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "849:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "849:21:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "849:21:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "890:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "901:2:45",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "886:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "886:18:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "906:2:45",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "879:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "879:30:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "879:30:45"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "929:9:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "940:2:45",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "925:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "925:18:45"
                          },
                          {
                            "hexValue": "496c6c6567616c20436f6e74726163742041646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "945:26:45",
                            "type": "",
                            "value": "Illegal Contract Address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "918:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "918:54:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "918:54:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "981:26:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "993:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1004:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "989:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "989:18:45"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "981:4:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "816:9:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "830:4:45",
                    "type": ""
                  }
                ],
                "src": "665:348:45"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1155:137:45",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1165:27:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1185:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1179:5:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:13:45"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1169:6:45",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1227:6:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1235:4:45",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1223:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1223:17:45"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1242:3:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1247:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "1201:21:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1201:53:45"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1201:53:45"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1263:23:45",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1274:3:45"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1279:6:45"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1270:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1270:16:45"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "1263:3:45"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "1131:3:45",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1136:6:45",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "1147:3:45",
                    "type": ""
                  }
                ],
                "src": "1018:274:45"
              }
            ]
          },
          "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Illegal Contract Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
          "id": 45,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0xBD JUMP JUMPDEST PUSH2 0xF5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x62 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x11195B1959D85D194810D85B1B0811985A5B1959 PUSH1 0x62 SHL DUP2 MSTORE POP PUSH2 0x119 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x8A JUMPI POP DUP2 PUSH2 0x62 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x9A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x114 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C20436F6E747261637420416464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DD DUP3 DUP3 DUP7 PUSH2 0x7B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x202 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x236 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x25C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x523AD68A33E77B115F7344A497F78D9B68 PUSH4 0x2071D318 0xD2 0xDC 0xCF 0xE9 EXP 0xDF COINBASE PUSH9 0x5A64736F6C63430008 0xF STOP CALLER ",
      "sourceMap": "139:705:32:-:0;;;;;;2654:11:23;:9;:11::i;:::-;139:705:32;;2447:11:23;2118:100;2185:28;2195:17;:15;:17::i;:::-;2185:9;:28::i;:::-;2118:100::o;5857:173:7:-;5940:12;5967:58;5988:6;5996:4;5967:58;;;;;;;;;;;;;-1:-1:-1;;;5967:58:7;;;:20;:58::i;:::-;5960:65;5857:173;-1:-1:-1;;;5857:173:7:o;1130:302::-;-1:-1:-1;;;;;1404:19:7;;:23;;;1130:302::o;1489:131:10:-;1606:4;1489:131::o;6748:624:7:-;6880:12;6904:7;6900:468;;;-1:-1:-1;6928:10:7;6921:17;;6900:468;7023:17;;:21;7019:343;;7233:10;7227:17;7283:15;7270:10;7266:2;7262:19;7255:44;7019:343;7340:12;7333:20;;-1:-1:-1;;;7333:20:7;;;;;;;;:::i;:::-;;;;;;;;704:138:32;771:12;798:39;388:66:33;585:55;-1:-1:-1;;;;;585:55:33;;510:135;798:39:32;791:46;;704:138;:::o;882:779:23:-;1192:14;1189:1;1186;1173:34;1388:1;1385;1369:14;1366:1;1350:14;1343:5;1330:60;1452:16;1449:1;1446;1431:38;1484:6;1539:52;;;;1626:16;1623:1;1616:27;1539:52;1566:16;1563:1;1556:27;6168:408:7;6290:12;-1:-1:-1;;;;;1404:19:7;;;6310:64;;;;-1:-1:-1;;;6310:64:7;;867:2:45;6310:64:7;;;849:21:45;906:2;886:18;;;879:30;945:26;925:18;;;918:54;989:18;;6310:64:7;665:348:45;6310:64:7;6437:12;6451:23;6478:6;-1:-1:-1;;;;;6478:19:7;6498:4;6478:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6436:67;;;;6516:55;6542:7;6551:10;6563:7;6516:25;:55::i;:::-;6509:62;6168:408;-1:-1:-1;;;;;;6168:408:7:o;14:258:45:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;262:1;253:6;248:3;244:16;237:27;218:48;;14:258;;;:::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:45;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:45:o;1018:274::-;1147:3;1185:6;1179:13;1201:53;1247:6;1242:3;1235:4;1227:6;1223:17;1201:53;:::i;:::-;1270:16;;;;;1018:274;-1:-1:-1;;1018:274:45:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "133600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "": "infinite"
      },
      "internal": {
        "_implementation()": "2156"
      }
    },
    "methodIdentifiers": {}
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/test/proxy/ERC1967ProxyTest.sol\":\"ERC1967ProxyTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/lib/LAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary LAddress {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n   *\\n   * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n   * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n   * constructor.\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies on extcodesize/address.code.length, which returns 0\\n    // for contracts in construction, since the code is only stored at the end\\n    // of the constructor execution.\\n\\n    return account.code.length > 0;\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, \\\"Insufficient balance\\\");\\n\\n    (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n    require(success, \\\"SendValue Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Performs a Solidity function call using a low level `call`. A\\n   * plain `call` is an unsafe replacement for a function call: use this\\n   * function instead.\\n   *\\n   * If `target` reverts with a revert reason, it is bubbled up by this\\n   * function (like regular Solidity function calls).\\n   *\\n   * Returns the raw returned data. To convert to the expected return value,\\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n   *\\n   * Requirements:\\n   *\\n   * - `target` must be a contract.\\n   * - calling `target` with `data` must not revert.\\n   */\\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionCall(target, data, \\\"Call Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n   * `errorMessage` as a fallback revert reason when `target` reverts.\\n   */\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but also transferring `value` wei to `target`.\\n   *\\n   * Requirements:\\n   *\\n   * - the calling contract must have an ETH balance of at least `value`.\\n   * - the called Solidity function must be `payable`.\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, value, \\\"Call With Value Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(address(this).balance >= value, \\\"Insufficient Balance For Call\\\");\\n    require(LAddress.isContract(target), \\\"Illegal Contract Address\\\");\\n\\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a static call.\\n   */\\n  function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n    return functionStaticCall(target, data, \\\"Static Call Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a static call.\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal view returns (bytes memory) {\\n    require(LAddress.isContract(target), \\\"Illegal Contract Address\\\");\\n\\n    (bool success, bytes memory returndata) = target.staticcall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a delegate call.\\n   */\\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionDelegateCall(target, data, \\\"Delegate Call Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a delegate call.\\n   */\\n  function functionDelegateCall(\\n    address target,\\n    bytes memory data,\\n    string memory message\\n  ) internal returns (bytes memory) {\\n    require(LAddress.isContract(target), \\\"Illegal Contract Address\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.delegatecall(data);\\n    return LAddress.verifyCallResult(success, returndata, message);\\n  }\\n\\n  /**\\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n   * revert reason using the provided one.\\n   */\\n  function verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) internal pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      // Look for revert reason and bubble it up if present\\n      if (returndata.length > 0) {\\n        // The easiest way to bubble the revert reason is using memory via assembly\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x7d59bfa264a24f3f8c59d3eefe74c0f3081234bfdc9f181888ce028a900fb572\",\"license\":\"MIT\"},\"src/contracts/lib/LStorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary LStorageSlot {\\n  struct AddressSlot {\\n    address value;\\n  }\\n\\n  struct BooleanSlot {\\n    bool value;\\n  }\\n\\n  struct Bytes32Slot {\\n    bytes32 value;\\n  }\\n\\n  struct Uint256Slot {\\n    uint256 value;\\n  }\\n\\n  /**\\n   * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n   */\\n  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n   */\\n  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n   */\\n  function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n   */\\n  function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x00c12bb8adba5ac60c7cebcb2fced78d2abbf5a2b7f1378f7f0381e1c7b0c0ac\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract BaseProxy {\\n  /**\\n   * @dev Delegates the current call to `implementation`.\\n   *\\n   * This function does not return to its internal call site, it will return directly to the external caller.\\n   */\\n  function _delegate(address implementation) internal virtual {\\n    assembly {\\n      // Copy msg.data. We take full control of memory in this inline assembly\\n      // block because it will not return to Solidity code. We overwrite the\\n      // Solidity scratch pad at memory position 0.\\n      calldatacopy(0, 0, calldatasize())\\n\\n      // Call the implementation.\\n      // out and outsize are 0 because we don't know the size yet.\\n      let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n      // Copy the returned data.\\n      returndatacopy(0, 0, returndatasize())\\n\\n      switch result\\n      // delegatecall returns 0 on error.\\n      case 0 {\\n        revert(0, returndatasize())\\n      }\\n      default {\\n        return(0, returndatasize())\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n   * and {_fallback} should delegate.\\n   */\\n  function _implementation() internal view virtual returns (address);\\n\\n  /**\\n   * @dev Delegates the current call to the address returned by `_implementation()`.\\n   *\\n   * This function does not return to its internal call site, it will return directly to the external caller.\\n   */\\n  function _fallback() internal virtual {\\n    _beforeFallback();\\n    _delegate(_implementation());\\n  }\\n\\n  /**\\n   * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n   * function in the contract matches the call data.\\n   */\\n  fallback() external payable virtual {\\n    _fallback();\\n  }\\n\\n  /**\\n   * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n   * is empty.\\n   */\\n  receive() external payable virtual {\\n    _fallback();\\n  }\\n\\n  /**\\n   * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n   * call, or as part of the Solidity `fallback` or `receive` functions.\\n   *\\n   * If overridden should call `super._beforeFallback()`.\\n   */\\n  function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x3edfd0233aac5bde241e0bf49843e0621fde4768650f1758c85581657778e8ff\",\"license\":\"MIT\"},\"src/contracts/proxy/IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n  /**\\n   * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n   * address.\\n   *\\n   * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n   * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n   * function revert if invoked through a proxy.\\n   */\\n  function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x52ff537da18dfa18e65daeb7597fc021a1950d2ad99201d398a4f6609f97aa50\",\"license\":\"MIT\"},\"src/contracts/test/proxy/ERC1967ProxyTest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.15 <0.9.0;\\n\\nimport \\\"../../proxy/BaseProxy.sol\\\";\\nimport \\\"./ERC1967UpgradeTest.sol\\\";\\n\\ncontract ERC1967ProxyTest is BaseProxy, ERC1967UpgradeTest {\\n  /**\\n   * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n   *\\n   * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n   * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n   */\\n  constructor(address _logic, bytes memory _data) payable {\\n    _upgradeToAndCall(_logic, _data, false);\\n  }\\n\\n  /**\\n   * @dev Returns the current implementation address.\\n   */\\n  function _implementation() internal view virtual override returns (address impl) {\\n    return ERC1967UpgradeTest._getImplementation();\\n  }\\n}\\n\",\"keccak256\":\"0xe62696d1325f013016530f99c61b9b3f91dd0289fba8880d9906f0c12fa166f3\",\"license\":\"MIT\"},\"src/contracts/test/proxy/ERC1967UpgradeTest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.15 <0.9.0;\\n\\nimport \\\"../../proxy/IERC1822.sol\\\";\\nimport \\\"../../lib/LAddress.sol\\\";\\nimport \\\"../../lib/LStorageSlot.sol\\\";\\n\\nabstract contract ERC1967UpgradeTest {\\n  bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n  // invalid\\n  bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n  event Upgraded(address indexed implementation);\\n\\n  function _getImplementation() internal view returns (address) {\\n    return LStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n  }\\n\\n  /**\\n   * @dev Stores a new address in the EIP1967 implementation slot.\\n   */\\n  function _setImplementation(address newImplementation) private {\\n    require(LAddress.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n    LStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n  }\\n\\n  /**\\n   * @dev Perform implementation upgrade\\n   *\\n   * Emits an {Upgraded} event.\\n   */\\n  function _upgradeTo(address newImplementation) internal {\\n    _setImplementation(newImplementation);\\n    emit Upgraded(newImplementation);\\n  }\\n\\n  /**\\n   * @dev Perform implementation upgrade with additional setup call.\\n   *\\n   * Emits an {Upgraded} event.\\n   */\\n  function _upgradeToAndCall(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) internal {\\n    _upgradeTo(newImplementation);\\n    if (data.length > 0 || forceCall) {\\n      LAddress.functionDelegateCall(newImplementation, data);\\n    }\\n  }\\n\\n  /**\\n   * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n   *\\n   * Emits an {Upgraded} event.\\n   */\\n  function _upgradeToAndCallUUPS(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) internal {\\n    // Upgrades from old implementations will perform a rollback test. This test requires the new\\n    // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n    // this special case will break upgrade paths from old UUPS implementation to new ones.\\n    if (LStorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n      _setImplementation(newImplementation);\\n    } else {\\n      try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n        require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n      } catch {\\n        revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n      }\\n      _upgradeToAndCall(newImplementation, data, forceCall);\\n    }\\n  }\\n\\n  /**\\n   * @dev Storage slot with the admin of the contract.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  /**\\n   * @dev Emitted when the admin account has changed.\\n   */\\n  event AdminChanged(address previousAdmin, address newAdmin);\\n\\n  /**\\n   * @dev Returns the current admin.\\n   */\\n  function _getAdmin() internal view returns (address) {\\n    return LStorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n  }\\n\\n  /**\\n   * @dev Stores a new address in the EIP1967 admin slot.\\n   */\\n  function _setAdmin(address newAdmin) private {\\n    require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n    LStorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n  }\\n\\n  /**\\n   * @dev Changes the admin of the proxy.\\n   *\\n   * Emits an {AdminChanged} event.\\n   */\\n  function _changeAdmin(address newAdmin) internal {\\n    emit AdminChanged(_getAdmin(), newAdmin);\\n    _setAdmin(newAdmin);\\n  }\\n\\n  /**\\n   * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n   * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n   */\\n  bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n}\\n\",\"keccak256\":\"0x8bb2df052d76b4dc75661f4456676df5ce6024093d818efa2934d34197f423e9\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}