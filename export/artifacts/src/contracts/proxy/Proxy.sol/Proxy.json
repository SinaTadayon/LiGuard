{
  "contractName": "Proxy",
  "sourceName": "src/contracts/proxy/Proxy.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newVersion",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldVersion",
          "type": "string"
        }
      ],
      "name": "ProxyUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x6080604052604051610a2c380380610a2c833981016040819052610022916106cb565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61073b565b6000805160206109e58339815191521461006957610069610760565b6100758282600061007d565b50505061087a565b60606100b57f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b61022360201b6100521760201c565b5460ff16156100dc576100c784610226565b5060408051600081526020810190915261021c565b836001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610136575060408051601f3d908101601f1916820190925261013391810190610776565b60015b61019e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084015b60405180910390fd5b6000805160206109e5833981519152811461020d5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610195565b506102198484846102e1565b90505b9392505050565b90565b6102398161031f60201b6100551760201c565b61029b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610195565b806102c06000805160206109e583398151915260001b61022360201b6100521760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102ec8461032e565b6000835111806102f95750815b1561030857610219848461049e565b505060408051600081526020810190915292915050565b6001600160a01b03163b151590565b60006103386105a4565b6040519091506001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2816001600160a01b0316306001600160a01b0316336001600160a01b03167ebe01838f727d9b6a4cc703cad7dd0426a7dd3a2ad8bbc1aae8e61a5f7fdd3684866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610414919081019061078f565b866001600160a01b031663cf891e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047a919081019061078f565b6040516104899392919061080b565b60405180910390a461049a82610226565b5050565b60606104b38361031f60201b6100551760201c565b61050e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610195565b600080846001600160a01b031684604051610529919061084b565b600060405180830381855af49150503d8060008114610564576040519150601f19603f3d011682016040523d82523d6000602084013e610569565b606091505b509150915061059b8282604051806060016040528060278152602001610a05602791396105d960201b6100641760201c565b95945050505050565b60006105ca6000805160206109e583398151915260001b61022360201b6100521760201c565b546001600160a01b0316919050565b606083156105e857508161021c565b8251156105f85782518084602001fd5b8160405162461bcd60e51b81526004016101959190610867565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561064357818101518382015260200161062b565b83811115610652576000848401525b50505050565b60006001600160401b038084111561067257610672610612565b604051601f8501601f19908116603f0116810190828211818310171561069a5761069a610612565b816040528093508581528686860111156106b357600080fd5b6106c1866020830187610628565b5050509392505050565b600080604083850312156106de57600080fd5b82516001600160a01b03811681146106f557600080fd5b60208401519092506001600160401b0381111561071157600080fd5b8301601f8101851361072257600080fd5b61073185825160208401610658565b9150509250929050565b60008282101561075b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561078857600080fd5b5051919050565b6000602082840312156107a157600080fd5b81516001600160401b038111156107b757600080fd5b8201601f810184136107c857600080fd5b6107d784825160208401610658565b949350505050565b600081518084526107f7816020860160208601610628565b601f01601f19169290920160200192915050565b6001600160a01b038416815260606020820181905260009061082f908301856107df565b828103604084015261084181856107df565b9695505050505050565b6000825161085d818460208701610628565b9190910192915050565b60208152600061021c60208301846107df565b61015c806108896000396000f3fe60806040523661001357610011610017565b005b6100115b61005061004b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6100ad565b565b90565b6001600160a01b03163b151590565b606083156100735750816100a6565b8251156100835782518084602001fd5b8160405162461bcd60e51b815260040161009d91906100d1565b60405180910390fd5b9392505050565b3660008037600080366000845af43d6000803e8080156100cc573d6000f35b3d6000fd5b600060208083528351808285015260005b818110156100fe578581018301518582016040015282016100e2565b81811115610110576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220805a2fa65c8b6d4e86738236ec87c1a83548970766b81f2468adff86ec24704a64736f6c634300080f0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "deployedBytecode": "0x60806040523661001357610011610017565b005b6100115b61005061004b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6100ad565b565b90565b6001600160a01b03163b151590565b606083156100735750816100a6565b8251156100835782518084602001fd5b8160405162461bcd60e51b815260040161009d91906100d1565b60405180910390fd5b9392505050565b3660008037600080366000845af43d6000803e8080156100cc573d6000f35b3d6000fd5b600060208083528351808285015260005b818110156100fe578581018301518582016040015282016100e2565b81811115610110576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220805a2fa65c8b6d4e86738236ec87c1a83548970766b81f2468adff86ec24704a64736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
      }
    },
    "stateVariables": {
      "_ADMIN_SLOT": {
        "details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
      },
      "_BEACON_SLOT": {
        "details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
      },
      "_IMPLEMENTATION_SLOT": {
        "details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_2927": {
          "entryPoint": null,
          "id": 2927,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_functionDelegateCall_3136": {
          "entryPoint": 1182,
          "id": 3136,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@_implementation_2941": {
          "entryPoint": 1444,
          "id": 2941,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setImplementation_2965": {
          "entryPoint": 550,
          "id": 2965,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_upgradeToAndCallUUPS_3101": {
          "entryPoint": 125,
          "id": 3101,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_upgradeToAndCall_3041": {
          "entryPoint": 737,
          "id": 3041,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_upgradeTo_3006": {
          "entryPoint": 814,
          "id": 3006,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@getAddressSlot_461": {
          "entryPoint": null,
          "id": 461,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getBooleanSlot_472": {
          "entryPoint": 547,
          "id": 472,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_191": {
          "entryPoint": 799,
          "id": 191,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@verifyCallResult_415": {
          "entryPoint": 1497,
          "id": 415,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_available_length_bytes_fromMemory": {
          "entryPoint": 1624,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
          "entryPoint": 1739,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": 1910,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_string_memory_ptr_fromMemory": {
          "entryPoint": 1935,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_string": {
          "entryPoint": 2015,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 2123,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 2059,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 2151,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 1851,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "copy_memory_to_memory": {
          "entryPoint": 1576,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "panic_error_0x01": {
          "entryPoint": 1888,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 1554,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:5550:15",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:15",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "46:95:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "63:1:15",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "70:3:15",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "75:10:15",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "66:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "66:20:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "56:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "56:31:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "56:31:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "103:1:15",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "106:4:15",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "96:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "96:15:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "96:15:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "127:1:15",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "130:4:15",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "120:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:15:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "120:15:15"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "14:127:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "199:205:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "209:10:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "218:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "213:1:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "278:63:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "303:3:15"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "308:1:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "299:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "299:11:15"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "322:3:15"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "318:11:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "312:5:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "312:18:15"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "292:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "292:39:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "292:39:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "239:1:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "242:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "236:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "236:13:15"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "250:19:15",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "252:15:15",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:1:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "264:2:15",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "257:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "257:10:15"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "252:1:15"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "232:3:15",
                        "statements": []
                      },
                      "src": "228:113:15"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "367:31:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "380:3:15"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "385:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "376:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "376:16:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "394:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "369:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "369:27:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "369:27:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "356:1:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "353:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "353:13:15"
                      },
                      "nodeType": "YulIf",
                      "src": "350:48:15"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "177:3:15",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "182:3:15",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "187:6:15",
                    "type": ""
                  }
                ],
                "src": "146:258:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "494:516:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "504:28:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "522:2:15",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "526:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "518:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "518:10:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "530:1:15",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "514:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "514:18:15"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "508:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "559:22:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "561:16:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "561:18:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "561:18:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "547:6:15"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "555:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "544:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "544:14:15"
                      },
                      "nodeType": "YulIf",
                      "src": "541:40:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "590:17:15",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:7:15"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "594:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "616:23:15",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "636:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "630:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "630:9:15"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "620:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "648:73:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "694:6:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "702:2:15",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "690:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "690:15:15"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "707:2:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "686:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "686:24:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "712:2:15",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "682:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "682:33:15"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "717:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "678:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "678:42:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "666:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "666:55:15"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "652:10:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "780:22:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "782:16:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "782:18:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "782:18:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "739:10:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "751:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "736:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "736:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "759:10:15"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "771:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "756:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "756:22:15"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "733:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "733:46:15"
                      },
                      "nodeType": "YulIf",
                      "src": "730:72:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "818:2:15",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "822:10:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "811:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "811:22:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "811:22:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "842:15:15",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "851:6:15"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "842:5:15"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "873:6:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "881:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "866:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:22:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "866:22:15"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "926:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "935:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "938:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "928:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "928:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "928:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "907:3:15"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "912:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "903:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "903:16:15"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "921:3:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "900:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "900:25:15"
                      },
                      "nodeType": "YulIf",
                      "src": "897:45:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "973:3:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "982:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "990:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "978:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "978:17:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "997:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "951:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:53:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "951:53:15"
                    }
                  ]
                },
                "name": "abi_decode_available_length_bytes_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "463:3:15",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "468:6:15",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "476:3:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "484:5:15",
                    "type": ""
                  }
                ],
                "src": "409:601:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1122:517:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1168:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1177:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1180:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1170:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1170:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1170:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1143:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1152:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1139:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1139:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1164:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1135:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1135:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1132:52:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1193:29:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1212:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1206:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1206:16:15"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1197:5:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1285:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1294:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1297:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1287:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1287:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1287:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1244:5:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1255:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1270:3:15",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1275:1:15",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "1266:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1266:11:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1279:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1262:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1262:19:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1251:31:15"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1241:2:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1241:42:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1234:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1234:50:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1231:70:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1310:15:15",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1320:5:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1310:6:15"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1334:39:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1358:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1369:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1354:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1354:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1348:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1348:25:15"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1338:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1416:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1425:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1428:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1418:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1418:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1418:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1388:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1404:2:15",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1408:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1400:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1400:10:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1412:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1396:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1396:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1385:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1385:30:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1382:50:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1441:32:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1455:9:15"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1466:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1451:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1451:22:15"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1445:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1521:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1530:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1533:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1523:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1523:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1523:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1500:2:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1504:4:15",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1496:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1496:13:15"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1511:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1492:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1492:27:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1485:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:35:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1482:55:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1546:87:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1605:2:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1609:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1601:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1601:11:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1620:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1614:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1614:9:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1625:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_available_length_bytes_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1556:44:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1556:77:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1546:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1080:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1091:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1103:6:15",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1111:6:15",
                    "type": ""
                  }
                ],
                "src": "1015:624:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1693:173:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1723:111:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1744:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1751:3:15",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1756:10:15",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "1747:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1747:20:15"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1737:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1737:31:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1737:31:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1788:1:15",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1791:4:15",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1781:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1781:15:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1781:15:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1816:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1819:4:15",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1809:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1809:15:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1809:15:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1709:1:15"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1712:1:15"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1706:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1706:8:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1703:131:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1843:17:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1855:1:15"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1858:1:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1851:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1851:9:15"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "1843:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "1675:1:15",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "1678:1:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "1684:4:15",
                    "type": ""
                  }
                ],
                "src": "1644:222:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1903:95:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1920:1:15",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1927:3:15",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1932:10:15",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1923:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1923:20:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1913:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1913:31:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1913:31:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1960:1:15",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1963:4:15",
                            "type": "",
                            "value": "0x01"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1953:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1953:15:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1953:15:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1984:1:15",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1987:4:15",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "1977:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1977:15:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1977:15:15"
                    }
                  ]
                },
                "name": "panic_error_0x01",
                "nodeType": "YulFunctionDefinition",
                "src": "1871:127:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2084:103:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2130:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2139:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2142:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2132:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2132:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2132:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2105:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2114:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2101:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2101:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2126:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2097:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2097:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "2094:52:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2155:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2171:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2165:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2165:16:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2155:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2050:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2061:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2073:6:15",
                    "type": ""
                  }
                ],
                "src": "2003:184:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2366:236:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2383:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2394:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2376:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2376:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2376:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2417:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2428:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2413:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2413:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2433:2:15",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2406:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2406:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2406:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2456:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2467:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2452:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2452:18:15"
                          },
                          {
                            "hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2472:34:15",
                            "type": "",
                            "value": "ERC1967Upgrade: new implementati"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2445:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2445:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2445:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2527:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2538:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2523:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2523:18:15"
                          },
                          {
                            "hexValue": "6f6e206973206e6f742055555053",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2543:16:15",
                            "type": "",
                            "value": "on is not UUPS"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2516:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2516:44:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2516:44:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2569:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2581:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2592:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2577:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2577:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2569:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2343:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2357:4:15",
                    "type": ""
                  }
                ],
                "src": "2192:410:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2781:231:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2798:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2809:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2791:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2791:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2791:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2832:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2843:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2828:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2828:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2848:2:15",
                            "type": "",
                            "value": "41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2821:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2821:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2821:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2871:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2882:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2867:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2867:18:15"
                          },
                          {
                            "hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2887:34:15",
                            "type": "",
                            "value": "ERC1967Upgrade: unsupported prox"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2860:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2860:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2942:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2953:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2938:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2938:18:15"
                          },
                          {
                            "hexValue": "6961626c6555554944",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2958:11:15",
                            "type": "",
                            "value": "iableUUID"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2931:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2931:39:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2931:39:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2979:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2991:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3002:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2987:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2987:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2979:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2758:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2772:4:15",
                    "type": ""
                  }
                ],
                "src": "2607:405:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3191:235:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3208:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3219:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3201:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3201:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3201:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3242:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3253:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3238:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3238:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3258:2:15",
                            "type": "",
                            "value": "45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3231:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3231:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3231:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3281:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3292:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3277:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3277:18:15"
                          },
                          {
                            "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3297:34:15",
                            "type": "",
                            "value": "ERC1967: new implementation is n"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3270:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3270:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3270:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3352:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3363:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3348:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3348:18:15"
                          },
                          {
                            "hexValue": "6f74206120636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3368:15:15",
                            "type": "",
                            "value": "ot a contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3341:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3341:43:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3341:43:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3393:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3405:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3416:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3401:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3401:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3393:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3168:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3182:4:15",
                    "type": ""
                  }
                ],
                "src": "3017:409:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3522:367:15",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3568:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3577:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3580:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3570:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3570:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3570:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3543:7:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3552:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3539:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3539:23:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3564:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3535:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3535:32:15"
                      },
                      "nodeType": "YulIf",
                      "src": "3532:52:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3593:30:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3613:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3607:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3607:16:15"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3597:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3666:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3675:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3678:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3668:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3668:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3668:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3638:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3654:2:15",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3658:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3650:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3650:10:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3662:1:15",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3646:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3646:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3635:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3635:30:15"
                      },
                      "nodeType": "YulIf",
                      "src": "3632:50:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3691:32:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3705:9:15"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3716:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3701:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3701:22:15"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3695:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3771:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3780:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3783:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3773:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3773:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3773:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3750:2:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3754:4:15",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3746:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3746:13:15"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3761:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3742:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3742:27:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3735:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:35:15"
                      },
                      "nodeType": "YulIf",
                      "src": "3732:55:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3796:87:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3855:2:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3859:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3851:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3851:11:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3870:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3864:5:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3864:9:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3875:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_available_length_bytes_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3806:44:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3806:77:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3796:6:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3488:9:15",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3499:7:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3511:6:15",
                    "type": ""
                  }
                ],
                "src": "3431:458:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3944:208:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3954:26:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3974:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3968:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3968:12:15"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "3958:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3996:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4001:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3989:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3989:19:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3989:19:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4043:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4050:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4039:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4039:16:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4061:3:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4066:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4057:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4057:14:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4073:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "4017:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4017:63:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4017:63:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4089:57:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4104:3:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4117:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4125:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4113:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4113:15:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4134:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4130:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4130:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4109:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4109:29:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4100:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4100:39:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4141:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4096:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4096:50:15"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4089:3:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_string",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "3921:5:15",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "3928:3:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "3936:3:15",
                    "type": ""
                  }
                ],
                "src": "3894:258:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4354:283:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4371:9:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4386:6:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4402:3:15",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4407:1:15",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4398:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4398:11:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4411:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4394:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4394:19:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4382:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4382:32:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4364:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4364:51:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4364:51:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4435:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4446:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4431:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4431:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4451:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4424:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4424:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4424:30:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4463:59:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4495:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4507:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4518:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4503:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4503:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "4477:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4477:45:15"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "4467:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4542:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4553:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4538:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4538:18:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "4562:6:15"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4570:9:15"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4558:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4558:22:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4531:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4531:50:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4531:50:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4590:41:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4616:6:15"
                          },
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "4624:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "4598:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4598:33:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4590:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4307:9:15",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4318:6:15",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4326:6:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4334:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4345:4:15",
                    "type": ""
                  }
                ],
                "src": "4157:480:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4816:228:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4833:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4844:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4826:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4826:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4826:21:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4867:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4878:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4863:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4863:18:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4883:2:15",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4856:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4856:30:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4856:30:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4906:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4917:2:15",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4902:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4902:18:15"
                          },
                          {
                            "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4922:34:15",
                            "type": "",
                            "value": "Address: delegate call to non-co"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4895:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4895:62:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4895:62:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4977:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4988:2:15",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4973:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4973:18:15"
                          },
                          {
                            "hexValue": "6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4993:8:15",
                            "type": "",
                            "value": "ntract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4966:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4966:36:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4966:36:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5011:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5023:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5034:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5019:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5019:19:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5011:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4793:9:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4807:4:15",
                    "type": ""
                  }
                ],
                "src": "4642:402:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5186:137:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5196:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5216:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5210:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5210:13:15"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "5200:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5258:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5266:4:15",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5254:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5254:17:15"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5273:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5278:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "5232:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5232:53:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5232:53:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5294:23:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5305:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5310:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5301:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5301:16:15"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5294:3:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5162:3:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5167:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5178:3:15",
                    "type": ""
                  }
                ],
                "src": "5049:274:15"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5449:99:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5466:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5477:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5459:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5459:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5459:21:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5489:53:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5515:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5527:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5538:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5523:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5523:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "5497:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5497:45:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5489:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5418:9:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5429:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5440:4:15",
                    "type": ""
                  }
                ],
                "src": "5328:220:15"
              }
            ]
          },
          "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_available_length_bytes_fromMemory(src, length, end) -> array\n    {\n        let _1 := sub(shl(64, 1), 1)\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, add(memPtr, 0x20), length)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes_fromMemory(add(_1, 32), mload(_1), dataEnd)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes_fromMemory(add(_1, 32), mload(_1), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n}",
          "id": 15,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA2C CODESIZE SUB DUP1 PUSH2 0xA2C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x4D PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH2 0x73B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9E5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x69 JUMPI PUSH2 0x69 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x75 DUP3 DUP3 PUSH1 0x0 PUSH2 0x7D JUMP JUMPDEST POP POP POP PUSH2 0x87A JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB5 PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x223 PUSH1 0x20 SHL PUSH2 0x52 OR PUSH1 0x20 SHR JUMP JUMPDEST SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDC JUMPI PUSH2 0xC7 DUP5 PUSH2 0x226 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x21C JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x136 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x133 SWAP2 DUP2 ADD SWAP1 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9E5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x20D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x195 JUMP JUMPDEST POP PUSH2 0x219 DUP5 DUP5 DUP5 PUSH2 0x2E1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x239 DUP2 PUSH2 0x31F PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x195 JUMP JUMPDEST DUP1 PUSH2 0x2C0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9E5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH2 0x223 PUSH1 0x20 SHL PUSH2 0x52 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EC DUP5 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0x2F9 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x308 JUMPI PUSH2 0x219 DUP5 DUP5 PUSH2 0x49E JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH31 0xBE01838F727D9B6A4CC703CAD7DD0426A7DD3A2AD8BBC1AAE8E61A5F7FDD36 DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF891E2B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x414 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x78F JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF891E2B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x452 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x47A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x49A DUP3 PUSH2 0x226 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4B3 DUP4 PUSH2 0x31F PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x195 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x569 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x59B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA05 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x5D9 PUSH1 0x20 SHL PUSH2 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9E5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH2 0x223 PUSH1 0x20 SHL PUSH2 0x52 OR PUSH1 0x20 SHR JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x5E8 JUMPI POP DUP2 PUSH2 0x21C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x5F8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x643 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x62B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 GT ISZERO PUSH2 0x672 JUMPI PUSH2 0x672 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0x612 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C1 DUP7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x628 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x731 DUP6 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x658 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x75B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 DUP5 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x658 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x7F7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x628 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x82F SWAP1 DUP4 ADD DUP6 PUSH2 0x7DF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x841 DUP2 DUP6 PUSH2 0x7DF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x85D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x628 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x15C DUP1 PUSH2 0x889 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x50 PUSH2 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x73 JUMPI POP DUP2 PUSH2 0xA6 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x83 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xCC JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xE2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 GAS 0x2F 0xA6 0x5C DUP12 PUSH14 0x4E86738236EC87C1A83548970766 0xB8 0x1F 0x24 PUSH9 0xADFF86EC24704A6473 PUSH16 0x6C634300080F0033360894A13BA1A321 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65640000000000000000000000 ",
      "sourceMap": "602:5536:13:-:0;;;2422:221;;;;;;;;;;;;;;;;;;:::i;:::-;2527:54;2580:1;2535:41;2527:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;2495:87:13;2488:95;;;;:::i;:::-;2593:43;2615:6;2623:5;2630;2593:21;:43::i;:::-;;2422:221;;602:5536;;4540:1014;4680:12;5008:42;759:66;5035:14;;5008:26;;;;;:42;;:::i;:::-;:48;;;5004:544;;;5072:37;5091:17;5072:18;:37::i;:::-;-1:-1:-1;5130:12:13;;;5140:1;5130:12;;;;;;;;5123:19;;5004:544;5195:17;-1:-1:-1;;;;;5177:50:13;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5177:52:13;;;;;;;;-1:-1:-1;;5177:52:13;;;;;;;;;;;;:::i;:::-;;;5173:291;;5393:56;;-1:-1:-1;;;5393:56:13;;2394:2:15;5393:56:13;;;2376:21:15;2433:2;2413:18;;;2406:30;2472:34;2452:18;;;2445:62;-1:-1:-1;;;2523:18:15;;;2516:44;2577:19;;5393:56:13;;;;;;;;5173:291;-1:-1:-1;;;;;;;;;;;5279:28:13;;5271:82;;;;-1:-1:-1;;;5271:82:13;;2809:2:15;5271:82:13;;;2791:21:15;2848:2;2828:18;;;2821:30;2887:34;2867:18;;;2860:62;-1:-1:-1;;;2938:18:15;;;2931:39;2987:19;;5271:82:13;2607:405:15;5271:82:13;5230:138;5484:53;5502:17;5521:4;5527:9;5484:17;:53::i;:::-;5477:60;;5004:544;4540:1014;;;;;:::o;1847:147:4:-;1974:4;1847:147::o;3065:259:13:-;3146:37;3165:17;3146:18;;;;;:37;;:::i;:::-;3138:95;;;;-1:-1:-1;;;3138:95:13;;3219:2:15;3138:95:13;;;3201:21:15;3258:2;3238:18;;;3231:30;3297:34;3277:18;;;3270:62;-1:-1:-1;;;3348:18:15;;;3341:43;3401:19;;3138:95:13;3017:409:15;3138:95:13;3300:17;3243:48;-1:-1:-1;;;;;;;;;;;3270:20:13;;3243:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;3243:74:13;-1:-1:-1;;;;;3243:74:13;;;;;;;;;;-1:-1:-1;3065:259:13:o;4022:346::-;4158:12;4182:29;4193:17;4182:10;:29::i;:::-;4239:1;4225:4;:11;:15;:28;;;;4244:9;4225:28;4221:112;;;4276:46;4298:17;4317:4;4276:21;:46::i;4221:112::-;-1:-1:-1;;4349:12:13;;;4359:1;4349:12;;;;;;;;;4342:19;-1:-1:-1;;4022:346:13:o;1110:320:2:-;-1:-1:-1;;;;;1400:19:2;;:23;;;1110:320::o;3430:458:13:-;3495:29;3527:17;:15;:17::i;:::-;3559:27;;3495:49;;-1:-1:-1;;;;;;3559:27:13;;;;;;;;3672:17;-1:-1:-1;;;;;3631:195:13;3665:4;-1:-1:-1;;;;;3631:195:13;3645:10;-1:-1:-1;;;;;3631:195:13;;3691:21;3742:17;-1:-1:-1;;;;;3735:40:13;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3735:42:13;;;;;;;;;;;;:::i;:::-;3786:21;-1:-1:-1;;;;;3779:44:13;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3779:46:13;;;;;;;;;;;;:::i;:::-;3631:195;;;;;;;;:::i;:::-;;;;;;;;3836:37;3855:17;3836:18;:37::i;:::-;3485:403;3430:458;:::o;5703:433::-;5786:12;5818:26;5837:6;5818:18;;;;;:26;;:::i;:::-;5810:77;;;;-1:-1:-1;;;5810:77:13;;4844:2:15;5810:77:13;;;4826:21:15;4883:2;4863:18;;;4856:30;4922:34;4902:18;;;4895:62;-1:-1:-1;;;4973:18:15;;;4966:36;5019:19;;5810:77:13;4642:402:15;5810:77:13;5958:12;5972:23;5999:6;-1:-1:-1;;;;;5999:19:13;6019:4;5999:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5957:67;;;;6041:88;6066:7;6075:10;6041:88;;;;;;;;;;;;;;;;;:24;;;;;:88;;:::i;:::-;6034:95;5703:433;-1:-1:-1;;;;;5703:433:13:o;2827:147::-;2886:7;2913:48;-1:-1:-1;;;;;;;;;;;2940:20:13;;2913:26;;;;;:48;;:::i;:::-;:54;-1:-1:-1;;;;;2913:54:13;;2827:147;-1:-1:-1;2827:147:13:o;6515:692:2:-;6661:12;6689:7;6685:516;;;-1:-1:-1;6719:10:2;6712:17;;6685:516;6830:17;;:21;6826:365;;7024:10;7018:17;7084:15;7071:10;7067:2;7063:19;7056:44;6826:365;7163:12;7156:20;;-1:-1:-1;;;7156:20:2;;;;;;;;:::i;14:127:15:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:258;218:1;228:113;242:6;239:1;236:13;228:113;;;318:11;;;312:18;299:11;;;292:39;264:2;257:10;228:113;;;359:6;356:1;353:13;350:48;;;394:1;385:6;380:3;376:16;369:27;350:48;;146:258;;;:::o;409:601::-;484:5;-1:-1:-1;;;;;544:14:15;;;541:40;;;561:18;;:::i;:::-;636:2;630:9;604:2;690:15;;-1:-1:-1;;686:24:15;;;712:2;682:33;678:42;666:55;;;736:18;;;756:22;;;733:46;730:72;;;782:18;;:::i;:::-;822:10;818:2;811:22;851:6;842:15;;881:6;873;866:22;921:3;912:6;907:3;903:16;900:25;897:45;;;938:1;935;928:12;897:45;951:53;997:6;990:4;982:6;978:17;973:3;951:53;:::i;:::-;;;;409:601;;;;;:::o;1015:624::-;1103:6;1111;1164:2;1152:9;1143:7;1139:23;1135:32;1132:52;;;1180:1;1177;1170:12;1132:52;1206:16;;-1:-1:-1;;;;;1251:31:15;;1241:42;;1231:70;;1297:1;1294;1287:12;1231:70;1369:2;1354:18;;1348:25;1320:5;;-1:-1:-1;;;;;;1385:30:15;;1382:50;;;1428:1;1425;1418:12;1382:50;1451:22;;1504:4;1496:13;;1492:27;-1:-1:-1;1482:55:15;;1533:1;1530;1523:12;1482:55;1556:77;1625:7;1620:2;1614:9;1609:2;1605;1601:11;1556:77;:::i;:::-;1546:87;;;1015:624;;;;;:::o;1644:222::-;1684:4;1712:1;1709;1706:8;1703:131;;;1756:10;1751:3;1747:20;1744:1;1737:31;1791:4;1788:1;1781:15;1819:4;1816:1;1809:15;1703:131;-1:-1:-1;1851:9:15;;1644:222::o;1871:127::-;1932:10;1927:3;1923:20;1920:1;1913:31;1963:4;1960:1;1953:15;1987:4;1984:1;1977:15;2003:184;2073:6;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;-1:-1:-1;2165:16:15;;2003:184;-1:-1:-1;2003:184:15:o;3431:458::-;3511:6;3564:2;3552:9;3543:7;3539:23;3535:32;3532:52;;;3580:1;3577;3570:12;3532:52;3607:16;;-1:-1:-1;;;;;3635:30:15;;3632:50;;;3678:1;3675;3668:12;3632:50;3701:22;;3754:4;3746:13;;3742:27;-1:-1:-1;3732:55:15;;3783:1;3780;3773:12;3732:55;3806:77;3875:7;3870:2;3864:9;3859:2;3855;3851:11;3806:77;:::i;:::-;3796:87;3431:458;-1:-1:-1;;;;3431:458:15:o;3894:258::-;3936:3;3974:5;3968:12;4001:6;3996:3;3989:19;4017:63;4073:6;4066:4;4061:3;4057:14;4050:4;4043:5;4039:16;4017:63;:::i;:::-;4134:2;4113:15;-1:-1:-1;;4109:29:15;4100:39;;;;4141:4;4096:50;;3894:258;-1:-1:-1;;3894:258:15:o;4157:480::-;-1:-1:-1;;;;;4382:32:15;;4364:51;;4451:2;4446;4431:18;;4424:30;;;-1:-1:-1;;4477:45:15;;4503:18;;4495:6;4477:45;:::i;:::-;4570:9;4562:6;4558:22;4553:2;4542:9;4538:18;4531:50;4598:33;4624:6;4616;4598:33;:::i;:::-;4590:41;4157:480;-1:-1:-1;;;;;;4157:480:15:o;5049:274::-;5178:3;5216:6;5210:13;5232:53;5278:6;5273:3;5266:4;5258:6;5254:17;5232:53;:::i;:::-;5301:16;;;;;5049:274;-1:-1:-1;;5049:274:15:o;5328:220::-;5477:2;5466:9;5459:21;5440:4;5497:45;5538:2;5527:9;5523:18;5515:6;5497:45;:::i;5328:220::-;602:5536:13;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_1861": {
          "entryPoint": null,
          "id": 1861,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_1869": {
          "entryPoint": null,
          "id": 1869,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_beforeFallback_1874": {
          "entryPoint": null,
          "id": 1874,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_delegate_1834": {
          "entryPoint": 173,
          "id": 1834,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_fallback_1853": {
          "entryPoint": 23,
          "id": 1853,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_implementation_2941": {
          "entryPoint": null,
          "id": 2941,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@getAddressSlot_461": {
          "entryPoint": null,
          "id": 461,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getBooleanSlot_472": {
          "entryPoint": 82,
          "id": 472,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_191": {
          "entryPoint": 85,
          "id": 191,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@verifyCallResult_415": {
          "entryPoint": 100,
          "id": 415,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 209,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:613:15",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:15",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "135:476:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "145:12:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "155:2:15",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "149:2:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "173:9:15"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "184:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "166:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "166:21:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "166:21:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "196:27:15",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "216:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "210:5:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:13:15"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "200:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "243:9:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "254:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "239:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "239:18:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "259:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "232:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "232:34:15"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "232:34:15"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "275:10:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "284:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "279:1:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "344:90:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "373:9:15"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "384:1:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "369:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "369:17:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "388:2:15",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "365:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "365:26:15"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "407:6:15"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "415:1:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "403:3:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "403:14:15"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "419:2:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "399:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "399:23:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "393:5:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "393:30:15"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "358:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "358:66:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "358:66:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "305:1:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "308:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "302:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:13:15"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "316:19:15",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "318:15:15",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "327:1:15"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:2:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "323:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "323:10:15"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "318:1:15"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "298:3:15",
                        "statements": []
                      },
                      "src": "294:140:15"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "468:66:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "497:9:15"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "508:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "493:22:15"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "517:2:15",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "489:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "489:31:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "522:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "482:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "482:42:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "482:42:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "449:1:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "452:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "446:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "446:13:15"
                      },
                      "nodeType": "YulIf",
                      "src": "443:91:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "543:62:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "559:9:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "578:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "586:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "574:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "574:15:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "595:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "591:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "591:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "570:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "570:29:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "555:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "555:45:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "602:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "551:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:54:15"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "543:4:15"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "104:9:15",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "115:6:15",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "126:4:15",
                    "type": ""
                  }
                ],
                "src": "14:597:15"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
          "id": 15,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x50 PUSH2 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x73 JUMPI POP DUP2 PUSH2 0xA6 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x83 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xCC JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xE2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 GAS 0x2F 0xA6 0x5C DUP12 PUSH14 0x4E86738236EC87C1A83548970766 0xB8 0x1F 0x24 PUSH9 0xADFF86EC24704A6473 PUSH16 0x6C634300080F00330000000000000000 ",
      "sourceMap": "602:5536:13:-:0;;;;;;2844:11:7;:9;:11::i;:::-;602:5536:13;;2621:11:7;2268:110;2343:28;2353:17;1100:66:13;2913:54;-1:-1:-1;;;;;2913:54:13;;2827:147;2353:17:7;2343:9;:28::i;:::-;2268:110::o;1847:147:4:-;1974:4;1847:147::o;1110:320:2:-;-1:-1:-1;;;;;1400:19:2;;:23;;;1110:320::o;6515:692::-;6661:12;6689:7;6685:516;;;-1:-1:-1;6719:10:2;6712:17;;6685:516;6830:17;;:21;6826:365;;7024:10;7018:17;7084:15;7071:10;7067:2;7063:19;7056:44;6826:365;7163:12;7156:20;;-1:-1:-1;;;7156:20:2;;;;;;;;:::i;:::-;;;;;;;;6826:365;6515:692;;;;;:::o;894:895:7:-;1232:14;1229:1;1226;1213:34;1446:1;1443;1427:14;1424:1;1408:14;1401:5;1388:60;1522:16;1519:1;1516;1501:38;1560:6;1627:66;;;;1742:16;1739:1;1732:27;1627:66;1662:16;1659:1;1652:27;14:597:15;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:15;574:15;-1:-1:-1;;570:29:15;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:15:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "69600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "": "infinite"
      },
      "internal": {
        "_functionDelegateCall(address,bytes memory)": "infinite",
        "_implementation()": "infinite",
        "_setImplementation(address)": "infinite",
        "_upgradeTo(address)": "infinite",
        "_upgradeToAndCall(address,bytes memory,bool)": "infinite",
        "_upgradeToAndCallUUPS(address,bytes memory,bool)": "infinite"
      }
    },
    "methodIdentifiers": {}
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newVersion\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldVersion\",\"type\":\"string\"}],\"name\":\"ProxyUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor.\"}},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4db5a8ffa5e592fc435dd14acf1dc9984ffb27eb0c327482980ddcb9649bf3b7\",\"license\":\"MIT\"},\"src/contracts/lib/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb9011bb4b791581d5fd06cca09d0857ec87b43016f8e710a36c0cbe1022f792\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract BaseProxy {\\n    \\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x54f7867c6f4d62957873c28ca81c2f5de2a02e720819fd90561e655ea2c8344a\",\"license\":\"MIT\"},\"src/contracts/proxy/IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6499fc370056b9391b97f313f250e5f19e6e69d2c306ec0e14c5dc9bea1c4032\",\"license\":\"MIT\"},\"src/contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\ninterface IProxy {\\n\\n    event Upgraded(address indexed implementation);\\n\\n    event ProxyUpgraded(address indexed sender, address indexed proxy, address indexed newImplementation, \\n                    address oldImplementation, string newVersion, string oldVersion);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event ProxyAdminChanged(address indexed sender, address indexed proxy, address previousAdmin, address newAdmin);\\n                    \\n\\n    event ActivityChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool value);\\n\\n    event UpgradablilityChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool value);\\n\\n    function upgradeTo(address newImplementation, bytes memory data, bool forceInitCall) external returns (bytes memory);\\n\\n    function setActivity(bool value) external returns (bool);\\n\\n    function setUpgradability(bool value) external returns (bool);\\n\\n    function setProxyAdmin(address newAdmin) external returns (bool);\\n\\n    function subjectName() external view returns (string calldata);\\n\\n    function subjectVersion() external view returns (string calldata);\\n\\n    function subjectRealm() external view returns (bytes32);\\n\\n    function subjectContext() external view returns (bytes32);\\n\\n    function implementation() external view returns (address);\\n\\n    function isActivated() external view returns (bool);\\n\\n    function isUpgradable() external view returns (bool);\\n\\n    function getProxyAdmin() external view returns (address);\\n}\",\"keccak256\":\"0x95b751f6a08c3ec412697f23aa030e2ad62de2e43f4fcc8ea17a6b56d32f52d4\",\"license\":\"MIT\"},\"src/contracts/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\nimport \\\"../lib/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint16 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint16 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint16 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint16).max);\\n    }\\n\\n    function _setInitializedVersion(uint16 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !Address.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xacd42dfb445d8fd404957ffee12679bb125d60aa95d4bf8fecd816923fde3036\",\"license\":\"MIT\"},\"src/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >= 0.8.15;\\n\\nimport \\\"./IERC1822.sol\\\";\\nimport \\\"./IProxy.sol\\\";\\nimport \\\"./BaseProxy.sol\\\";\\nimport \\\"../lib/Address.sol\\\";\\nimport \\\"../lib/StorageSlot.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\n\\ncontract Proxy is BaseProxy {\\n \\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n \\n\\n    event Upgraded(address indexed implementation);\\n\\n    event ProxyUpgraded(address indexed sender, address indexed proxy, address indexed newImplementation, \\n                    address oldImplementation, string newVersion, string oldVersion);\\n\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCallUUPS(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view override returns (address) {\\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) private {\\n        address currentImplementation = _implementation();\\n        emit Upgraded(newImplementation);       // TODO Does it remove?\\n        emit ProxyUpgraded(msg.sender, address(this), newImplementation, currentImplementation, \\n                    IProxy(newImplementation).subjectVersion(), IProxy(currentImplementation).subjectVersion());\\n        _setImplementation(newImplementation);        \\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) private returns (bytes memory) {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            return _functionDelegateCall(newImplementation, data);\\n        }\\n        return new bytes(0);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) private returns (bytes memory) {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n            return new bytes(0);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            return _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\\n        require(Address.isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return Address.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x6dd8959438606d895c6cb1f367d24486fd6f6db38cf9058d8f96e174dc2f5c82\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}