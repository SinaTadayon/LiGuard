{
  "contractName": "Proxy",
  "sourceName": "src/contracts/proxy/Proxy.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x60a0604081905230608052610acd3881900390819083398101604081905261002691610665565b61005160017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610733565b600080516020610aad8339815191521461006d5761006d610754565b61009860017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104610733565b600080516020610a8d833981519152146100b4576100b4610754565b336100d9600080516020610a8d83398151915260001b61012060201b6100521760201c565b80546001600160a01b03929092166001600160a01b03199092169190911790556003805460ff60a01b1916600160a01b17905561011882826000610123565b5050506107f4565b90565b606061015b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b61012060201b6100521760201c565b5460ff16156101825761016d846103a1565b5060408051600081526020810190915261039a565b836001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156101dc575060408051601f3d908101601f191682019092526101d99181019061076a565b60015b61022d5760405162461bcd60e51b815260206004820152601560248201527f496c6c6567616c205555505320436f6e7472616374000000000000000000000060448201526064015b60405180910390fd5b600080516020610aad833981519152811461028a5760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964205555505320436f6e747261637400000000000000000000006044820152606401610224565b506040516301ffc9a760e01b81526314751dbf60e01b60048201526001600160a01b038516906301ffc9a790602401602060405180830381865afa9250505080156102f2575060408051601f3d908101601f191682019092526102ef91810190610783565b60015b61033e5760405162461bcd60e51b815260206004820152601760248201527f496c6c6567616c204950726f787920436f6e74726163740000000000000000006044820152606401610224565b8061038b5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964204950726f787920436f6e74726163740000000000000000006044820152606401610224565b506103978484846103e7565b90505b9392505050565b806103c6600080516020610aad83398151915260001b61012060201b6100521760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606103f28461042f565b6000835111806103ff5750815b1561041857610397848461047d60201b6100551760201c565b505060408051600081526020810190915292915050565b610438816103a1565b6104406104ce565b6040516001600160a01b039190911690309033907f354bd4b6eb65d64e6c79c53fa4f983a5e6bec4824ce4627c71be0b2722f4917e90600090a450565b60606104c583836040518060400160405280601481526020017f44656c65676174652043616c6c204661696c656400000000000000000000000081525061050360201b60201c565b90505b92915050565b60006104f4600080516020610aad83398151915260001b61012060201b6100521760201c565b546001600160a01b0316919050565b6060610518846105e360201b6100951760201c565b6105645760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c20436f6e7472616374204164647265737300000000000000006044820152606401610224565b600080856001600160a01b03168560405161057f91906107a5565b600060405180830381855af49150503d80600081146105ba576040519150601f19603f3d011682016040523d82523d6000602084013e6105bf565b606091505b50915091506105d98282866105f260201b6100a41760201c565b9695505050505050565b6001600160a01b03163b151590565b6060831561060157508161039a565b8251156106115782518084602001fd5b8160405162461bcd60e51b815260040161022491906107c1565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561065c578181015183820152602001610644565b50506000910152565b6000806040838503121561067857600080fd5b82516001600160a01b038116811461068f57600080fd5b60208401519092506001600160401b03808211156106ac57600080fd5b818501915085601f8301126106c057600080fd5b8151818111156106d2576106d261062b565b604051601f8201601f19908116603f011681019083821181831017156106fa576106fa61062b565b8160405282815288602084870101111561071357600080fd5b610724836020830160208801610641565b80955050505050509250929050565b818103818111156104c857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60006020828403121561077c57600080fd5b5051919050565b60006020828403121561079557600080fd5b8151801515811461039a57600080fd5b600082516107b7818460208701610641565b9190910192915050565b60208152600082518060208401526107e0816040850160208701610641565b601f01601f19169190910160400192915050565b60805161028161080c600039600050506102816000f3fe60806040523661001357610011610017565b005b6100115b61005061004b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6100e6565b565b90565b606061008e83836040518060400160405280601481526020017311195b1959d85d194810d85b1b0811985a5b195960621b81525061010a565b9392505050565b6001600160a01b03163b151590565b606083156100b357508161008e565b8251156100c35782518084602001fd5b8160405162461bcd60e51b81526004016100dd91906101fc565b60405180910390fd5b3660008037600080366000845af43d6000803e808015610105573d6000f35b3d6000fd5b60606001600160a01b0384163b6101635760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c20436f6e74726163742041646472657373000000000000000060448201526064016100dd565b600080856001600160a01b03168560405161017e919061022f565b600060405180830381855af49150503d80600081146101b9576040519150601f19603f3d011682016040523d82523d6000602084013e6101be565b606091505b50915091506101ce8282866100a4565b9695505050505050565b60005b838110156101f35781810151838201526020016101db565b50506000910152565b602081526000825180602084015261021b8160408501602087016101d8565b601f01601f19169190910160400192915050565b600082516102418184602087016101d8565b919091019291505056fea26469706673582212202c6c2179db2f2cb1bb65abd07a4d3c351210c26b158b105642291ff28ec2d90d64736f6c63430008110033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
  "deployedBytecode": "0x60806040523661001357610011610017565b005b6100115b61005061004b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6100e6565b565b90565b606061008e83836040518060400160405280601481526020017311195b1959d85d194810d85b1b0811985a5b195960621b81525061010a565b9392505050565b6001600160a01b03163b151590565b606083156100b357508161008e565b8251156100c35782518084602001fd5b8160405162461bcd60e51b81526004016100dd91906101fc565b60405180910390fd5b3660008037600080366000845af43d6000803e808015610105573d6000f35b3d6000fd5b60606001600160a01b0384163b6101635760405162461bcd60e51b815260206004820152601860248201527f496c6c6567616c20436f6e74726163742041646472657373000000000000000060448201526064016100dd565b600080856001600160a01b03168560405161017e919061022f565b600060405180830381855af49150503d80600081146101b9576040519150601f19603f3d011682016040523d82523d6000602084013e6101be565b606091505b50915091506101ce8282866100a4565b9695505050505050565b60005b838110156101f35781810151838201526020016101db565b50506000910152565b602081526000825180602084015261021b8160408501602087016101d8565b601f01601f19169190910160400192915050565b600082516102418184602087016101d8565b919091019291505056fea26469706673582212202c6c2179db2f2cb1bb65abd07a4d3c351210c26b158b105642291ff28ec2d90d64736f6c63430008110033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_20057": {
          "entryPoint": null,
          "id": 20057,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_implementation_20071": {
          "entryPoint": 1230,
          "id": 20071,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setImplementation_20087": {
          "entryPoint": 929,
          "id": 20087,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_upgradeToAndCallUUPS_20231": {
          "entryPoint": 291,
          "id": 20231,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_upgradeToAndCall_20145": {
          "entryPoint": 999,
          "id": 20145,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@_upgradeTo_20109": {
          "entryPoint": 1071,
          "id": 20109,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@functionDelegateCall_2675": {
          "entryPoint": 1149,
          "id": 2675,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@functionDelegateCall_2712": {
          "entryPoint": 1283,
          "id": 2712,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@getAddressSlot_3485": {
          "entryPoint": 288,
          "id": 3485,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getBooleanSlot_3496": {
          "entryPoint": null,
          "id": 3496,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_2463": {
          "entryPoint": 1507,
          "id": 2463,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@verifyCallResult_2743": {
          "entryPoint": 1522,
          "id": 2743,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
          "entryPoint": 1637,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 1923,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": 1898,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 1957,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1985,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_1aaf981f30054a65d39418944b5359c2dc3baea9641d1d5e407dcf99bc044957__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_70ddeff3550863f5fe7a006931e638acd5da5445ef0ef2d52d6528c5ccbe4c29__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_999b8d24795d7f45e7f3006064c0e9d2e15f910e6d37309e8cf2bad0d7d6e8ef__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_f130e6b50da7ec9a0722a72a8a367cd43948ddc555763da2e03ecf4cbaf2c972__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 1843,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "copy_memory_to_memory_with_cleanup": {
          "entryPoint": 1601,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "panic_error_0x01": {
          "entryPoint": 1876,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 1579,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:4956:76",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:76",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "46:95:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "63:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "70:3:76",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "75:10:76",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "66:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "66:20:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "56:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "56:31:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "56:31:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "103:1:76",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "106:4:76",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "96:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "96:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "96:15:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "127:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "130:4:76",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "120:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "120:15:76"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "14:127:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "212:184:76",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "222:10:76",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "231:1:76",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "226:1:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "291:63:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "316:3:76"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "321:1:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "312:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "312:11:76"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "335:3:76"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "340:1:76"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "331:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "331:11:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "325:5:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "325:18:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "305:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "305:39:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "305:39:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "252:1:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "255:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "249:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "249:13:76"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "263:19:76",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "265:15:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "274:1:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "277:2:76",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "270:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "270:10:76"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "265:1:76"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "245:3:76",
                        "statements": []
                      },
                      "src": "241:113:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "374:3:76"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "379:6:76"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "370:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "370:16:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "388:1:76",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "363:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:27:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "363:27:76"
                    }
                  ]
                },
                "name": "copy_memory_to_memory_with_cleanup",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "190:3:76",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "195:3:76",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "200:6:76",
                    "type": ""
                  }
                ],
                "src": "146:250:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "508:956:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "554:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "563:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "566:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "556:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "556:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "556:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "529:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "538:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "525:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "525:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "550:2:76",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "521:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "521:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "518:52:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "579:29:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "598:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "592:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "592:16:76"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "583:5:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "671:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "680:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "683:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "673:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "673:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "673:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "630:5:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "641:5:76"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "656:3:76",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "661:1:76",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "652:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "652:11:76"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "665:1:76",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "648:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "648:19:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "637:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "637:31:76"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "627:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "627:42:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "620:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "620:50:76"
                      },
                      "nodeType": "YulIf",
                      "src": "617:70:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "696:15:76",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "706:5:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "696:6:76"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "720:39:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "744:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "755:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "740:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "740:18:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "734:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:25:76"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "724:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "768:28:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "786:2:76",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "790:1:76",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "782:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "782:10:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "794:1:76",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "778:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "778:18:76"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "772:2:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "823:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "832:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "835:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "825:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "825:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "825:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:76"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "819:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "808:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "808:14:76"
                      },
                      "nodeType": "YulIf",
                      "src": "805:34:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "848:32:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "862:9:76"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "873:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "858:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "858:22:76"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "852:2:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "928:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "937:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "940:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "930:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "930:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "930:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "907:2:76"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "911:4:76",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "903:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "903:13:76"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "918:7:76"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "899:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "899:27:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "892:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "892:35:76"
                      },
                      "nodeType": "YulIf",
                      "src": "889:55:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "953:19:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "969:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "963:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "963:9:76"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "957:2:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "995:22:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "997:16:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "997:18:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "997:18:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "987:2:76"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "991:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "984:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:10:76"
                      },
                      "nodeType": "YulIf",
                      "src": "981:36:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1026:17:76",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1040:2:76",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1036:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:7:76"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "1030:2:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1052:23:76",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1072:2:76",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1066:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:9:76"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "1056:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1084:71:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1106:6:76"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1130:2:76"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1134:4:76",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1126:3:76"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1126:13:76"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1141:2:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1122:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1122:22:76"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1146:2:76",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1118:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1118:31:76"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1151:2:76"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1114:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1114:40:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1102:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1102:53:76"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "1088:10:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1214:22:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1216:16:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1216:18:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1216:18:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1173:10:76"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1185:2:76"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1170:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1170:18:76"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1193:10:76"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1205:6:76"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1190:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1190:22:76"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "1167:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:46:76"
                      },
                      "nodeType": "YulIf",
                      "src": "1164:72:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1252:2:76",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1256:10:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1245:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:22:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1245:22:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1283:6:76"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1291:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1276:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:18:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1276:18:76"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1340:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1349:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1352:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1342:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1342:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1342:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1317:2:76"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1321:2:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1313:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1313:11:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1326:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1309:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1309:20:76"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1331:7:76"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1306:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1306:33:76"
                      },
                      "nodeType": "YulIf",
                      "src": "1303:53:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1404:2:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1408:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1400:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1400:11:76"
                          },
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1417:6:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1425:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1413:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1413:15:76"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1430:2:76"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory_with_cleanup",
                          "nodeType": "YulIdentifier",
                          "src": "1365:34:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:68:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1365:68:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1442:16:76",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1452:6:76"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1442:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "466:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "477:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "489:6:76",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "497:6:76",
                    "type": ""
                  }
                ],
                "src": "401:1063:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1518:176:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1528:17:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1540:1:76"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1543:1:76"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:9:76"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "1528:4:76"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1577:111:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1598:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1605:3:76",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1610:10:76",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "1601:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1601:20:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1591:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1591:31:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1591:31:76"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1642:1:76",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1645:4:76",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1635:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1635:15:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1635:15:76"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1670:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1673:4:76",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1663:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1663:15:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1663:15:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "diff",
                            "nodeType": "YulIdentifier",
                            "src": "1560:4:76"
                          },
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1566:1:76"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1557:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1557:11:76"
                      },
                      "nodeType": "YulIf",
                      "src": "1554:134:76"
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "1500:1:76",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "1503:1:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "1509:4:76",
                    "type": ""
                  }
                ],
                "src": "1469:225:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1731:95:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1748:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1755:3:76",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1760:10:76",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1751:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1751:20:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1741:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1741:31:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1741:31:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:1:76",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1791:4:76",
                            "type": "",
                            "value": "0x01"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1781:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1781:15:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1812:1:76",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1815:4:76",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "1805:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1805:15:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1805:15:76"
                    }
                  ]
                },
                "name": "panic_error_0x01",
                "nodeType": "YulFunctionDefinition",
                "src": "1699:127:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1912:103:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1958:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1967:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1970:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1960:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1960:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1960:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1933:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1942:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1929:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1929:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1954:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1925:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1925:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "1922:52:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1983:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1999:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1993:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:16:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1983:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1878:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1889:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1901:6:76",
                    "type": ""
                  }
                ],
                "src": "1831:184:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2194:171:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2211:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2222:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2204:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2204:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2204:21:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2245:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2256:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2241:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2241:18:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2261:2:76",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2234:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:30:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2234:30:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2284:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2295:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:18:76"
                          },
                          {
                            "hexValue": "496c6c6567616c205555505320436f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2300:23:76",
                            "type": "",
                            "value": "Illegal UUPS Contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2273:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2273:51:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2273:51:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2333:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2345:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2356:2:76",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2341:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2341:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2333:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_f130e6b50da7ec9a0722a72a8a367cd43948ddc555763da2e03ecf4cbaf2c972__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2171:9:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2185:4:76",
                    "type": ""
                  }
                ],
                "src": "2020:345:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2544:171:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2561:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2572:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2554:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2554:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2554:21:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2595:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2606:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2591:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2591:18:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2611:2:76",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2584:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:30:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2584:30:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2634:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2645:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2630:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2630:18:76"
                          },
                          {
                            "hexValue": "496e76616c6964205555505320436f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2650:23:76",
                            "type": "",
                            "value": "Invalid UUPS Contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2623:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:51:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2623:51:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2683:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2695:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2706:2:76",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2691:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2691:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2683:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_1aaf981f30054a65d39418944b5359c2dc3baea9641d1d5e407dcf99bc044957__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2521:9:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2535:4:76",
                    "type": ""
                  }
                ],
                "src": "2370:345:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2819:103:76",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2829:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2841:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2852:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2837:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2837:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2829:4:76"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2871:9:76"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2886:6:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2898:3:76",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2903:10:76",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2894:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2894:20:76"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2882:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2882:33:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2864:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2864:52:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2864:52:76"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2788:9:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2799:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2810:4:76",
                    "type": ""
                  }
                ],
                "src": "2720:202:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3005:199:76",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3051:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3060:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3063:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3053:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3053:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3053:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3026:7:76"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3035:9:76"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3022:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3022:23:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3047:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3018:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3018:32:76"
                      },
                      "nodeType": "YulIf",
                      "src": "3015:52:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3076:29:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3095:9:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3089:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3089:16:76"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3080:5:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3158:16:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3167:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3170:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3160:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3160:12:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3160:12:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3127:5:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3148:5:76"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3141:6:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3141:13:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3134:6:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3134:21:76"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3124:2:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3124:32:76"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3117:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3117:40:76"
                      },
                      "nodeType": "YulIf",
                      "src": "3114:60:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3183:15:76",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3193:5:76"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3183:6:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2971:9:76",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2982:7:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2994:6:76",
                    "type": ""
                  }
                ],
                "src": "2927:277:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3383:173:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3400:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3411:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3393:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3393:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3393:21:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3434:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3445:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3430:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3430:18:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3450:2:76",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3423:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3423:30:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3423:30:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3473:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3484:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3469:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3469:18:76"
                          },
                          {
                            "hexValue": "496c6c6567616c204950726f787920436f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3489:25:76",
                            "type": "",
                            "value": "Illegal IProxy Contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3462:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3462:53:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3462:53:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3524:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3536:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3547:2:76",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3532:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3532:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3524:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_999b8d24795d7f45e7f3006064c0e9d2e15f910e6d37309e8cf2bad0d7d6e8ef__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3360:9:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3374:4:76",
                    "type": ""
                  }
                ],
                "src": "3209:347:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3735:173:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3752:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3763:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3745:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3745:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3745:21:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3786:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3797:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3782:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3782:18:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3802:2:76",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3775:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3775:30:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3775:30:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3825:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3836:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3821:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3821:18:76"
                          },
                          {
                            "hexValue": "496e76616c6964204950726f787920436f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3841:25:76",
                            "type": "",
                            "value": "Invalid IProxy Contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3814:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3814:53:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3814:53:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3876:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3888:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3899:2:76",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3884:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3884:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3876:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_70ddeff3550863f5fe7a006931e638acd5da5445ef0ef2d52d6528c5ccbe4c29__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3712:9:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3726:4:76",
                    "type": ""
                  }
                ],
                "src": "3561:347:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4087:174:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4104:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4115:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4097:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4097:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4097:21:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4138:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4149:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4134:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4134:18:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4154:2:76",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4127:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4127:30:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4127:30:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4177:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4188:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4173:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4173:18:76"
                          },
                          {
                            "hexValue": "496c6c6567616c20436f6e74726163742041646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4193:26:76",
                            "type": "",
                            "value": "Illegal Contract Address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4166:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4166:54:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4166:54:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4229:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4241:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4252:2:76",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4237:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4237:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4229:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4064:9:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4078:4:76",
                    "type": ""
                  }
                ],
                "src": "3913:348:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4403:150:76",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4413:27:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4433:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4427:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4427:13:76"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "4417:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4488:6:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4496:4:76",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4484:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4484:17:76"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4503:3:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4508:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory_with_cleanup",
                          "nodeType": "YulIdentifier",
                          "src": "4449:34:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4449:66:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4449:66:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4524:23:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4535:3:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4540:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4531:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4531:16:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4524:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4379:3:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4384:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4395:3:76",
                    "type": ""
                  }
                ],
                "src": "4266:287:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4679:275:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4696:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4707:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4689:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4689:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4689:21:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4719:27:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4739:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4733:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4733:13:76"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "4723:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4766:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4777:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4762:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4762:18:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4782:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4755:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4755:34:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4755:34:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4837:6:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4845:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4833:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4833:15:76"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4854:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4865:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4850:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4850:18:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4870:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory_with_cleanup",
                          "nodeType": "YulIdentifier",
                          "src": "4798:34:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4798:79:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4798:79:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4886:62:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4902:9:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4921:6:76"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4929:2:76",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4917:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4917:15:76"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4938:2:76",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4934:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4934:7:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4913:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4913:29:76"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4898:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4898:45:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4945:2:76",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4894:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4894:54:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4886:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4648:9:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4659:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4670:4:76",
                    "type": ""
                  }
                ],
                "src": "4558:396:76"
              }
            ]
          },
          "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_f130e6b50da7ec9a0722a72a8a367cd43948ddc555763da2e03ecf4cbaf2c972__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Illegal UUPS Contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1aaf981f30054a65d39418944b5359c2dc3baea9641d1d5e407dcf99bc044957__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid UUPS Contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_999b8d24795d7f45e7f3006064c0e9d2e15f910e6d37309e8cf2bad0d7d6e8ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Illegal IProxy Contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_70ddeff3550863f5fe7a006931e638acd5da5445ef0ef2d52d6528c5ccbe4c29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid IProxy Contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Illegal Contract Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
          "id": 76,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xA0 PUSH1 0x40 DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x80 MSTORE PUSH2 0xACD CODESIZE DUP2 SWAP1 SUB SWAP1 DUP2 SWAP1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x26 SWAP2 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x51 PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH2 0x733 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x6D JUMPI PUSH2 0x6D PUSH2 0x754 JUMP JUMPDEST PUSH2 0x98 PUSH1 0x1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6104 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0xB4 JUMPI PUSH2 0xB4 PUSH2 0x754 JUMP JUMPDEST CALLER PUSH2 0xD9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH2 0x120 PUSH1 0x20 SHL PUSH2 0x52 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x118 DUP3 DUP3 PUSH1 0x0 PUSH2 0x123 JUMP JUMPDEST POP POP POP PUSH2 0x7F4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15B PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x120 PUSH1 0x20 SHL PUSH2 0x52 OR PUSH1 0x20 SHR JUMP JUMPDEST SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x182 JUMPI PUSH2 0x16D DUP5 PUSH2 0x3A1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x39A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1D9 SWAP2 DUP2 ADD SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C205555505320436F6E74726163740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x28A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205555505320436F6E74726163740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x224 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x14751DBF PUSH1 0xE0 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2F2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2EF SWAP2 DUP2 ADD SWAP1 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C204950726F787920436F6E7472616374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x224 JUMP JUMPDEST DUP1 PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204950726F787920436F6E7472616374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x224 JUMP JUMPDEST POP PUSH2 0x397 DUP5 DUP5 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x3C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH2 0x120 PUSH1 0x20 SHL PUSH2 0x52 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F2 DUP5 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0x3FF JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x418 JUMPI PUSH2 0x397 DUP5 DUP5 PUSH2 0x47D PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x438 DUP2 PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH32 0x354BD4B6EB65D64E6C79C53FA4F983A5E6BEC4824CE4627C71BE0B2722F4917E SWAP1 PUSH1 0x0 SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4C5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44656C65676174652043616C6C204661696C6564000000000000000000000000 DUP2 MSTORE POP PUSH2 0x503 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xAAD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH2 0x120 PUSH1 0x20 SHL PUSH2 0x52 OR PUSH1 0x20 SHR JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x518 DUP5 PUSH2 0x5E3 PUSH1 0x20 SHL PUSH2 0x95 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C20436F6E747261637420416464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x224 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5D9 DUP3 DUP3 DUP7 PUSH2 0x5F2 PUSH1 0x20 SHL PUSH2 0xA4 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x601 JUMPI POP DUP2 PUSH2 0x39A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x611 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x644 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D2 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x6FA JUMPI PUSH2 0x6FA PUSH2 0x62B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x724 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x641 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x7B7 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x641 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7E0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x641 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x281 PUSH2 0x80C PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH2 0x281 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x50 PUSH2 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x11195B1959D85D194810D85B1B0811985A5B1959 PUSH1 0x62 SHL DUP2 MSTORE POP PUSH2 0x10A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xB3 JUMPI POP DUP2 PUSH2 0x8E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xC3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x105 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x163 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C20436F6E747261637420416464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CE DUP3 DUP3 DUP7 PUSH2 0xA4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x21B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x241 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1D8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH13 0x2179DB2F2CB1BB65ABD07A4D3C CALLDATALOAD SLT LT 0xC2 PUSH12 0x158B105642291FF28EC2D90D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER 0xB5 BALANCE 0x27 PUSH9 0x4A568B3173AE13B9F8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC0000000000000000000000 ",
      "sourceMap": "660:3288:46:-:0;;;;;2438:4:41;2394:49;;1047:379:46;;;;;;;;660:3288;1047:379;;;;;;;;;;:::i;:::-;1146:54;1199:1;1154:41;1146:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;1114:87:46;1107:95;;;;:::i;:::-;1238:45;1282:1;1246:32;1238:45;:::i;:::-;-1:-1:-1;;;;;;;;;;;1215:69:46;1208:77;;;;:::i;:::-;1340:10;1291:40;-1:-1:-1;;;;;;;;;;;1319:11:46;;1291:27;;;;;:40;;:::i;:::-;:59;;-1:-1:-1;;;;;1291:59:46;;;;-1:-1:-1;;;;;;1291:59:46;;;;;;;;;1356:11;:18;;-1:-1:-1;;;;1356:18:46;-1:-1:-1;;;1356:18:46;;;1380:41;1402:5;1409:4;1291:46;1380:21;:41::i;:::-;;1047:379;;660:3288;;1480:131:14;1597:4;1480:131::o;2833:1113:46:-;2959:12;3271:43;1212:66:41;3299:14:46;;3271:27;;;;;:43;;:::i;:::-;:49;;;3267:675;;;3330:37;3349:17;3330:18;:37::i;:::-;-1:-1:-1;3382:12:46;;;3392:1;3382:12;;;;;;;;3375:19;;3267:675;3437:17;-1:-1:-1;;;;;3419:50:46;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3419:52:46;;;;;;;;-1:-1:-1;;3419:52:46;;;;;;;;;;;;:::i;:::-;;;3415:218;;3593:31;;-1:-1:-1;;;3593:31:46;;2222:2:76;3593:31:46;;;2204:21:76;2261:2;2241:18;;;2234:30;2300:23;2280:18;;;2273:51;2341:18;;3593:31:46;;;;;;;;3415:218;-1:-1:-1;;;;;;;;;;;3513:28:46;;3505:62;;;;-1:-1:-1;;;3505:62:46;;2572:2:76;3505:62:46;;;2554:21:76;2611:2;2591:18;;;2584:30;2650:23;2630:18;;;2623:51;2691:18;;3505:62:46;2370:345:76;3505:62:46;-1:-1:-1;3645:70:46;;-1:-1:-1;;;3645:70:46;;-1:-1:-1;;;3645:70:46;;;2864:52:76;-1:-1:-1;;;;;3645:44:46;;;;;2837:18:76;;3645:70:46;;;;;;;;;;;;;;;;;;-1:-1:-1;3645:70:46;;;;;;;;-1:-1:-1;;3645:70:46;;;;;;;;;;;;:::i;:::-;;;3641:227;;3826:33;;-1:-1:-1;;;3826:33:46;;3411:2:76;3826:33:46;;;3393:21:76;3450:2;3430:18;;;3423:30;3489:25;3469:18;;;3462:53;3532:18;;3826:33:46;3209:347:76;3641:227:46;3761:11;3753:47;;;;-1:-1:-1;;;3753:47:46;;3763:2:76;3753:47:46;;;3745:21:76;3802:2;3782:18;;;3775:30;3841:25;3821:18;;;3814:53;3884:18;;3753:47:46;3561:347:76;3753:47:46;3716:93;3882:53;3900:17;3919:4;3925:9;3882:17;:53::i;:::-;3875:60;;3267:675;2833:1113;;;;;:::o;1824:149::-;1951:17;1893:49;-1:-1:-1;;;;;;;;;;;1921:20:46;;1893:27;;;;;:49;;:::i;:::-;:75;;-1:-1:-1;;;;;;1893:75:46;-1:-1:-1;;;;;1893:75:46;;;;;;;;;;-1:-1:-1;1824:149:46:o;2357:316::-;2479:12;2499:29;2510:17;2499:10;:29::i;:::-;2552:1;2538:4;:11;:15;:28;;;;2557:9;2538:28;2534:110;;;2583:54;2613:17;2632:4;2583:29;;;;;:54;;:::i;2534:110::-;-1:-1:-1;;2656:12:46;;;2666:1;2656:12;;;;;;;;;2649:19;-1:-1:-1;;2357:316:46:o;2067:168::-;2128:37;2147:17;2128:18;:37::i;:::-;2212:17;:15;:17::i;:::-;2176:54;;-1:-1:-1;;;;;2176:54:46;;;;;2205:4;;2185:10;;2176:54;;;;;2067:168;:::o;5848:173:7:-;5931:12;5958:58;5979:6;5987:4;5958:58;;;;;;;;;;;;;;;;;:20;;;:58;;:::i;:::-;5951:65;;5848:173;;;;;:::o;1600:141:46:-;1659:7;1681:49;-1:-1:-1;;;;;;;;;;;1709:20:46;;1681:27;;;;;:49;;:::i;:::-;:55;-1:-1:-1;;;;;1681:55:46;;1600:141;-1:-1:-1;1600:141:46:o;6159:408:7:-;6281:12;6309:27;6329:6;6309:19;;;;;:27;;:::i;:::-;6301:64;;;;-1:-1:-1;;;6301:64:7;;4115:2:76;6301:64:7;;;4097:21:76;4154:2;4134:18;;;4127:30;4193:26;4173:18;;;4166:54;4237:18;;6301:64:7;3913:348:76;6301:64:7;6428:12;6442:23;6469:6;-1:-1:-1;;;;;6469:19:7;6489:4;6469:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6427:67;;;;6507:55;6533:7;6542:10;6554:7;6507:25;;;;;:55;;:::i;:::-;6500:62;6159:408;-1:-1:-1;;;;;;6159:408:7:o;1121:302::-;-1:-1:-1;;;;;1395:19:7;;:23;;;1121:302::o;6739:624::-;6871:12;6895:7;6891:468;;;-1:-1:-1;6919:10:7;6912:17;;6891:468;7014:17;;:21;7010:343;;7224:10;7218:17;7274:15;7261:10;7257:2;7253:19;7246:44;7010:343;7331:12;7324:20;;-1:-1:-1;;;7324:20:7;;;;;;;;:::i;14:127:76:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:76;370:16;;363:27;146:250::o;401:1063::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:76;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;808:14:76;;;805:34;;;835:1;832;825:12;805:34;873:6;862:9;858:22;848:32;;918:7;911:4;907:2;903:13;899:27;889:55;;940:1;937;930:12;889:55;969:2;963:9;991:2;987;984:10;981:36;;;997:18;;:::i;:::-;1072:2;1066:9;1040:2;1126:13;;-1:-1:-1;;1122:22:76;;;1146:2;1118:31;1114:40;1102:53;;;1170:18;;;1190:22;;;1167:46;1164:72;;;1216:18;;:::i;:::-;1256:10;1252:2;1245:22;1291:2;1283:6;1276:18;1331:7;1326:2;1321;1317;1313:11;1309:20;1306:33;1303:53;;;1352:1;1349;1342:12;1303:53;1365:68;1430:2;1425;1417:6;1413:15;1408:2;1404;1400:11;1365:68;:::i;:::-;1452:6;1442:16;;;;;;;401:1063;;;;;:::o;1469:225::-;1536:9;;;1557:11;;;1554:134;;;1610:10;1605:3;1601:20;1598:1;1591:31;1645:4;1642:1;1635:15;1673:4;1670:1;1663:15;1699:127;1760:10;1755:3;1751:20;1748:1;1741:31;1791:4;1788:1;1781:15;1815:4;1812:1;1805:15;1831:184;1901:6;1954:2;1942:9;1933:7;1929:23;1925:32;1922:52;;;1970:1;1967;1960:12;1922:52;-1:-1:-1;1993:16:76;;1831:184;-1:-1:-1;1831:184:76:o;2927:277::-;2994:6;3047:2;3035:9;3026:7;3022:23;3018:32;3015:52;;;3063:1;3060;3053:12;3015:52;3095:9;3089:16;3148:5;3141:13;3134:21;3127:5;3124:32;3114:60;;3170:1;3167;3160:12;4266:287;4395:3;4433:6;4427:13;4449:66;4508:6;4503:3;4496:4;4488:6;4484:17;4449:66;:::i;:::-;4531:16;;;;;4266:287;-1:-1:-1;;4266:287:76:o;4558:396::-;4707:2;4696:9;4689:21;4670:4;4739:6;4733:13;4782:6;4777:2;4766:9;4762:18;4755:34;4798:79;4870:6;4865:2;4854:9;4850:18;4845:2;4837:6;4833:15;4798:79;:::i;:::-;4938:2;4917:15;-1:-1:-1;;4913:29:76;4898:45;;;;4945:2;4894:54;;4558:396;-1:-1:-1;;4558:396:76:o;:::-;660:3288:46;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_18594": {
          "entryPoint": null,
          "id": 18594,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_18602": {
          "entryPoint": null,
          "id": 18602,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_beforeFallback_18607": {
          "entryPoint": null,
          "id": 18607,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_delegate_18567": {
          "entryPoint": 230,
          "id": 18567,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_fallback_18586": {
          "entryPoint": 23,
          "id": 18586,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_implementation_20071": {
          "entryPoint": null,
          "id": 20071,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@functionDelegateCall_2675": {
          "entryPoint": 85,
          "id": 2675,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@functionDelegateCall_2712": {
          "entryPoint": 266,
          "id": 2712,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@getAddressSlot_3485": {
          "entryPoint": 82,
          "id": 3485,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getBooleanSlot_3496": {
          "entryPoint": null,
          "id": 3496,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isContract_2463": {
          "entryPoint": 149,
          "id": 2463,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@verifyCallResult_2743": {
          "entryPoint": 164,
          "id": 2743,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
          "entryPoint": 559,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 508,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "copy_memory_to_memory_with_cleanup": {
          "entryPoint": 472,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1312:76",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:76",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "80:184:76",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "90:10:76",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "99:1:76",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "94:1:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "159:63:76",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "184:3:76"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "189:1:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "180:11:76"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "203:3:76"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "208:1:76"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "199:3:76"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "199:11:76"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "193:5:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "193:18:76"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "173:6:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "173:39:76"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "173:39:76"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "123:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "117:2:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "117:13:76"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "131:19:76",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "133:15:76",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:1:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "145:2:76",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "138:3:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "138:10:76"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "133:1:76"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "113:3:76",
                        "statements": []
                      },
                      "src": "109:113:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "242:3:76"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "247:6:76"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:16:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "256:1:76",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "231:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:27:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "231:27:76"
                    }
                  ]
                },
                "name": "copy_memory_to_memory_with_cleanup",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "58:3:76",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "63:3:76",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "68:6:76",
                    "type": ""
                  }
                ],
                "src": "14:250:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "390:275:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "400:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "400:21:76"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "430:27:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "450:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "444:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "444:13:76"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "434:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "477:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "488:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "473:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "473:18:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "493:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "466:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "466:34:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "466:34:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "548:6:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "556:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "544:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "544:15:76"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "565:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "576:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "561:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "561:18:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "581:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory_with_cleanup",
                          "nodeType": "YulIdentifier",
                          "src": "509:34:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "509:79:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "509:79:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "597:62:76",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "613:9:76"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "632:6:76"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "640:2:76",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "628:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "628:15:76"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "649:2:76",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "645:3:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "645:7:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:3:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:29:76"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "609:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "609:45:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "656:2:76",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "605:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "605:54:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "597:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "359:9:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "370:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "381:4:76",
                    "type": ""
                  }
                ],
                "src": "269:396:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "844:174:76",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "861:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "872:2:76",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "854:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "854:21:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "854:21:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "895:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "906:2:76",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "891:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "891:18:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "911:2:76",
                            "type": "",
                            "value": "24"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "884:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:30:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "884:30:76"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "934:9:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "945:2:76",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "930:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "930:18:76"
                          },
                          {
                            "hexValue": "496c6c6567616c20436f6e74726163742041646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "950:26:76",
                            "type": "",
                            "value": "Illegal Contract Address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "923:6:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:54:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "923:54:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "986:26:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "998:9:76"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1009:2:76",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "994:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "994:18:76"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "986:4:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "821:9:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "835:4:76",
                    "type": ""
                  }
                ],
                "src": "670:348:76"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1160:150:76",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1170:27:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1190:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1184:5:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1184:13:76"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1174:6:76",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1245:6:76"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1253:4:76",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1241:3:76"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1241:17:76"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1260:3:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1265:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory_with_cleanup",
                          "nodeType": "YulIdentifier",
                          "src": "1206:34:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1206:66:76"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1206:66:76"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1281:23:76",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1292:3:76"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1297:6:76"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1288:3:76"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:16:76"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "1281:3:76"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "1136:3:76",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1141:6:76",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "1152:3:76",
                    "type": ""
                  }
                ],
                "src": "1023:287:76"
              }
            ]
          },
          "contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_8122b027808cd0877c813c37ddfc9ed2c232c21136d0c0f9b2ece5f62cd10512__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Illegal Contract Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
          "id": 76,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x50 PUSH2 0x4B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x11195B1959D85D194810D85B1B0811985A5B1959 PUSH1 0x62 SHL DUP2 MSTORE POP PUSH2 0x10A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xB3 JUMPI POP DUP2 PUSH2 0x8E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xC3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x105 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x163 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496C6C6567616C20436F6E747261637420416464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CE DUP3 DUP3 DUP7 PUSH2 0xA4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x21B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x241 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1D8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH13 0x2179DB2F2CB1BB65ABD07A4D3C CALLDATALOAD SLT LT 0xC2 PUSH12 0x158B105642291FF28EC2D90D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
      "sourceMap": "660:3288:46:-:0;;;;;;2645:11:39;:9;:11::i;:::-;660:3288:46;;2438:11:39;2109:100;2176:28;2186:17;1541:66:41;1681:55:46;-1:-1:-1;;;;;1681:55:46;;1600:141;2186:17:39;2176:9;:28::i;:::-;2109:100::o;1480:131:14:-;1597:4;1480:131::o;5848:173:7:-;5931:12;5958:58;5979:6;5987:4;5958:58;;;;;;;;;;;;;-1:-1:-1;;;5958:58:7;;;:20;:58::i;:::-;5951:65;5848:173;-1:-1:-1;;;5848:173:7:o;1121:302::-;-1:-1:-1;;;;;1395:19:7;;:23;;;1121:302::o;6739:624::-;6871:12;6895:7;6891:468;;;-1:-1:-1;6919:10:7;6912:17;;6891:468;7014:17;;:21;7010:343;;7224:10;7218:17;7274:15;7261:10;7257:2;7253:19;7246:44;7010:343;7331:12;7324:20;;-1:-1:-1;;;7324:20:7;;;;;;;;:::i;:::-;;;;;;;;873:779:39;1183:14;1180:1;1177;1164:34;1379:1;1376;1360:14;1357:1;1341:14;1334:5;1321:60;1443:16;1440:1;1437;1422:38;1475:6;1530:52;;;;1617:16;1614:1;1607:27;1530:52;1557:16;1554:1;1547:27;6159:408:7;6281:12;-1:-1:-1;;;;;1395:19:7;;;6301:64;;;;-1:-1:-1;;;6301:64:7;;872:2:76;6301:64:7;;;854:21:76;911:2;891:18;;;884:30;950:26;930:18;;;923:54;994:18;;6301:64:7;670:348:76;6301:64:7;6428:12;6442:23;6469:6;-1:-1:-1;;;;;6469:19:7;6489:4;6469:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6427:67;;;;6507:55;6533:7;6542:10;6554:7;6507:25;:55::i;:::-;6500:62;6159:408;-1:-1:-1;;;;;;6159:408:7:o;14:250:76:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:76;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:76;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:76:o;1023:287::-;1152:3;1190:6;1184:13;1206:66;1265:6;1260:3;1253:4;1245:6;1241:17;1206:66;:::i;:::-;1288:16;;;;;1023:287;-1:-1:-1;;1023:287:76:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "128200",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "": "infinite"
      },
      "internal": {
        "_implementation()": "infinite",
        "_setImplementation(address)": "infinite",
        "_upgradeTo(address)": "infinite",
        "_upgradeToAndCall(address,bytes memory,bool)": "infinite",
        "_upgradeToAndCallUUPS(address,bytes memory,bool)": "infinite"
      }
    },
    "methodIdentifiers": {}
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/lib/LAddress.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary LAddress {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n   *\\n   * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n   * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n   * constructor.\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies on extcodesize/address.code.length, which returns 0\\n    // for contracts in construction, since the code is only stored at the end\\n    // of the constructor execution.\\n\\n    return account.code.length > 0;\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, \\\"Insufficient balance\\\");\\n\\n    (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n    require(success, \\\"SendValue Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Performs a Solidity function call using a low level `call`. A\\n   * plain `call` is an unsafe replacement for a function call: use this\\n   * function instead.\\n   *\\n   * If `target` reverts with a revert reason, it is bubbled up by this\\n   * function (like regular Solidity function calls).\\n   *\\n   * Returns the raw returned data. To convert to the expected return value,\\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n   *\\n   * Requirements:\\n   *\\n   * - `target` must be a contract.\\n   * - calling `target` with `data` must not revert.\\n   */\\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionCall(target, data, \\\"Call Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n   * `errorMessage` as a fallback revert reason when `target` reverts.\\n   */\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but also transferring `value` wei to `target`.\\n   *\\n   * Requirements:\\n   *\\n   * - the calling contract must have an ETH balance of at least `value`.\\n   * - the called Solidity function must be `payable`.\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value\\n  ) internal returns (bytes memory) {\\n    return functionCallWithValue(target, data, value, \\\"Call With Value Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\\n   */\\n  function functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 value,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    require(address(this).balance >= value, \\\"Insufficient Balance For Call\\\");\\n    require(LAddress.isContract(target), \\\"Illegal Contract Address\\\");\\n\\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a static call.\\n   */\\n  function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n    return functionStaticCall(target, data, \\\"Static Call Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a static call.\\n   */\\n  function functionStaticCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal view returns (bytes memory) {\\n    require(LAddress.isContract(target), \\\"Illegal Contract Address\\\");\\n\\n    (bool success, bytes memory returndata) = target.staticcall(data);\\n    return verifyCallResult(success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a delegate call.\\n   */\\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionDelegateCall(target, data, \\\"Delegate Call Failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a delegate call.\\n   */\\n  function functionDelegateCall(\\n    address target,\\n    bytes memory data,\\n    string memory message\\n  ) internal returns (bytes memory) {\\n    require(LAddress.isContract(target), \\\"Illegal Contract Address\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.delegatecall(data);\\n    return LAddress.verifyCallResult(success, returndata, message);\\n  }\\n\\n  /**\\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n   * revert reason using the provided one.\\n   */\\n  function verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) internal pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      // Look for revert reason and bubble it up if present\\n      if (returndata.length > 0) {\\n        // The easiest way to bubble the revert reason is using memory via assembly\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x46ff4e0c56534a0f20a61d889f7c384fd66bc82e5fef22957accbfd49f96eec1\",\"license\":\"MIT\"},\"src/contracts/lib/LStorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary LStorageSlot {\\n  struct AddressSlot {\\n    address value;\\n  }\\n\\n  struct BooleanSlot {\\n    bool value;\\n  }\\n\\n  struct Bytes32Slot {\\n    bytes32 value;\\n  }\\n\\n  struct Uint256Slot {\\n    uint256 value;\\n  }\\n\\n  /**\\n   * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n   */\\n  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n   */\\n  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n   */\\n  function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n   */\\n  function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n    assembly {\\n      r.slot := slot\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x26ff635954bfc3cb770fe6d88fb985634429e6df94f0aed880e2882e299f301a\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract BaseProxy {\\n  /**\\n   * @dev Delegates the current call to `implementation`.\\n   *\\n   * This function does not return to its internal call site, it will return directly to the external caller.\\n   */\\n  function _delegate(address implementation) internal virtual {\\n    assembly {\\n      // Copy msg.data. We take full control of memory in this inline assembly\\n      // block because it will not return to Solidity code. We overwrite the\\n      // Solidity scratch pad at memory position 0.\\n      calldatacopy(0, 0, calldatasize())\\n\\n      // Call the implementation.\\n      // out and outsize are 0 because we don't know the size yet.\\n      let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n      // Copy the returned data.\\n      returndatacopy(0, 0, returndatasize())\\n\\n      switch result\\n      // delegatecall returns 0 on error.\\n      case 0 {\\n        revert(0, returndatasize())\\n      }\\n      default {\\n        return(0, returndatasize())\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n   * and {_fallback} should delegate.\\n   */\\n  function _implementation() internal view virtual returns (address);\\n\\n  /**\\n   * @dev Delegates the current call to the address returned by `_implementation()`.\\n   *\\n   * This function does not return to its internal call site, it will return directly to the external caller.\\n   */\\n  function _fallback() internal virtual {\\n    _beforeFallback();\\n    _delegate(_implementation());\\n  }\\n\\n  /**\\n   * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n   * function in the contract matches the call data.\\n   */\\n  fallback() external payable virtual {\\n    _fallback();\\n  }\\n\\n  /**\\n   * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n   * is empty.\\n   */\\n  receive() external payable virtual {\\n    _fallback();\\n  }\\n\\n  /**\\n   * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n   * call, or as part of the Solidity `fallback` or `receive` functions.\\n   *\\n   * If overridden should call `super._beforeFallback()`.\\n   */\\n  function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x0cdd7d1cba849ef5036b204cac99363caeffbcad876afd3fa7f4fc22d71533f3\",\"license\":\"MIT\"},\"src/contracts/proxy/BaseUUPSStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n */\\n\\nabstract contract BaseUUPSStorage {\\n  // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n  bytes32 internal constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n  /**\\n   * @dev Storage slot with the address of the current implementation.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n  /**\\n   * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n   * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n   */\\n  bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n  /**\\n   * @dev Storage slot with the admin of the contract.\\n   * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n   * validated in the constructor.\\n   */\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  bytes32 internal constant _TYPE_HASH =\\n    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n\\n  \\n  address internal immutable __self = address(this);\\n\\n  bytes32 internal _domainName;\\n  bytes32 internal _domainVersion;\\n  bytes32 internal _domainRealm;\\n  address internal _accessControlManager;\\n  bool internal _isSafeMode;\\n  bool internal _isUpgradable;\\n\\n  /**\\n   * @dev This empty reserved space is put in place to allow future versions to add new\\n   * variables without shifting down storage in the inheritance chain.\\n   */\\n  uint256[64] private __reserved;\\n}\\n\",\"keccak256\":\"0x086334b0668244b8ff2ef60dd770da77ecfd05f705e7c2251c60553c4651bfad\",\"license\":\"MIT\"},\"src/contracts/proxy/IBaseProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IBaseProxy {\\n  event Upgraded(address indexed sender, address indexed proxy, address indexed newImplementation);\\n}\\n\",\"keccak256\":\"0x719d13ceb21e3fda10fc0ba5fb1b167b8736919d6c6a99f6268667acb8b4d062\",\"license\":\"MIT\"},\"src/contracts/proxy/IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n  /**\\n   * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n   * address.\\n   *\\n   * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n   * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n   * function revert if invoked through a proxy.\\n   */\\n  function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcdbcc1ffe347082b0f072839b359e6edc0f82790fccaffd511f5f3b1f3a05102\",\"license\":\"MIT\"},\"src/contracts/proxy/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"./IBaseProxy.sol\\\";\\n\\ninterface IProxy is IBaseProxy {\\n  /**\\n   * @dev Emitted when the admin account has changed.\\n   */\\n  event LocalAdminChanged(address indexed sender, address indexed proxy, address newAdmin);\\n\\n  event SafeModeChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  event UpgradeStatusChanged(address indexed sender, address indexed proxy, bytes32 indexed realm, bool status);\\n\\n  /**\\n   * @dev Triggered when the contract has been initialized or reinitialized.\\n   */\\n  event Initialized(\\n    address indexed sender,\\n    address indexed proxy,\\n    address indexed subject,\\n    string name,\\n    string version,\\n    bytes32 realm,\\n    uint16 initCount\\n  );\\n\\n  function upgradeTo(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) external returns (bytes memory);\\n\\n  function setSafeMode(bool status) external returns (bool);\\n\\n  function setUpgradeStatus(bool status) external returns (bool);\\n\\n  function setLocalAdmin(address newAdmin) external returns (bool);\\n\\n  function contractName() external view returns (bytes32);\\n\\n  function contractVersion() external view returns (bytes32);\\n\\n  function contractRealm() external view returns (bytes32);\\n\\n  function contractContext() external view returns (bytes32);\\n\\n  function accessControlManager() external view returns (address);\\n\\n  function subjectAddress() external view returns (address);\\n\\n  function isSafeMode() external view returns (bool);\\n\\n  function isUpgradable() external view returns (bool);\\n\\n  function localAdmin() external view returns (address);\\n\\n  function domainSeparator() external view returns (bytes32);\\n\\n  function initVersion() external view returns (uint16);\\n\\n}\\n\",\"keccak256\":\"0x93bf3ccb33a8616fba3379b096e79e88ae3249882af81d1dc808eec6688800a7\",\"license\":\"MIT\"},\"src/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"./IBaseProxy.sol\\\";\\nimport \\\"./BaseProxy.sol\\\";\\nimport \\\"./IERC1822.sol\\\";\\nimport \\\"./IProxy.sol\\\";\\nimport \\\"./BaseUUPSStorage.sol\\\";\\nimport \\\"../lib/LAddress.sol\\\";\\nimport \\\"../lib/LStorageSlot.sol\\\";\\nimport \\\"../utils/IERC165.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\n\\ncontract Proxy is BaseUUPSStorage, BaseProxy, IBaseProxy {\\n  /**\\n   * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n   *\\n   * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n   * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n   */\\n  constructor(address logic, bytes memory data) payable {\\n    assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n    assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n    LStorageSlot.getAddressSlot(_ADMIN_SLOT).value = msg.sender;\\n    _isSafeMode = true;\\n    _upgradeToAndCallUUPS(logic, data, false);\\n  }\\n\\n  /**\\n   * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n   * and {_fallback} should delegate.\\n   */\\n  function _implementation() internal view override returns (address) {\\n    return LStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n  }\\n\\n  /**\\n   * @dev Stores a new address in the EIP1967 implementation slot.\\n   */\\n  function _setImplementation(address newImplementation) private {\\n    LStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n  }\\n\\n  /**\\n   * @dev Perform implementation upgrade\\n   *\\n   * Emits an {Upgraded} event.\\n   */\\n  function _upgradeTo(address newImplementation) private {\\n    _setImplementation(newImplementation);\\n    emit Upgraded(msg.sender, address(this), _implementation());\\n  }\\n\\n  /**\\n   * @dev Perform implementation upgrade with additional setup call.\\n   *\\n   * Emits an {Upgraded} event.\\n   */\\n  function _upgradeToAndCall(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) private returns (bytes memory) {\\n    _upgradeTo(newImplementation);\\n    if (data.length > 0 || forceCall) {\\n      return LAddress.functionDelegateCall(newImplementation, data);\\n    }\\n    return new bytes(0);\\n  }\\n\\n  /**\\n   * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n   *\\n   * Emits an {Upgraded} event.\\n   */\\n  function _upgradeToAndCallUUPS(\\n    address newImplementation,\\n    bytes memory data,\\n    bool forceCall\\n  ) private returns (bytes memory) {\\n    // Upgrades from old implementations will perform a rollback test. This test requires the new\\n    // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n    // this special case will break upgrade paths from old UUPS implementation to new ones.\\n    if (LStorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n      _setImplementation(newImplementation);\\n      return new bytes(0);\\n    } else {\\n      try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n        require(slot == _IMPLEMENTATION_SLOT, \\\"Invalid UUPS Contract\\\");\\n      } catch {\\n        revert(\\\"Illegal UUPS Contract\\\");\\n      }\\n\\n      try IERC165(newImplementation).supportsInterface(type(IProxy).interfaceId) returns (bool isSupported) {\\n        require(isSupported, \\\"Invalid IProxy Contract\\\");\\n      } catch {\\n        revert(\\\"Illegal IProxy Contract\\\");\\n      }\\n      return _upgradeToAndCall(newImplementation, data, forceCall);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x69dca95f07dc3b559f71e2ebb92fe39cba895c79e39a31fc66282cf363fbe74c\",\"license\":\"MIT\"},\"src/contracts/utils/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n  /**\\n   * @dev Returns true if this contract implements the interface defined by\\n   * `interfaceId`. See the corresponding\\n   * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n   * to learn more about how these ids are created.\\n   *\\n   * This function call must use less than 30 000 gas.\\n   */\\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x1a29e5e4f28e3c4116c0e31faa26fab4960723dd167b122ed9fc12b04753d1a8\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 19657,
        "contract": "src/contracts/proxy/Proxy.sol:Proxy",
        "label": "_domainName",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 19659,
        "contract": "src/contracts/proxy/Proxy.sol:Proxy",
        "label": "_domainVersion",
        "offset": 0,
        "slot": "1",
        "type": "t_bytes32"
      },
      {
        "astId": 19661,
        "contract": "src/contracts/proxy/Proxy.sol:Proxy",
        "label": "_domainRealm",
        "offset": 0,
        "slot": "2",
        "type": "t_bytes32"
      },
      {
        "astId": 19663,
        "contract": "src/contracts/proxy/Proxy.sol:Proxy",
        "label": "_accessControlManager",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 19665,
        "contract": "src/contracts/proxy/Proxy.sol:Proxy",
        "label": "_isSafeMode",
        "offset": 20,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 19667,
        "contract": "src/contracts/proxy/Proxy.sol:Proxy",
        "label": "_isUpgradable",
        "offset": 21,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 19672,
        "contract": "src/contracts/proxy/Proxy.sol:Proxy",
        "label": "__reserved",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)64_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)64_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[64]",
        "numberOfBytes": "2048"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}